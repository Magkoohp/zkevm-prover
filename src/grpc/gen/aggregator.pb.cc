// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aggregator.proto

#include "aggregator.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_aggregator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CancelRequest_aggregator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_aggregator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CancelResponse_aggregator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_aggregator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FinalProof_aggregator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_aggregator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ForcedData_aggregator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_aggregator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GenAggregatedBatchProofRequest_aggregator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_aggregator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GenAggregatedBatchProofResponse_aggregator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_aggregator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GenAggregatedBlobOuterProofRequest_aggregator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_aggregator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GenAggregatedBlobOuterProofResponse_aggregator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_aggregator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GenBatchProofRequest_aggregator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_aggregator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GenBatchProofResponse_aggregator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_aggregator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GenBlobInnerProofRequest_aggregator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_aggregator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GenBlobInnerProofResponse_aggregator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_aggregator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GenBlobOuterProofRequest_aggregator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_aggregator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GenBlobOuterProofResponse_aggregator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_aggregator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GenFinalProofRequest_aggregator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_aggregator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GenFinalProofResponse_aggregator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_aggregator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GenStatelessBatchProofRequest_aggregator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_aggregator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetProofRequest_aggregator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_aggregator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetProofResponse_aggregator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_aggregator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetStatusRequest_aggregator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_aggregator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetStatusResponse_aggregator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_aggregator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InputBlobInnerProver_aggregator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_aggregator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_InputProver_aggregator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_aggregator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InputProver_ContractsBytecodeEntry_DoNotUse_aggregator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_aggregator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InputProver_DbEntry_DoNotUse_aggregator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_aggregator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_L1Data_aggregator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_aggregator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PublicBlobInnerInputs_aggregator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_aggregator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PublicInputs_aggregator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_aggregator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PublicInputs_L1InfoTreeDataEntry_DoNotUse_aggregator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_aggregator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PublicInputsExtended_aggregator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_aggregator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StatelessInputProver_aggregator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_aggregator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StatelessPublicInputs_aggregator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_aggregator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StatelessPublicInputs_L1InfoTreeDataEntry_DoNotUse_aggregator_2eproto;
namespace aggregator {
namespace v1 {
class VersionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Version> _instance;
} _Version_default_instance_;
class AggregatorMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AggregatorMessage> _instance;
  const ::aggregator::v1::GetStatusRequest* get_status_request_;
  const ::aggregator::v1::GenBatchProofRequest* gen_batch_proof_request_;
  const ::aggregator::v1::GenAggregatedBatchProofRequest* gen_aggregated_batch_proof_request_;
  const ::aggregator::v1::GenBlobInnerProofRequest* gen_blob_inner_proof_request_;
  const ::aggregator::v1::GenBlobOuterProofRequest* gen_blob_outer_proof_request_;
  const ::aggregator::v1::GenAggregatedBlobOuterProofRequest* gen_aggregated_blob_outer_proof_request_;
  const ::aggregator::v1::GenFinalProofRequest* gen_final_proof_request_;
  const ::aggregator::v1::CancelRequest* cancel_request_;
  const ::aggregator::v1::GetProofRequest* get_proof_request_;
  const ::aggregator::v1::GenStatelessBatchProofRequest* gen_stateless_batch_proof_request_;
} _AggregatorMessage_default_instance_;
class ProverMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProverMessage> _instance;
  const ::aggregator::v1::GetStatusResponse* get_status_response_;
  const ::aggregator::v1::GenBatchProofResponse* gen_batch_proof_response_;
  const ::aggregator::v1::GenAggregatedBatchProofResponse* gen_aggregated_batch_proof_response_;
  const ::aggregator::v1::GenBlobInnerProofResponse* gen_blob_inner_proof_response_;
  const ::aggregator::v1::GenBlobOuterProofResponse* gen_blob_outer_proof_response_;
  const ::aggregator::v1::GenAggregatedBlobOuterProofResponse* gen_aggregated_blob_outer_proof_response_;
  const ::aggregator::v1::GenFinalProofResponse* gen_final_proof_response_;
  const ::aggregator::v1::CancelResponse* cancel_response_;
  const ::aggregator::v1::GetProofResponse* get_proof_response_;
} _ProverMessage_default_instance_;
class GetStatusRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetStatusRequest> _instance;
} _GetStatusRequest_default_instance_;
class GenBatchProofRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GenBatchProofRequest> _instance;
} _GenBatchProofRequest_default_instance_;
class GenStatelessBatchProofRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GenStatelessBatchProofRequest> _instance;
} _GenStatelessBatchProofRequest_default_instance_;
class GenAggregatedBatchProofRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GenAggregatedBatchProofRequest> _instance;
} _GenAggregatedBatchProofRequest_default_instance_;
class GenBlobInnerProofRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GenBlobInnerProofRequest> _instance;
} _GenBlobInnerProofRequest_default_instance_;
class GenBlobOuterProofRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GenBlobOuterProofRequest> _instance;
} _GenBlobOuterProofRequest_default_instance_;
class GenAggregatedBlobOuterProofRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GenAggregatedBlobOuterProofRequest> _instance;
} _GenAggregatedBlobOuterProofRequest_default_instance_;
class GenFinalProofRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GenFinalProofRequest> _instance;
} _GenFinalProofRequest_default_instance_;
class CancelRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CancelRequest> _instance;
} _CancelRequest_default_instance_;
class GetProofRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetProofRequest> _instance;
} _GetProofRequest_default_instance_;
class GetStatusResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetStatusResponse> _instance;
} _GetStatusResponse_default_instance_;
class GenBatchProofResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GenBatchProofResponse> _instance;
} _GenBatchProofResponse_default_instance_;
class GenAggregatedBatchProofResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GenAggregatedBatchProofResponse> _instance;
} _GenAggregatedBatchProofResponse_default_instance_;
class GenBlobInnerProofResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GenBlobInnerProofResponse> _instance;
} _GenBlobInnerProofResponse_default_instance_;
class GenBlobOuterProofResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GenBlobOuterProofResponse> _instance;
} _GenBlobOuterProofResponse_default_instance_;
class GenAggregatedBlobOuterProofResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GenAggregatedBlobOuterProofResponse> _instance;
} _GenAggregatedBlobOuterProofResponse_default_instance_;
class GenFinalProofResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GenFinalProofResponse> _instance;
} _GenFinalProofResponse_default_instance_;
class CancelResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CancelResponse> _instance;
} _CancelResponse_default_instance_;
class GetProofResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetProofResponse> _instance;
  const ::aggregator::v1::FinalProof* final_proof_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr recursive_proof_;
} _GetProofResponse_default_instance_;
class FinalProofDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FinalProof> _instance;
} _FinalProof_default_instance_;
class PublicInputs_L1InfoTreeDataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PublicInputs_L1InfoTreeDataEntry_DoNotUse> _instance;
} _PublicInputs_L1InfoTreeDataEntry_DoNotUse_default_instance_;
class PublicInputsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PublicInputs> _instance;
} _PublicInputs_default_instance_;
class ForcedDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ForcedData> _instance;
} _ForcedData_default_instance_;
class PublicBlobInnerInputsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PublicBlobInnerInputs> _instance;
} _PublicBlobInnerInputs_default_instance_;
class StatelessPublicInputs_L1InfoTreeDataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StatelessPublicInputs_L1InfoTreeDataEntry_DoNotUse> _instance;
} _StatelessPublicInputs_L1InfoTreeDataEntry_DoNotUse_default_instance_;
class StatelessPublicInputsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StatelessPublicInputs> _instance;
} _StatelessPublicInputs_default_instance_;
class L1DataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<L1Data> _instance;
} _L1Data_default_instance_;
class InputProver_DbEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InputProver_DbEntry_DoNotUse> _instance;
} _InputProver_DbEntry_DoNotUse_default_instance_;
class InputProver_ContractsBytecodeEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InputProver_ContractsBytecodeEntry_DoNotUse> _instance;
} _InputProver_ContractsBytecodeEntry_DoNotUse_default_instance_;
class InputProverDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InputProver> _instance;
} _InputProver_default_instance_;
class InputBlobInnerProverDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InputBlobInnerProver> _instance;
} _InputBlobInnerProver_default_instance_;
class StatelessInputProverDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StatelessInputProver> _instance;
} _StatelessInputProver_default_instance_;
class PublicInputsExtendedDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PublicInputsExtended> _instance;
} _PublicInputsExtended_default_instance_;
}  // namespace v1
}  // namespace aggregator
static void InitDefaultsscc_info_AggregatorMessage_aggregator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aggregator::v1::_AggregatorMessage_default_instance_;
    new (ptr) ::aggregator::v1::AggregatorMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aggregator::v1::AggregatorMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<10> scc_info_AggregatorMessage_aggregator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 10, 0, InitDefaultsscc_info_AggregatorMessage_aggregator_2eproto}, {
      &scc_info_GetStatusRequest_aggregator_2eproto.base,
      &scc_info_GenBatchProofRequest_aggregator_2eproto.base,
      &scc_info_GenAggregatedBatchProofRequest_aggregator_2eproto.base,
      &scc_info_GenBlobInnerProofRequest_aggregator_2eproto.base,
      &scc_info_GenBlobOuterProofRequest_aggregator_2eproto.base,
      &scc_info_GenAggregatedBlobOuterProofRequest_aggregator_2eproto.base,
      &scc_info_GenFinalProofRequest_aggregator_2eproto.base,
      &scc_info_CancelRequest_aggregator_2eproto.base,
      &scc_info_GetProofRequest_aggregator_2eproto.base,
      &scc_info_GenStatelessBatchProofRequest_aggregator_2eproto.base,}};

static void InitDefaultsscc_info_CancelRequest_aggregator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aggregator::v1::_CancelRequest_default_instance_;
    new (ptr) ::aggregator::v1::CancelRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aggregator::v1::CancelRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CancelRequest_aggregator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CancelRequest_aggregator_2eproto}, {}};

static void InitDefaultsscc_info_CancelResponse_aggregator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aggregator::v1::_CancelResponse_default_instance_;
    new (ptr) ::aggregator::v1::CancelResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aggregator::v1::CancelResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CancelResponse_aggregator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CancelResponse_aggregator_2eproto}, {}};

static void InitDefaultsscc_info_FinalProof_aggregator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aggregator::v1::_FinalProof_default_instance_;
    new (ptr) ::aggregator::v1::FinalProof();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aggregator::v1::FinalProof::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FinalProof_aggregator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_FinalProof_aggregator_2eproto}, {
      &scc_info_PublicInputsExtended_aggregator_2eproto.base,}};

static void InitDefaultsscc_info_ForcedData_aggregator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aggregator::v1::_ForcedData_default_instance_;
    new (ptr) ::aggregator::v1::ForcedData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aggregator::v1::ForcedData::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ForcedData_aggregator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ForcedData_aggregator_2eproto}, {}};

static void InitDefaultsscc_info_GenAggregatedBatchProofRequest_aggregator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aggregator::v1::_GenAggregatedBatchProofRequest_default_instance_;
    new (ptr) ::aggregator::v1::GenAggregatedBatchProofRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aggregator::v1::GenAggregatedBatchProofRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GenAggregatedBatchProofRequest_aggregator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GenAggregatedBatchProofRequest_aggregator_2eproto}, {}};

static void InitDefaultsscc_info_GenAggregatedBatchProofResponse_aggregator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aggregator::v1::_GenAggregatedBatchProofResponse_default_instance_;
    new (ptr) ::aggregator::v1::GenAggregatedBatchProofResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aggregator::v1::GenAggregatedBatchProofResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GenAggregatedBatchProofResponse_aggregator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GenAggregatedBatchProofResponse_aggregator_2eproto}, {}};

static void InitDefaultsscc_info_GenAggregatedBlobOuterProofRequest_aggregator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aggregator::v1::_GenAggregatedBlobOuterProofRequest_default_instance_;
    new (ptr) ::aggregator::v1::GenAggregatedBlobOuterProofRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aggregator::v1::GenAggregatedBlobOuterProofRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GenAggregatedBlobOuterProofRequest_aggregator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GenAggregatedBlobOuterProofRequest_aggregator_2eproto}, {}};

static void InitDefaultsscc_info_GenAggregatedBlobOuterProofResponse_aggregator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aggregator::v1::_GenAggregatedBlobOuterProofResponse_default_instance_;
    new (ptr) ::aggregator::v1::GenAggregatedBlobOuterProofResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aggregator::v1::GenAggregatedBlobOuterProofResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GenAggregatedBlobOuterProofResponse_aggregator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GenAggregatedBlobOuterProofResponse_aggregator_2eproto}, {}};

static void InitDefaultsscc_info_GenBatchProofRequest_aggregator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aggregator::v1::_GenBatchProofRequest_default_instance_;
    new (ptr) ::aggregator::v1::GenBatchProofRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aggregator::v1::GenBatchProofRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GenBatchProofRequest_aggregator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GenBatchProofRequest_aggregator_2eproto}, {
      &scc_info_InputProver_aggregator_2eproto.base,}};

static void InitDefaultsscc_info_GenBatchProofResponse_aggregator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aggregator::v1::_GenBatchProofResponse_default_instance_;
    new (ptr) ::aggregator::v1::GenBatchProofResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aggregator::v1::GenBatchProofResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GenBatchProofResponse_aggregator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GenBatchProofResponse_aggregator_2eproto}, {}};

static void InitDefaultsscc_info_GenBlobInnerProofRequest_aggregator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aggregator::v1::_GenBlobInnerProofRequest_default_instance_;
    new (ptr) ::aggregator::v1::GenBlobInnerProofRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aggregator::v1::GenBlobInnerProofRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GenBlobInnerProofRequest_aggregator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GenBlobInnerProofRequest_aggregator_2eproto}, {
      &scc_info_InputBlobInnerProver_aggregator_2eproto.base,}};

static void InitDefaultsscc_info_GenBlobInnerProofResponse_aggregator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aggregator::v1::_GenBlobInnerProofResponse_default_instance_;
    new (ptr) ::aggregator::v1::GenBlobInnerProofResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aggregator::v1::GenBlobInnerProofResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GenBlobInnerProofResponse_aggregator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GenBlobInnerProofResponse_aggregator_2eproto}, {}};

static void InitDefaultsscc_info_GenBlobOuterProofRequest_aggregator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aggregator::v1::_GenBlobOuterProofRequest_default_instance_;
    new (ptr) ::aggregator::v1::GenBlobOuterProofRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aggregator::v1::GenBlobOuterProofRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GenBlobOuterProofRequest_aggregator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GenBlobOuterProofRequest_aggregator_2eproto}, {}};

static void InitDefaultsscc_info_GenBlobOuterProofResponse_aggregator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aggregator::v1::_GenBlobOuterProofResponse_default_instance_;
    new (ptr) ::aggregator::v1::GenBlobOuterProofResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aggregator::v1::GenBlobOuterProofResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GenBlobOuterProofResponse_aggregator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GenBlobOuterProofResponse_aggregator_2eproto}, {}};

static void InitDefaultsscc_info_GenFinalProofRequest_aggregator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aggregator::v1::_GenFinalProofRequest_default_instance_;
    new (ptr) ::aggregator::v1::GenFinalProofRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aggregator::v1::GenFinalProofRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GenFinalProofRequest_aggregator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GenFinalProofRequest_aggregator_2eproto}, {}};

static void InitDefaultsscc_info_GenFinalProofResponse_aggregator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aggregator::v1::_GenFinalProofResponse_default_instance_;
    new (ptr) ::aggregator::v1::GenFinalProofResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aggregator::v1::GenFinalProofResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GenFinalProofResponse_aggregator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GenFinalProofResponse_aggregator_2eproto}, {}};

static void InitDefaultsscc_info_GenStatelessBatchProofRequest_aggregator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aggregator::v1::_GenStatelessBatchProofRequest_default_instance_;
    new (ptr) ::aggregator::v1::GenStatelessBatchProofRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aggregator::v1::GenStatelessBatchProofRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GenStatelessBatchProofRequest_aggregator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GenStatelessBatchProofRequest_aggregator_2eproto}, {
      &scc_info_StatelessInputProver_aggregator_2eproto.base,}};

static void InitDefaultsscc_info_GetProofRequest_aggregator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aggregator::v1::_GetProofRequest_default_instance_;
    new (ptr) ::aggregator::v1::GetProofRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aggregator::v1::GetProofRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetProofRequest_aggregator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetProofRequest_aggregator_2eproto}, {}};

static void InitDefaultsscc_info_GetProofResponse_aggregator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aggregator::v1::_GetProofResponse_default_instance_;
    new (ptr) ::aggregator::v1::GetProofResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aggregator::v1::GetProofResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetProofResponse_aggregator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetProofResponse_aggregator_2eproto}, {
      &scc_info_FinalProof_aggregator_2eproto.base,}};

static void InitDefaultsscc_info_GetStatusRequest_aggregator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aggregator::v1::_GetStatusRequest_default_instance_;
    new (ptr) ::aggregator::v1::GetStatusRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aggregator::v1::GetStatusRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetStatusRequest_aggregator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetStatusRequest_aggregator_2eproto}, {}};

static void InitDefaultsscc_info_GetStatusResponse_aggregator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aggregator::v1::_GetStatusResponse_default_instance_;
    new (ptr) ::aggregator::v1::GetStatusResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aggregator::v1::GetStatusResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetStatusResponse_aggregator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetStatusResponse_aggregator_2eproto}, {}};

static void InitDefaultsscc_info_InputBlobInnerProver_aggregator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aggregator::v1::_InputBlobInnerProver_default_instance_;
    new (ptr) ::aggregator::v1::InputBlobInnerProver();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aggregator::v1::InputBlobInnerProver::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InputBlobInnerProver_aggregator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_InputBlobInnerProver_aggregator_2eproto}, {
      &scc_info_PublicBlobInnerInputs_aggregator_2eproto.base,}};

static void InitDefaultsscc_info_InputProver_aggregator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aggregator::v1::_InputProver_default_instance_;
    new (ptr) ::aggregator::v1::InputProver();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aggregator::v1::InputProver::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_InputProver_aggregator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_InputProver_aggregator_2eproto}, {
      &scc_info_PublicInputs_aggregator_2eproto.base,
      &scc_info_InputProver_DbEntry_DoNotUse_aggregator_2eproto.base,
      &scc_info_InputProver_ContractsBytecodeEntry_DoNotUse_aggregator_2eproto.base,}};

static void InitDefaultsscc_info_InputProver_ContractsBytecodeEntry_DoNotUse_aggregator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aggregator::v1::_InputProver_ContractsBytecodeEntry_DoNotUse_default_instance_;
    new (ptr) ::aggregator::v1::InputProver_ContractsBytecodeEntry_DoNotUse();
  }
  ::aggregator::v1::InputProver_ContractsBytecodeEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InputProver_ContractsBytecodeEntry_DoNotUse_aggregator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_InputProver_ContractsBytecodeEntry_DoNotUse_aggregator_2eproto}, {}};

static void InitDefaultsscc_info_InputProver_DbEntry_DoNotUse_aggregator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aggregator::v1::_InputProver_DbEntry_DoNotUse_default_instance_;
    new (ptr) ::aggregator::v1::InputProver_DbEntry_DoNotUse();
  }
  ::aggregator::v1::InputProver_DbEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InputProver_DbEntry_DoNotUse_aggregator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_InputProver_DbEntry_DoNotUse_aggregator_2eproto}, {}};

static void InitDefaultsscc_info_L1Data_aggregator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aggregator::v1::_L1Data_default_instance_;
    new (ptr) ::aggregator::v1::L1Data();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aggregator::v1::L1Data::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_L1Data_aggregator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_L1Data_aggregator_2eproto}, {}};

static void InitDefaultsscc_info_ProverMessage_aggregator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aggregator::v1::_ProverMessage_default_instance_;
    new (ptr) ::aggregator::v1::ProverMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aggregator::v1::ProverMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<9> scc_info_ProverMessage_aggregator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 9, 0, InitDefaultsscc_info_ProverMessage_aggregator_2eproto}, {
      &scc_info_GetStatusResponse_aggregator_2eproto.base,
      &scc_info_GenBatchProofResponse_aggregator_2eproto.base,
      &scc_info_GenAggregatedBatchProofResponse_aggregator_2eproto.base,
      &scc_info_GenBlobInnerProofResponse_aggregator_2eproto.base,
      &scc_info_GenBlobOuterProofResponse_aggregator_2eproto.base,
      &scc_info_GenAggregatedBlobOuterProofResponse_aggregator_2eproto.base,
      &scc_info_GenFinalProofResponse_aggregator_2eproto.base,
      &scc_info_CancelResponse_aggregator_2eproto.base,
      &scc_info_GetProofResponse_aggregator_2eproto.base,}};

static void InitDefaultsscc_info_PublicBlobInnerInputs_aggregator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aggregator::v1::_PublicBlobInnerInputs_default_instance_;
    new (ptr) ::aggregator::v1::PublicBlobInnerInputs();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aggregator::v1::PublicBlobInnerInputs::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PublicBlobInnerInputs_aggregator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PublicBlobInnerInputs_aggregator_2eproto}, {}};

static void InitDefaultsscc_info_PublicInputs_aggregator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aggregator::v1::_PublicInputs_default_instance_;
    new (ptr) ::aggregator::v1::PublicInputs();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aggregator::v1::PublicInputs::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PublicInputs_aggregator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_PublicInputs_aggregator_2eproto}, {
      &scc_info_ForcedData_aggregator_2eproto.base,
      &scc_info_PublicInputs_L1InfoTreeDataEntry_DoNotUse_aggregator_2eproto.base,}};

static void InitDefaultsscc_info_PublicInputs_L1InfoTreeDataEntry_DoNotUse_aggregator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aggregator::v1::_PublicInputs_L1InfoTreeDataEntry_DoNotUse_default_instance_;
    new (ptr) ::aggregator::v1::PublicInputs_L1InfoTreeDataEntry_DoNotUse();
  }
  ::aggregator::v1::PublicInputs_L1InfoTreeDataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PublicInputs_L1InfoTreeDataEntry_DoNotUse_aggregator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PublicInputs_L1InfoTreeDataEntry_DoNotUse_aggregator_2eproto}, {
      &scc_info_L1Data_aggregator_2eproto.base,}};

static void InitDefaultsscc_info_PublicInputsExtended_aggregator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aggregator::v1::_PublicInputsExtended_default_instance_;
    new (ptr) ::aggregator::v1::PublicInputsExtended();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aggregator::v1::PublicInputsExtended::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PublicInputsExtended_aggregator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PublicInputsExtended_aggregator_2eproto}, {
      &scc_info_PublicInputs_aggregator_2eproto.base,}};

static void InitDefaultsscc_info_StatelessInputProver_aggregator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aggregator::v1::_StatelessInputProver_default_instance_;
    new (ptr) ::aggregator::v1::StatelessInputProver();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aggregator::v1::StatelessInputProver::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StatelessInputProver_aggregator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_StatelessInputProver_aggregator_2eproto}, {
      &scc_info_StatelessPublicInputs_aggregator_2eproto.base,}};

static void InitDefaultsscc_info_StatelessPublicInputs_aggregator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aggregator::v1::_StatelessPublicInputs_default_instance_;
    new (ptr) ::aggregator::v1::StatelessPublicInputs();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aggregator::v1::StatelessPublicInputs::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StatelessPublicInputs_aggregator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_StatelessPublicInputs_aggregator_2eproto}, {
      &scc_info_StatelessPublicInputs_L1InfoTreeDataEntry_DoNotUse_aggregator_2eproto.base,}};

static void InitDefaultsscc_info_StatelessPublicInputs_L1InfoTreeDataEntry_DoNotUse_aggregator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aggregator::v1::_StatelessPublicInputs_L1InfoTreeDataEntry_DoNotUse_default_instance_;
    new (ptr) ::aggregator::v1::StatelessPublicInputs_L1InfoTreeDataEntry_DoNotUse();
  }
  ::aggregator::v1::StatelessPublicInputs_L1InfoTreeDataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StatelessPublicInputs_L1InfoTreeDataEntry_DoNotUse_aggregator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_StatelessPublicInputs_L1InfoTreeDataEntry_DoNotUse_aggregator_2eproto}, {
      &scc_info_L1Data_aggregator_2eproto.base,}};

static void InitDefaultsscc_info_Version_aggregator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aggregator::v1::_Version_default_instance_;
    new (ptr) ::aggregator::v1::Version();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aggregator::v1::Version::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Version_aggregator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Version_aggregator_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_aggregator_2eproto[36];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_aggregator_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_aggregator_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_aggregator_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::Version, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::Version, v0_0_1_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::AggregatorMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::AggregatorMessage, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::AggregatorMessage, id_),
  offsetof(::aggregator::v1::AggregatorMessageDefaultTypeInternal, get_status_request_),
  offsetof(::aggregator::v1::AggregatorMessageDefaultTypeInternal, gen_batch_proof_request_),
  offsetof(::aggregator::v1::AggregatorMessageDefaultTypeInternal, gen_aggregated_batch_proof_request_),
  offsetof(::aggregator::v1::AggregatorMessageDefaultTypeInternal, gen_blob_inner_proof_request_),
  offsetof(::aggregator::v1::AggregatorMessageDefaultTypeInternal, gen_blob_outer_proof_request_),
  offsetof(::aggregator::v1::AggregatorMessageDefaultTypeInternal, gen_aggregated_blob_outer_proof_request_),
  offsetof(::aggregator::v1::AggregatorMessageDefaultTypeInternal, gen_final_proof_request_),
  offsetof(::aggregator::v1::AggregatorMessageDefaultTypeInternal, cancel_request_),
  offsetof(::aggregator::v1::AggregatorMessageDefaultTypeInternal, get_proof_request_),
  offsetof(::aggregator::v1::AggregatorMessageDefaultTypeInternal, gen_stateless_batch_proof_request_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::AggregatorMessage, request_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::ProverMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::ProverMessage, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::ProverMessage, id_),
  offsetof(::aggregator::v1::ProverMessageDefaultTypeInternal, get_status_response_),
  offsetof(::aggregator::v1::ProverMessageDefaultTypeInternal, gen_batch_proof_response_),
  offsetof(::aggregator::v1::ProverMessageDefaultTypeInternal, gen_aggregated_batch_proof_response_),
  offsetof(::aggregator::v1::ProverMessageDefaultTypeInternal, gen_blob_inner_proof_response_),
  offsetof(::aggregator::v1::ProverMessageDefaultTypeInternal, gen_blob_outer_proof_response_),
  offsetof(::aggregator::v1::ProverMessageDefaultTypeInternal, gen_aggregated_blob_outer_proof_response_),
  offsetof(::aggregator::v1::ProverMessageDefaultTypeInternal, gen_final_proof_response_),
  offsetof(::aggregator::v1::ProverMessageDefaultTypeInternal, cancel_response_),
  offsetof(::aggregator::v1::ProverMessageDefaultTypeInternal, get_proof_response_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::ProverMessage, response_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GetStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GenBatchProofRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GenBatchProofRequest, input_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GenStatelessBatchProofRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GenStatelessBatchProofRequest, input_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GenAggregatedBatchProofRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GenAggregatedBatchProofRequest, recursive_proof_1_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GenAggregatedBatchProofRequest, recursive_proof_2_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GenBlobInnerProofRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GenBlobInnerProofRequest, input_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GenBlobOuterProofRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GenBlobOuterProofRequest, batch_proof_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GenBlobOuterProofRequest, blob_inner_proof_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GenAggregatedBlobOuterProofRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GenAggregatedBlobOuterProofRequest, recursive_proof_1_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GenAggregatedBlobOuterProofRequest, recursive_proof_2_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GenFinalProofRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GenFinalProofRequest, recursive_proof_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GenFinalProofRequest, aggregator_addr_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::CancelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::CancelRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GetProofRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GetProofRequest, id_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GetProofRequest, timeout_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GetStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GetStatusResponse, status_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GetStatusResponse, last_computed_request_id_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GetStatusResponse, last_computed_end_time_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GetStatusResponse, current_computing_request_id_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GetStatusResponse, current_computing_start_time_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GetStatusResponse, version_proto_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GetStatusResponse, version_server_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GetStatusResponse, pending_request_queue_ids_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GetStatusResponse, prover_name_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GetStatusResponse, prover_id_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GetStatusResponse, number_of_cores_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GetStatusResponse, total_memory_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GetStatusResponse, free_memory_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GetStatusResponse, fork_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GenBatchProofResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GenBatchProofResponse, id_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GenBatchProofResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GenAggregatedBatchProofResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GenAggregatedBatchProofResponse, id_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GenAggregatedBatchProofResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GenBlobInnerProofResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GenBlobInnerProofResponse, id_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GenBlobInnerProofResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GenBlobOuterProofResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GenBlobOuterProofResponse, id_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GenBlobOuterProofResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GenAggregatedBlobOuterProofResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GenAggregatedBlobOuterProofResponse, id_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GenAggregatedBlobOuterProofResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GenFinalProofResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GenFinalProofResponse, id_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GenFinalProofResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::CancelResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::CancelResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GetProofResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GetProofResponse, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GetProofResponse, id_),
  offsetof(::aggregator::v1::GetProofResponseDefaultTypeInternal, final_proof_),
  offsetof(::aggregator::v1::GetProofResponseDefaultTypeInternal, recursive_proof_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GetProofResponse, result_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GetProofResponse, result_string_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::GetProofResponse, proof_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::FinalProof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::FinalProof, proof_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::FinalProof, public__),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicInputs_L1InfoTreeDataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicInputs_L1InfoTreeDataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicInputs_L1InfoTreeDataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicInputs_L1InfoTreeDataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicInputs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicInputs, old_state_root_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicInputs, old_batch_acc_input_hash_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicInputs, previous_l1_info_tree_root_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicInputs, previous_l1_info_tree_index_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicInputs, chain_id_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicInputs, fork_id_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicInputs, batch_l2_data_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicInputs, sequencer_addr_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicInputs, type_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicInputs, forced_hash_data_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicInputs, forced_data_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicInputs, aggregator_addr_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicInputs, l1_info_tree_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::ForcedData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::ForcedData, global_exit_root_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::ForcedData, block_hash_l1_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::ForcedData, min_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicBlobInnerInputs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicBlobInnerInputs, old_blob_state_root_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicBlobInnerInputs, old_blob_acc_input_hash_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicBlobInnerInputs, old_num_blob_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicBlobInnerInputs, old_state_root_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicBlobInnerInputs, fork_id_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicBlobInnerInputs, last_l1_info_tree_index_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicBlobInnerInputs, last_l1_info_tree_root_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicBlobInnerInputs, sequencer_addr_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicBlobInnerInputs, timestamp_limit_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicBlobInnerInputs, zk_gas_limit_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicBlobInnerInputs, type_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicBlobInnerInputs, point_z_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicBlobInnerInputs, point_y_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicBlobInnerInputs, blob_data_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicBlobInnerInputs, forced_hash_data_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::StatelessPublicInputs_L1InfoTreeDataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::StatelessPublicInputs_L1InfoTreeDataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::StatelessPublicInputs_L1InfoTreeDataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::StatelessPublicInputs_L1InfoTreeDataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::StatelessPublicInputs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::StatelessPublicInputs, witness_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::StatelessPublicInputs, data_stream_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::StatelessPublicInputs, old_acc_input_hash_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::StatelessPublicInputs, l1_info_root_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::StatelessPublicInputs, timestamp_limit_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::StatelessPublicInputs, sequencer_addr_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::StatelessPublicInputs, forced_blockhash_l1_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::StatelessPublicInputs, aggregator_addr_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::StatelessPublicInputs, l1_info_tree_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::L1Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::L1Data, global_exit_root_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::L1Data, block_hash_l1_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::L1Data, min_timestamp_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::L1Data, smt_proof_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::L1Data, initial_historic_root_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::InputProver_DbEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::InputProver_DbEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::InputProver_DbEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::InputProver_DbEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::InputProver_ContractsBytecodeEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::InputProver_ContractsBytecodeEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::InputProver_ContractsBytecodeEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::InputProver_ContractsBytecodeEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::InputProver, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::InputProver, public_inputs_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::InputProver, db_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::InputProver, contracts_bytecode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::InputBlobInnerProver, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::InputBlobInnerProver, public_inputs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::StatelessInputProver, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::StatelessInputProver, public_inputs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicInputsExtended, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicInputsExtended, public_inputs_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicInputsExtended, new_state_root_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicInputsExtended, new_batch_acc_input_hash_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicInputsExtended, new_local_exit_root_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicInputsExtended, new_last_timestamp_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicInputsExtended, current_l1_info_tree_root_),
  PROTOBUF_FIELD_OFFSET(::aggregator::v1::PublicInputsExtended, current_l1_info_tree_index_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::aggregator::v1::Version)},
  { 6, -1, sizeof(::aggregator::v1::AggregatorMessage)},
  { 23, -1, sizeof(::aggregator::v1::ProverMessage)},
  { 39, -1, sizeof(::aggregator::v1::GetStatusRequest)},
  { 44, -1, sizeof(::aggregator::v1::GenBatchProofRequest)},
  { 50, -1, sizeof(::aggregator::v1::GenStatelessBatchProofRequest)},
  { 56, -1, sizeof(::aggregator::v1::GenAggregatedBatchProofRequest)},
  { 63, -1, sizeof(::aggregator::v1::GenBlobInnerProofRequest)},
  { 69, -1, sizeof(::aggregator::v1::GenBlobOuterProofRequest)},
  { 76, -1, sizeof(::aggregator::v1::GenAggregatedBlobOuterProofRequest)},
  { 83, -1, sizeof(::aggregator::v1::GenFinalProofRequest)},
  { 90, -1, sizeof(::aggregator::v1::CancelRequest)},
  { 96, -1, sizeof(::aggregator::v1::GetProofRequest)},
  { 103, -1, sizeof(::aggregator::v1::GetStatusResponse)},
  { 122, -1, sizeof(::aggregator::v1::GenBatchProofResponse)},
  { 129, -1, sizeof(::aggregator::v1::GenAggregatedBatchProofResponse)},
  { 136, -1, sizeof(::aggregator::v1::GenBlobInnerProofResponse)},
  { 143, -1, sizeof(::aggregator::v1::GenBlobOuterProofResponse)},
  { 150, -1, sizeof(::aggregator::v1::GenAggregatedBlobOuterProofResponse)},
  { 157, -1, sizeof(::aggregator::v1::GenFinalProofResponse)},
  { 164, -1, sizeof(::aggregator::v1::CancelResponse)},
  { 170, -1, sizeof(::aggregator::v1::GetProofResponse)},
  { 181, -1, sizeof(::aggregator::v1::FinalProof)},
  { 188, 195, sizeof(::aggregator::v1::PublicInputs_L1InfoTreeDataEntry_DoNotUse)},
  { 197, -1, sizeof(::aggregator::v1::PublicInputs)},
  { 215, -1, sizeof(::aggregator::v1::ForcedData)},
  { 223, -1, sizeof(::aggregator::v1::PublicBlobInnerInputs)},
  { 243, 250, sizeof(::aggregator::v1::StatelessPublicInputs_L1InfoTreeDataEntry_DoNotUse)},
  { 252, -1, sizeof(::aggregator::v1::StatelessPublicInputs)},
  { 266, -1, sizeof(::aggregator::v1::L1Data)},
  { 276, 283, sizeof(::aggregator::v1::InputProver_DbEntry_DoNotUse)},
  { 285, 292, sizeof(::aggregator::v1::InputProver_ContractsBytecodeEntry_DoNotUse)},
  { 294, -1, sizeof(::aggregator::v1::InputProver)},
  { 302, -1, sizeof(::aggregator::v1::InputBlobInnerProver)},
  { 308, -1, sizeof(::aggregator::v1::StatelessInputProver)},
  { 314, -1, sizeof(::aggregator::v1::PublicInputsExtended)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aggregator::v1::_Version_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aggregator::v1::_AggregatorMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aggregator::v1::_ProverMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aggregator::v1::_GetStatusRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aggregator::v1::_GenBatchProofRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aggregator::v1::_GenStatelessBatchProofRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aggregator::v1::_GenAggregatedBatchProofRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aggregator::v1::_GenBlobInnerProofRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aggregator::v1::_GenBlobOuterProofRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aggregator::v1::_GenAggregatedBlobOuterProofRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aggregator::v1::_GenFinalProofRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aggregator::v1::_CancelRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aggregator::v1::_GetProofRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aggregator::v1::_GetStatusResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aggregator::v1::_GenBatchProofResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aggregator::v1::_GenAggregatedBatchProofResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aggregator::v1::_GenBlobInnerProofResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aggregator::v1::_GenBlobOuterProofResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aggregator::v1::_GenAggregatedBlobOuterProofResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aggregator::v1::_GenFinalProofResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aggregator::v1::_CancelResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aggregator::v1::_GetProofResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aggregator::v1::_FinalProof_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aggregator::v1::_PublicInputs_L1InfoTreeDataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aggregator::v1::_PublicInputs_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aggregator::v1::_ForcedData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aggregator::v1::_PublicBlobInnerInputs_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aggregator::v1::_StatelessPublicInputs_L1InfoTreeDataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aggregator::v1::_StatelessPublicInputs_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aggregator::v1::_L1Data_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aggregator::v1::_InputProver_DbEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aggregator::v1::_InputProver_ContractsBytecodeEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aggregator::v1::_InputProver_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aggregator::v1::_InputBlobInnerProver_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aggregator::v1::_StatelessInputProver_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aggregator::v1::_PublicInputsExtended_default_instance_),
};

const char descriptor_table_protodef_aggregator_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020aggregator.proto\022\raggregator.v1\"\031\n\007Ver"
  "sion\022\016\n\006v0_0_1\030\001 \001(\t\"\256\006\n\021AggregatorMessa"
  "ge\022\n\n\002id\030\001 \001(\t\022=\n\022get_status_request\030\002 \001"
  "(\0132\037.aggregator.v1.GetStatusRequestH\000\022F\n"
  "\027gen_batch_proof_request\030\003 \001(\0132#.aggrega"
  "tor.v1.GenBatchProofRequestH\000\022[\n\"gen_agg"
  "regated_batch_proof_request\030\004 \001(\0132-.aggr"
  "egator.v1.GenAggregatedBatchProofRequest"
  "H\000\022O\n\034gen_blob_inner_proof_request\030\005 \001(\013"
  "2\'.aggregator.v1.GenBlobInnerProofReques"
  "tH\000\022O\n\034gen_blob_outer_proof_request\030\006 \001("
  "\0132\'.aggregator.v1.GenBlobOuterProofReque"
  "stH\000\022d\n\'gen_aggregated_blob_outer_proof_"
  "request\030\007 \001(\01321.aggregator.v1.GenAggrega"
  "tedBlobOuterProofRequestH\000\022F\n\027gen_final_"
  "proof_request\030\010 \001(\0132#.aggregator.v1.GenF"
  "inalProofRequestH\000\0226\n\016cancel_request\030\t \001"
  "(\0132\034.aggregator.v1.CancelRequestH\000\022;\n\021ge"
  "t_proof_request\030\n \001(\0132\036.aggregator.v1.Ge"
  "tProofRequestH\000\022Y\n!gen_stateless_batch_p"
  "roof_request\030\013 \001(\0132,.aggregator.v1.GenSt"
  "atelessBatchProofRequestH\000B\t\n\007request\"\342\005"
  "\n\rProverMessage\022\n\n\002id\030\001 \001(\t\022\?\n\023get_statu"
  "s_response\030\002 \001(\0132 .aggregator.v1.GetStat"
  "usResponseH\000\022H\n\030gen_batch_proof_response"
  "\030\003 \001(\0132$.aggregator.v1.GenBatchProofResp"
  "onseH\000\022]\n#gen_aggregated_batch_proof_res"
  "ponse\030\004 \001(\0132..aggregator.v1.GenAggregate"
  "dBatchProofResponseH\000\022Q\n\035gen_blob_inner_"
  "proof_response\030\005 \001(\0132(.aggregator.v1.Gen"
  "BlobInnerProofResponseH\000\022Q\n\035gen_blob_out"
  "er_proof_response\030\006 \001(\0132(.aggregator.v1."
  "GenBlobOuterProofResponseH\000\022f\n(gen_aggre"
  "gated_blob_outer_proof_response\030\007 \001(\01322."
  "aggregator.v1.GenAggregatedBlobOuterProo"
  "fResponseH\000\022H\n\030gen_final_proof_response\030"
  "\010 \001(\0132$.aggregator.v1.GenFinalProofRespo"
  "nseH\000\0228\n\017cancel_response\030\t \001(\0132\035.aggrega"
  "tor.v1.CancelResponseH\000\022=\n\022get_proof_res"
  "ponse\030\n \001(\0132\037.aggregator.v1.GetProofResp"
  "onseH\000B\n\n\010response\"\022\n\020GetStatusRequest\"A"
  "\n\024GenBatchProofRequest\022)\n\005input\030\001 \001(\0132\032."
  "aggregator.v1.InputProver\"S\n\035GenStateles"
  "sBatchProofRequest\0222\n\005input\030\001 \001(\0132#.aggr"
  "egator.v1.StatelessInputProver\"V\n\036GenAgg"
  "regatedBatchProofRequest\022\031\n\021recursive_pr"
  "oof_1\030\001 \001(\t\022\031\n\021recursive_proof_2\030\002 \001(\t\"N"
  "\n\030GenBlobInnerProofRequest\0222\n\005input\030\001 \001("
  "\0132#.aggregator.v1.InputBlobInnerProver\"I"
  "\n\030GenBlobOuterProofRequest\022\023\n\013batch_proo"
  "f\030\001 \001(\t\022\030\n\020blob_inner_proof\030\002 \001(\t\"Z\n\"Gen"
  "AggregatedBlobOuterProofRequest\022\031\n\021recur"
  "sive_proof_1\030\001 \001(\t\022\031\n\021recursive_proof_2\030"
  "\002 \001(\t\"H\n\024GenFinalProofRequest\022\027\n\017recursi"
  "ve_proof\030\001 \001(\t\022\027\n\017aggregator_addr\030\002 \001(\t\""
  "\033\n\rCancelRequest\022\n\n\002id\030\001 \001(\t\".\n\017GetProof"
  "Request\022\n\n\002id\030\001 \001(\t\022\017\n\007timeout\030\002 \001(\004\"\227\004\n"
  "\021GetStatusResponse\0227\n\006status\030\001 \001(\0162\'.agg"
  "regator.v1.GetStatusResponse.Status\022 \n\030l"
  "ast_computed_request_id\030\002 \001(\t\022\036\n\026last_co"
  "mputed_end_time\030\003 \001(\004\022$\n\034current_computi"
  "ng_request_id\030\004 \001(\t\022$\n\034current_computing"
  "_start_time\030\005 \001(\004\022\025\n\rversion_proto\030\006 \001(\t"
  "\022\026\n\016version_server\030\007 \001(\t\022!\n\031pending_requ"
  "est_queue_ids\030\010 \003(\t\022\023\n\013prover_name\030\t \001(\t"
  "\022\021\n\tprover_id\030\n \001(\t\022\027\n\017number_of_cores\030\013"
  " \001(\004\022\024\n\014total_memory\030\014 \001(\004\022\023\n\013free_memor"
  "y\030\r \001(\004\022\017\n\007fork_id\030\016 \001(\004\"l\n\006Status\022\026\n\022ST"
  "ATUS_UNSPECIFIED\020\000\022\022\n\016STATUS_BOOTING\020\001\022\024"
  "\n\020STATUS_COMPUTING\020\002\022\017\n\013STATUS_IDLE\020\003\022\017\n"
  "\013STATUS_HALT\020\004\"J\n\025GenBatchProofResponse\022"
  "\n\n\002id\030\001 \001(\t\022%\n\006result\030\002 \001(\0162\025.aggregator"
  ".v1.Result\"T\n\037GenAggregatedBatchProofRes"
  "ponse\022\n\n\002id\030\001 \001(\t\022%\n\006result\030\002 \001(\0162\025.aggr"
  "egator.v1.Result\"N\n\031GenBlobInnerProofRes"
  "ponse\022\n\n\002id\030\001 \001(\t\022%\n\006result\030\002 \001(\0162\025.aggr"
  "egator.v1.Result\"N\n\031GenBlobOuterProofRes"
  "ponse\022\n\n\002id\030\001 \001(\t\022%\n\006result\030\002 \001(\0162\025.aggr"
  "egator.v1.Result\"X\n#GenAggregatedBlobOut"
  "erProofResponse\022\n\n\002id\030\001 \001(\t\022%\n\006result\030\002 "
  "\001(\0162\025.aggregator.v1.Result\"J\n\025GenFinalPr"
  "oofResponse\022\n\n\002id\030\001 \001(\t\022%\n\006result\030\002 \001(\0162"
  "\025.aggregator.v1.Result\"7\n\016CancelResponse"
  "\022%\n\006result\030\001 \001(\0162\025.aggregator.v1.Result\""
  "\357\002\n\020GetProofResponse\022\n\n\002id\030\001 \001(\t\0220\n\013fina"
  "l_proof\030\002 \001(\0132\031.aggregator.v1.FinalProof"
  "H\000\022\031\n\017recursive_proof\030\003 \001(\tH\000\0226\n\006result\030"
  "\004 \001(\0162&.aggregator.v1.GetProofResponse.R"
  "esult\022\025\n\rresult_string\030\005 \001(\t\"\251\001\n\006Result\022"
  "\026\n\022RESULT_UNSPECIFIED\020\000\022\027\n\023RESULT_COMPLE"
  "TED_OK\020\001\022\020\n\014RESULT_ERROR\020\002\022\032\n\026RESULT_COM"
  "PLETED_ERROR\020\003\022\022\n\016RESULT_PENDING\020\004\022\031\n\025RE"
  "SULT_INTERNAL_ERROR\020\005\022\021\n\rRESULT_CANCEL\020\006"
  "B\007\n\005proof\"P\n\nFinalProof\022\r\n\005proof\030\001 \001(\t\0223"
  "\n\006public\030\002 \001(\0132#.aggregator.v1.PublicInp"
  "utsExtended\"\356\003\n\014PublicInputs\022\026\n\016old_stat"
  "e_root\030\001 \001(\014\022 \n\030old_batch_acc_input_hash"
  "\030\002 \001(\014\022\"\n\032previous_l1_info_tree_root\030\003 \001"
  "(\014\022#\n\033previous_l1_info_tree_index\030\004 \001(\r\022"
  "\020\n\010chain_id\030\005 \001(\004\022\017\n\007fork_id\030\006 \001(\004\022\025\n\rba"
  "tch_l2_data\030\007 \001(\014\022\026\n\016sequencer_addr\030\010 \001("
  "\t\022\014\n\004type\030\t \001(\r\022\030\n\020forced_hash_data\030\n \001("
  "\014\022.\n\013forced_data\030\013 \001(\0132\031.aggregator.v1.F"
  "orcedData\022\027\n\017aggregator_addr\030\014 \001(\t\022J\n\021l1"
  "_info_tree_data\030\r \003(\0132/.aggregator.v1.Pu"
  "blicInputs.L1InfoTreeDataEntry\032L\n\023L1Info"
  "TreeDataEntry\022\013\n\003key\030\001 \001(\r\022$\n\005value\030\002 \001("
  "\0132\025.aggregator.v1.L1Data:\0028\001\"T\n\nForcedDa"
  "ta\022\030\n\020global_exit_root\030\001 \001(\014\022\025\n\rblock_ha"
  "sh_l1\030\002 \001(\014\022\025\n\rmin_timestamp\030\003 \001(\004\"\371\002\n\025P"
  "ublicBlobInnerInputs\022\033\n\023old_blob_state_r"
  "oot\030\001 \001(\014\022\037\n\027old_blob_acc_input_hash\030\002 \001"
  "(\014\022\024\n\014old_num_blob\030\003 \001(\004\022\026\n\016old_state_ro"
  "ot\030\004 \001(\014\022\017\n\007fork_id\030\005 \001(\004\022\037\n\027last_l1_inf"
  "o_tree_index\030\006 \001(\r\022\036\n\026last_l1_info_tree_"
  "root\030\007 \001(\014\022\026\n\016sequencer_addr\030\010 \001(\t\022\027\n\017ti"
  "mestamp_limit\030\t \001(\004\022\024\n\014zk_gas_limit\030\n \001("
  "\014\022\014\n\004type\030\013 \001(\r\022\017\n\007point_z\030\014 \001(\014\022\017\n\007poin"
  "t_y\030\r \001(\014\022\021\n\tblob_data\030\016 \001(\014\022\030\n\020forced_h"
  "ash_data\030\017 \001(\014\"\371\002\n\025StatelessPublicInputs"
  "\022\017\n\007witness\030\001 \001(\014\022\023\n\013data_stream\030\002 \001(\014\022\032"
  "\n\022old_acc_input_hash\030\003 \001(\014\022\024\n\014l1_info_ro"
  "ot\030\004 \001(\014\022\027\n\017timestamp_limit\030\005 \001(\004\022\026\n\016seq"
  "uencer_addr\030\006 \001(\t\022\033\n\023forced_blockhash_l1"
  "\030\007 \001(\014\022\027\n\017aggregator_addr\030\010 \001(\t\022S\n\021l1_in"
  "fo_tree_data\030\t \003(\01328.aggregator.v1.State"
  "lessPublicInputs.L1InfoTreeDataEntry\032L\n\023"
  "L1InfoTreeDataEntry\022\013\n\003key\030\001 \001(\r\022$\n\005valu"
  "e\030\002 \001(\0132\025.aggregator.v1.L1Data:\0028\001\"\202\001\n\006L"
  "1Data\022\030\n\020global_exit_root\030\001 \001(\014\022\025\n\rblock"
  "_hash_l1\030\002 \001(\014\022\025\n\rmin_timestamp\030\003 \001(\r\022\021\n"
  "\tsmt_proof\030\004 \003(\014\022\035\n\025initial_historic_roo"
  "t\030\005 \001(\014\"\245\002\n\013InputProver\0222\n\rpublic_inputs"
  "\030\001 \001(\0132\033.aggregator.v1.PublicInputs\022.\n\002d"
  "b\030\004 \003(\0132\".aggregator.v1.InputProver.DbEn"
  "try\022M\n\022contracts_bytecode\030\005 \003(\01321.aggreg"
  "ator.v1.InputProver.ContractsBytecodeEnt"
  "ry\032)\n\007DbEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001("
  "\t:\0028\001\0328\n\026ContractsBytecodeEntry\022\013\n\003key\030\001"
  " \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"S\n\024InputBlobInne"
  "rProver\022;\n\rpublic_inputs\030\001 \001(\0132$.aggrega"
  "tor.v1.PublicBlobInnerInputs\"S\n\024Stateles"
  "sInputProver\022;\n\rpublic_inputs\030\001 \001(\0132$.ag"
  "gregator.v1.StatelessPublicInputs\"\204\002\n\024Pu"
  "blicInputsExtended\0222\n\rpublic_inputs\030\001 \001("
  "\0132\033.aggregator.v1.PublicInputs\022\026\n\016new_st"
  "ate_root\030\002 \001(\014\022 \n\030new_batch_acc_input_ha"
  "sh\030\003 \001(\014\022\033\n\023new_local_exit_root\030\004 \001(\014\022\032\n"
  "\022new_last_timestamp\030\005 \001(\004\022!\n\031current_l1_"
  "info_tree_root\030\006 \001(\014\022\"\n\032current_l1_info_"
  "tree_index\030\007 \001(\r*\\\n\006Result\022\026\n\022RESULT_UNS"
  "PECIFIED\020\000\022\r\n\tRESULT_OK\020\001\022\020\n\014RESULT_ERRO"
  "R\020\002\022\031\n\025RESULT_INTERNAL_ERROR\020\0032d\n\021Aggreg"
  "atorService\022O\n\007Channel\022\034.aggregator.v1.P"
  "roverMessage\032 .aggregator.v1.AggregatorM"
  "essage\"\000(\0010\001B;Z9github.com/0xPolygonHerm"
  "ez/zkevm-node/proverclient/proverb\006proto"
  "3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_aggregator_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_aggregator_2eproto_sccs[36] = {
  &scc_info_AggregatorMessage_aggregator_2eproto.base,
  &scc_info_CancelRequest_aggregator_2eproto.base,
  &scc_info_CancelResponse_aggregator_2eproto.base,
  &scc_info_FinalProof_aggregator_2eproto.base,
  &scc_info_ForcedData_aggregator_2eproto.base,
  &scc_info_GenAggregatedBatchProofRequest_aggregator_2eproto.base,
  &scc_info_GenAggregatedBatchProofResponse_aggregator_2eproto.base,
  &scc_info_GenAggregatedBlobOuterProofRequest_aggregator_2eproto.base,
  &scc_info_GenAggregatedBlobOuterProofResponse_aggregator_2eproto.base,
  &scc_info_GenBatchProofRequest_aggregator_2eproto.base,
  &scc_info_GenBatchProofResponse_aggregator_2eproto.base,
  &scc_info_GenBlobInnerProofRequest_aggregator_2eproto.base,
  &scc_info_GenBlobInnerProofResponse_aggregator_2eproto.base,
  &scc_info_GenBlobOuterProofRequest_aggregator_2eproto.base,
  &scc_info_GenBlobOuterProofResponse_aggregator_2eproto.base,
  &scc_info_GenFinalProofRequest_aggregator_2eproto.base,
  &scc_info_GenFinalProofResponse_aggregator_2eproto.base,
  &scc_info_GenStatelessBatchProofRequest_aggregator_2eproto.base,
  &scc_info_GetProofRequest_aggregator_2eproto.base,
  &scc_info_GetProofResponse_aggregator_2eproto.base,
  &scc_info_GetStatusRequest_aggregator_2eproto.base,
  &scc_info_GetStatusResponse_aggregator_2eproto.base,
  &scc_info_InputBlobInnerProver_aggregator_2eproto.base,
  &scc_info_InputProver_aggregator_2eproto.base,
  &scc_info_InputProver_ContractsBytecodeEntry_DoNotUse_aggregator_2eproto.base,
  &scc_info_InputProver_DbEntry_DoNotUse_aggregator_2eproto.base,
  &scc_info_L1Data_aggregator_2eproto.base,
  &scc_info_ProverMessage_aggregator_2eproto.base,
  &scc_info_PublicBlobInnerInputs_aggregator_2eproto.base,
  &scc_info_PublicInputs_aggregator_2eproto.base,
  &scc_info_PublicInputs_L1InfoTreeDataEntry_DoNotUse_aggregator_2eproto.base,
  &scc_info_PublicInputsExtended_aggregator_2eproto.base,
  &scc_info_StatelessInputProver_aggregator_2eproto.base,
  &scc_info_StatelessPublicInputs_aggregator_2eproto.base,
  &scc_info_StatelessPublicInputs_L1InfoTreeDataEntry_DoNotUse_aggregator_2eproto.base,
  &scc_info_Version_aggregator_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_aggregator_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_aggregator_2eproto = {
  false, false, descriptor_table_protodef_aggregator_2eproto, "aggregator.proto", 6281,
  &descriptor_table_aggregator_2eproto_once, descriptor_table_aggregator_2eproto_sccs, descriptor_table_aggregator_2eproto_deps, 36, 0,
  schemas, file_default_instances, TableStruct_aggregator_2eproto::offsets,
  file_level_metadata_aggregator_2eproto, 36, file_level_enum_descriptors_aggregator_2eproto, file_level_service_descriptors_aggregator_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_aggregator_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_aggregator_2eproto)), true);
namespace aggregator {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GetStatusResponse_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_aggregator_2eproto);
  return file_level_enum_descriptors_aggregator_2eproto[0];
}
bool GetStatusResponse_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr GetStatusResponse_Status GetStatusResponse::STATUS_UNSPECIFIED;
constexpr GetStatusResponse_Status GetStatusResponse::STATUS_BOOTING;
constexpr GetStatusResponse_Status GetStatusResponse::STATUS_COMPUTING;
constexpr GetStatusResponse_Status GetStatusResponse::STATUS_IDLE;
constexpr GetStatusResponse_Status GetStatusResponse::STATUS_HALT;
constexpr GetStatusResponse_Status GetStatusResponse::Status_MIN;
constexpr GetStatusResponse_Status GetStatusResponse::Status_MAX;
constexpr int GetStatusResponse::Status_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GetProofResponse_Result_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_aggregator_2eproto);
  return file_level_enum_descriptors_aggregator_2eproto[1];
}
bool GetProofResponse_Result_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr GetProofResponse_Result GetProofResponse::RESULT_UNSPECIFIED;
constexpr GetProofResponse_Result GetProofResponse::RESULT_COMPLETED_OK;
constexpr GetProofResponse_Result GetProofResponse::RESULT_ERROR;
constexpr GetProofResponse_Result GetProofResponse::RESULT_COMPLETED_ERROR;
constexpr GetProofResponse_Result GetProofResponse::RESULT_PENDING;
constexpr GetProofResponse_Result GetProofResponse::RESULT_INTERNAL_ERROR;
constexpr GetProofResponse_Result GetProofResponse::RESULT_CANCEL;
constexpr GetProofResponse_Result GetProofResponse::Result_MIN;
constexpr GetProofResponse_Result GetProofResponse::Result_MAX;
constexpr int GetProofResponse::Result_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Result_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_aggregator_2eproto);
  return file_level_enum_descriptors_aggregator_2eproto[2];
}
bool Result_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Version::InitAsDefaultInstance() {
}
class Version::_Internal {
 public:
};

Version::Version(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:aggregator.v1.Version)
}
Version::Version(const Version& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  v0_0_1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_v0_0_1().empty()) {
    v0_0_1_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_v0_0_1(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:aggregator.v1.Version)
}

void Version::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Version_aggregator_2eproto.base);
  v0_0_1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Version::~Version() {
  // @@protoc_insertion_point(destructor:aggregator.v1.Version)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Version::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  v0_0_1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Version::ArenaDtor(void* object) {
  Version* _this = reinterpret_cast< Version* >(object);
  (void)_this;
}
void Version::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Version::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Version& Version::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Version_aggregator_2eproto.base);
  return *internal_default_instance();
}


void Version::Clear() {
// @@protoc_insertion_point(message_clear_start:aggregator.v1.Version)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  v0_0_1_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Version::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string v0_0_1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_v0_0_1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "aggregator.v1.Version.v0_0_1"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Version::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:aggregator.v1.Version)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string v0_0_1 = 1;
  if (this->v0_0_1().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_v0_0_1().data(), static_cast<int>(this->_internal_v0_0_1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aggregator.v1.Version.v0_0_1");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_v0_0_1(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aggregator.v1.Version)
  return target;
}

size_t Version::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aggregator.v1.Version)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string v0_0_1 = 1;
  if (this->v0_0_1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_v0_0_1());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Version::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aggregator.v1.Version)
  GOOGLE_DCHECK_NE(&from, this);
  const Version* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Version>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aggregator.v1.Version)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aggregator.v1.Version)
    MergeFrom(*source);
  }
}

void Version::MergeFrom(const Version& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aggregator.v1.Version)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.v0_0_1().size() > 0) {
    _internal_set_v0_0_1(from._internal_v0_0_1());
  }
}

void Version::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aggregator.v1.Version)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Version::CopyFrom(const Version& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aggregator.v1.Version)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Version::IsInitialized() const {
  return true;
}

void Version::InternalSwap(Version* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  v0_0_1_.Swap(&other->v0_0_1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Version::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AggregatorMessage::InitAsDefaultInstance() {
  ::aggregator::v1::_AggregatorMessage_default_instance_.get_status_request_ = const_cast< ::aggregator::v1::GetStatusRequest*>(
      ::aggregator::v1::GetStatusRequest::internal_default_instance());
  ::aggregator::v1::_AggregatorMessage_default_instance_.gen_batch_proof_request_ = const_cast< ::aggregator::v1::GenBatchProofRequest*>(
      ::aggregator::v1::GenBatchProofRequest::internal_default_instance());
  ::aggregator::v1::_AggregatorMessage_default_instance_.gen_aggregated_batch_proof_request_ = const_cast< ::aggregator::v1::GenAggregatedBatchProofRequest*>(
      ::aggregator::v1::GenAggregatedBatchProofRequest::internal_default_instance());
  ::aggregator::v1::_AggregatorMessage_default_instance_.gen_blob_inner_proof_request_ = const_cast< ::aggregator::v1::GenBlobInnerProofRequest*>(
      ::aggregator::v1::GenBlobInnerProofRequest::internal_default_instance());
  ::aggregator::v1::_AggregatorMessage_default_instance_.gen_blob_outer_proof_request_ = const_cast< ::aggregator::v1::GenBlobOuterProofRequest*>(
      ::aggregator::v1::GenBlobOuterProofRequest::internal_default_instance());
  ::aggregator::v1::_AggregatorMessage_default_instance_.gen_aggregated_blob_outer_proof_request_ = const_cast< ::aggregator::v1::GenAggregatedBlobOuterProofRequest*>(
      ::aggregator::v1::GenAggregatedBlobOuterProofRequest::internal_default_instance());
  ::aggregator::v1::_AggregatorMessage_default_instance_.gen_final_proof_request_ = const_cast< ::aggregator::v1::GenFinalProofRequest*>(
      ::aggregator::v1::GenFinalProofRequest::internal_default_instance());
  ::aggregator::v1::_AggregatorMessage_default_instance_.cancel_request_ = const_cast< ::aggregator::v1::CancelRequest*>(
      ::aggregator::v1::CancelRequest::internal_default_instance());
  ::aggregator::v1::_AggregatorMessage_default_instance_.get_proof_request_ = const_cast< ::aggregator::v1::GetProofRequest*>(
      ::aggregator::v1::GetProofRequest::internal_default_instance());
  ::aggregator::v1::_AggregatorMessage_default_instance_.gen_stateless_batch_proof_request_ = const_cast< ::aggregator::v1::GenStatelessBatchProofRequest*>(
      ::aggregator::v1::GenStatelessBatchProofRequest::internal_default_instance());
}
class AggregatorMessage::_Internal {
 public:
  static const ::aggregator::v1::GetStatusRequest& get_status_request(const AggregatorMessage* msg);
  static const ::aggregator::v1::GenBatchProofRequest& gen_batch_proof_request(const AggregatorMessage* msg);
  static const ::aggregator::v1::GenAggregatedBatchProofRequest& gen_aggregated_batch_proof_request(const AggregatorMessage* msg);
  static const ::aggregator::v1::GenBlobInnerProofRequest& gen_blob_inner_proof_request(const AggregatorMessage* msg);
  static const ::aggregator::v1::GenBlobOuterProofRequest& gen_blob_outer_proof_request(const AggregatorMessage* msg);
  static const ::aggregator::v1::GenAggregatedBlobOuterProofRequest& gen_aggregated_blob_outer_proof_request(const AggregatorMessage* msg);
  static const ::aggregator::v1::GenFinalProofRequest& gen_final_proof_request(const AggregatorMessage* msg);
  static const ::aggregator::v1::CancelRequest& cancel_request(const AggregatorMessage* msg);
  static const ::aggregator::v1::GetProofRequest& get_proof_request(const AggregatorMessage* msg);
  static const ::aggregator::v1::GenStatelessBatchProofRequest& gen_stateless_batch_proof_request(const AggregatorMessage* msg);
};

const ::aggregator::v1::GetStatusRequest&
AggregatorMessage::_Internal::get_status_request(const AggregatorMessage* msg) {
  return *msg->request_.get_status_request_;
}
const ::aggregator::v1::GenBatchProofRequest&
AggregatorMessage::_Internal::gen_batch_proof_request(const AggregatorMessage* msg) {
  return *msg->request_.gen_batch_proof_request_;
}
const ::aggregator::v1::GenAggregatedBatchProofRequest&
AggregatorMessage::_Internal::gen_aggregated_batch_proof_request(const AggregatorMessage* msg) {
  return *msg->request_.gen_aggregated_batch_proof_request_;
}
const ::aggregator::v1::GenBlobInnerProofRequest&
AggregatorMessage::_Internal::gen_blob_inner_proof_request(const AggregatorMessage* msg) {
  return *msg->request_.gen_blob_inner_proof_request_;
}
const ::aggregator::v1::GenBlobOuterProofRequest&
AggregatorMessage::_Internal::gen_blob_outer_proof_request(const AggregatorMessage* msg) {
  return *msg->request_.gen_blob_outer_proof_request_;
}
const ::aggregator::v1::GenAggregatedBlobOuterProofRequest&
AggregatorMessage::_Internal::gen_aggregated_blob_outer_proof_request(const AggregatorMessage* msg) {
  return *msg->request_.gen_aggregated_blob_outer_proof_request_;
}
const ::aggregator::v1::GenFinalProofRequest&
AggregatorMessage::_Internal::gen_final_proof_request(const AggregatorMessage* msg) {
  return *msg->request_.gen_final_proof_request_;
}
const ::aggregator::v1::CancelRequest&
AggregatorMessage::_Internal::cancel_request(const AggregatorMessage* msg) {
  return *msg->request_.cancel_request_;
}
const ::aggregator::v1::GetProofRequest&
AggregatorMessage::_Internal::get_proof_request(const AggregatorMessage* msg) {
  return *msg->request_.get_proof_request_;
}
const ::aggregator::v1::GenStatelessBatchProofRequest&
AggregatorMessage::_Internal::gen_stateless_batch_proof_request(const AggregatorMessage* msg) {
  return *msg->request_.gen_stateless_batch_proof_request_;
}
void AggregatorMessage::set_allocated_get_status_request(::aggregator::v1::GetStatusRequest* get_status_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_request();
  if (get_status_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(get_status_request);
    if (message_arena != submessage_arena) {
      get_status_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, get_status_request, submessage_arena);
    }
    set_has_get_status_request();
    request_.get_status_request_ = get_status_request;
  }
  // @@protoc_insertion_point(field_set_allocated:aggregator.v1.AggregatorMessage.get_status_request)
}
void AggregatorMessage::set_allocated_gen_batch_proof_request(::aggregator::v1::GenBatchProofRequest* gen_batch_proof_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_request();
  if (gen_batch_proof_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(gen_batch_proof_request);
    if (message_arena != submessage_arena) {
      gen_batch_proof_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, gen_batch_proof_request, submessage_arena);
    }
    set_has_gen_batch_proof_request();
    request_.gen_batch_proof_request_ = gen_batch_proof_request;
  }
  // @@protoc_insertion_point(field_set_allocated:aggregator.v1.AggregatorMessage.gen_batch_proof_request)
}
void AggregatorMessage::set_allocated_gen_aggregated_batch_proof_request(::aggregator::v1::GenAggregatedBatchProofRequest* gen_aggregated_batch_proof_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_request();
  if (gen_aggregated_batch_proof_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(gen_aggregated_batch_proof_request);
    if (message_arena != submessage_arena) {
      gen_aggregated_batch_proof_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, gen_aggregated_batch_proof_request, submessage_arena);
    }
    set_has_gen_aggregated_batch_proof_request();
    request_.gen_aggregated_batch_proof_request_ = gen_aggregated_batch_proof_request;
  }
  // @@protoc_insertion_point(field_set_allocated:aggregator.v1.AggregatorMessage.gen_aggregated_batch_proof_request)
}
void AggregatorMessage::set_allocated_gen_blob_inner_proof_request(::aggregator::v1::GenBlobInnerProofRequest* gen_blob_inner_proof_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_request();
  if (gen_blob_inner_proof_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(gen_blob_inner_proof_request);
    if (message_arena != submessage_arena) {
      gen_blob_inner_proof_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, gen_blob_inner_proof_request, submessage_arena);
    }
    set_has_gen_blob_inner_proof_request();
    request_.gen_blob_inner_proof_request_ = gen_blob_inner_proof_request;
  }
  // @@protoc_insertion_point(field_set_allocated:aggregator.v1.AggregatorMessage.gen_blob_inner_proof_request)
}
void AggregatorMessage::set_allocated_gen_blob_outer_proof_request(::aggregator::v1::GenBlobOuterProofRequest* gen_blob_outer_proof_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_request();
  if (gen_blob_outer_proof_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(gen_blob_outer_proof_request);
    if (message_arena != submessage_arena) {
      gen_blob_outer_proof_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, gen_blob_outer_proof_request, submessage_arena);
    }
    set_has_gen_blob_outer_proof_request();
    request_.gen_blob_outer_proof_request_ = gen_blob_outer_proof_request;
  }
  // @@protoc_insertion_point(field_set_allocated:aggregator.v1.AggregatorMessage.gen_blob_outer_proof_request)
}
void AggregatorMessage::set_allocated_gen_aggregated_blob_outer_proof_request(::aggregator::v1::GenAggregatedBlobOuterProofRequest* gen_aggregated_blob_outer_proof_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_request();
  if (gen_aggregated_blob_outer_proof_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(gen_aggregated_blob_outer_proof_request);
    if (message_arena != submessage_arena) {
      gen_aggregated_blob_outer_proof_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, gen_aggregated_blob_outer_proof_request, submessage_arena);
    }
    set_has_gen_aggregated_blob_outer_proof_request();
    request_.gen_aggregated_blob_outer_proof_request_ = gen_aggregated_blob_outer_proof_request;
  }
  // @@protoc_insertion_point(field_set_allocated:aggregator.v1.AggregatorMessage.gen_aggregated_blob_outer_proof_request)
}
void AggregatorMessage::set_allocated_gen_final_proof_request(::aggregator::v1::GenFinalProofRequest* gen_final_proof_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_request();
  if (gen_final_proof_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(gen_final_proof_request);
    if (message_arena != submessage_arena) {
      gen_final_proof_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, gen_final_proof_request, submessage_arena);
    }
    set_has_gen_final_proof_request();
    request_.gen_final_proof_request_ = gen_final_proof_request;
  }
  // @@protoc_insertion_point(field_set_allocated:aggregator.v1.AggregatorMessage.gen_final_proof_request)
}
void AggregatorMessage::set_allocated_cancel_request(::aggregator::v1::CancelRequest* cancel_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_request();
  if (cancel_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(cancel_request);
    if (message_arena != submessage_arena) {
      cancel_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cancel_request, submessage_arena);
    }
    set_has_cancel_request();
    request_.cancel_request_ = cancel_request;
  }
  // @@protoc_insertion_point(field_set_allocated:aggregator.v1.AggregatorMessage.cancel_request)
}
void AggregatorMessage::set_allocated_get_proof_request(::aggregator::v1::GetProofRequest* get_proof_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_request();
  if (get_proof_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(get_proof_request);
    if (message_arena != submessage_arena) {
      get_proof_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, get_proof_request, submessage_arena);
    }
    set_has_get_proof_request();
    request_.get_proof_request_ = get_proof_request;
  }
  // @@protoc_insertion_point(field_set_allocated:aggregator.v1.AggregatorMessage.get_proof_request)
}
void AggregatorMessage::set_allocated_gen_stateless_batch_proof_request(::aggregator::v1::GenStatelessBatchProofRequest* gen_stateless_batch_proof_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_request();
  if (gen_stateless_batch_proof_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(gen_stateless_batch_proof_request);
    if (message_arena != submessage_arena) {
      gen_stateless_batch_proof_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, gen_stateless_batch_proof_request, submessage_arena);
    }
    set_has_gen_stateless_batch_proof_request();
    request_.gen_stateless_batch_proof_request_ = gen_stateless_batch_proof_request;
  }
  // @@protoc_insertion_point(field_set_allocated:aggregator.v1.AggregatorMessage.gen_stateless_batch_proof_request)
}
AggregatorMessage::AggregatorMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:aggregator.v1.AggregatorMessage)
}
AggregatorMessage::AggregatorMessage(const AggregatorMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  clear_has_request();
  switch (from.request_case()) {
    case kGetStatusRequest: {
      _internal_mutable_get_status_request()->::aggregator::v1::GetStatusRequest::MergeFrom(from._internal_get_status_request());
      break;
    }
    case kGenBatchProofRequest: {
      _internal_mutable_gen_batch_proof_request()->::aggregator::v1::GenBatchProofRequest::MergeFrom(from._internal_gen_batch_proof_request());
      break;
    }
    case kGenAggregatedBatchProofRequest: {
      _internal_mutable_gen_aggregated_batch_proof_request()->::aggregator::v1::GenAggregatedBatchProofRequest::MergeFrom(from._internal_gen_aggregated_batch_proof_request());
      break;
    }
    case kGenBlobInnerProofRequest: {
      _internal_mutable_gen_blob_inner_proof_request()->::aggregator::v1::GenBlobInnerProofRequest::MergeFrom(from._internal_gen_blob_inner_proof_request());
      break;
    }
    case kGenBlobOuterProofRequest: {
      _internal_mutable_gen_blob_outer_proof_request()->::aggregator::v1::GenBlobOuterProofRequest::MergeFrom(from._internal_gen_blob_outer_proof_request());
      break;
    }
    case kGenAggregatedBlobOuterProofRequest: {
      _internal_mutable_gen_aggregated_blob_outer_proof_request()->::aggregator::v1::GenAggregatedBlobOuterProofRequest::MergeFrom(from._internal_gen_aggregated_blob_outer_proof_request());
      break;
    }
    case kGenFinalProofRequest: {
      _internal_mutable_gen_final_proof_request()->::aggregator::v1::GenFinalProofRequest::MergeFrom(from._internal_gen_final_proof_request());
      break;
    }
    case kCancelRequest: {
      _internal_mutable_cancel_request()->::aggregator::v1::CancelRequest::MergeFrom(from._internal_cancel_request());
      break;
    }
    case kGetProofRequest: {
      _internal_mutable_get_proof_request()->::aggregator::v1::GetProofRequest::MergeFrom(from._internal_get_proof_request());
      break;
    }
    case kGenStatelessBatchProofRequest: {
      _internal_mutable_gen_stateless_batch_proof_request()->::aggregator::v1::GenStatelessBatchProofRequest::MergeFrom(from._internal_gen_stateless_batch_proof_request());
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:aggregator.v1.AggregatorMessage)
}

void AggregatorMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AggregatorMessage_aggregator_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clear_has_request();
}

AggregatorMessage::~AggregatorMessage() {
  // @@protoc_insertion_point(destructor:aggregator.v1.AggregatorMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AggregatorMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (has_request()) {
    clear_request();
  }
}

void AggregatorMessage::ArenaDtor(void* object) {
  AggregatorMessage* _this = reinterpret_cast< AggregatorMessage* >(object);
  (void)_this;
}
void AggregatorMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AggregatorMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AggregatorMessage& AggregatorMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AggregatorMessage_aggregator_2eproto.base);
  return *internal_default_instance();
}


void AggregatorMessage::clear_request() {
// @@protoc_insertion_point(one_of_clear_start:aggregator.v1.AggregatorMessage)
  switch (request_case()) {
    case kGetStatusRequest: {
      if (GetArena() == nullptr) {
        delete request_.get_status_request_;
      }
      break;
    }
    case kGenBatchProofRequest: {
      if (GetArena() == nullptr) {
        delete request_.gen_batch_proof_request_;
      }
      break;
    }
    case kGenAggregatedBatchProofRequest: {
      if (GetArena() == nullptr) {
        delete request_.gen_aggregated_batch_proof_request_;
      }
      break;
    }
    case kGenBlobInnerProofRequest: {
      if (GetArena() == nullptr) {
        delete request_.gen_blob_inner_proof_request_;
      }
      break;
    }
    case kGenBlobOuterProofRequest: {
      if (GetArena() == nullptr) {
        delete request_.gen_blob_outer_proof_request_;
      }
      break;
    }
    case kGenAggregatedBlobOuterProofRequest: {
      if (GetArena() == nullptr) {
        delete request_.gen_aggregated_blob_outer_proof_request_;
      }
      break;
    }
    case kGenFinalProofRequest: {
      if (GetArena() == nullptr) {
        delete request_.gen_final_proof_request_;
      }
      break;
    }
    case kCancelRequest: {
      if (GetArena() == nullptr) {
        delete request_.cancel_request_;
      }
      break;
    }
    case kGetProofRequest: {
      if (GetArena() == nullptr) {
        delete request_.get_proof_request_;
      }
      break;
    }
    case kGenStatelessBatchProofRequest: {
      if (GetArena() == nullptr) {
        delete request_.gen_stateless_batch_proof_request_;
      }
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = REQUEST_NOT_SET;
}


void AggregatorMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:aggregator.v1.AggregatorMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  clear_request();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AggregatorMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "aggregator.v1.AggregatorMessage.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .aggregator.v1.GetStatusRequest get_status_request = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_get_status_request(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .aggregator.v1.GenBatchProofRequest gen_batch_proof_request = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_gen_batch_proof_request(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .aggregator.v1.GenAggregatedBatchProofRequest gen_aggregated_batch_proof_request = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_gen_aggregated_batch_proof_request(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .aggregator.v1.GenBlobInnerProofRequest gen_blob_inner_proof_request = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_gen_blob_inner_proof_request(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .aggregator.v1.GenBlobOuterProofRequest gen_blob_outer_proof_request = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_gen_blob_outer_proof_request(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .aggregator.v1.GenAggregatedBlobOuterProofRequest gen_aggregated_blob_outer_proof_request = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_gen_aggregated_blob_outer_proof_request(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .aggregator.v1.GenFinalProofRequest gen_final_proof_request = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_gen_final_proof_request(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .aggregator.v1.CancelRequest cancel_request = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_cancel_request(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .aggregator.v1.GetProofRequest get_proof_request = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_get_proof_request(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .aggregator.v1.GenStatelessBatchProofRequest gen_stateless_batch_proof_request = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_gen_stateless_batch_proof_request(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AggregatorMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:aggregator.v1.AggregatorMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aggregator.v1.AggregatorMessage.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // .aggregator.v1.GetStatusRequest get_status_request = 2;
  if (_internal_has_get_status_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::get_status_request(this), target, stream);
  }

  // .aggregator.v1.GenBatchProofRequest gen_batch_proof_request = 3;
  if (_internal_has_gen_batch_proof_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::gen_batch_proof_request(this), target, stream);
  }

  // .aggregator.v1.GenAggregatedBatchProofRequest gen_aggregated_batch_proof_request = 4;
  if (_internal_has_gen_aggregated_batch_proof_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::gen_aggregated_batch_proof_request(this), target, stream);
  }

  // .aggregator.v1.GenBlobInnerProofRequest gen_blob_inner_proof_request = 5;
  if (_internal_has_gen_blob_inner_proof_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::gen_blob_inner_proof_request(this), target, stream);
  }

  // .aggregator.v1.GenBlobOuterProofRequest gen_blob_outer_proof_request = 6;
  if (_internal_has_gen_blob_outer_proof_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::gen_blob_outer_proof_request(this), target, stream);
  }

  // .aggregator.v1.GenAggregatedBlobOuterProofRequest gen_aggregated_blob_outer_proof_request = 7;
  if (_internal_has_gen_aggregated_blob_outer_proof_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::gen_aggregated_blob_outer_proof_request(this), target, stream);
  }

  // .aggregator.v1.GenFinalProofRequest gen_final_proof_request = 8;
  if (_internal_has_gen_final_proof_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::gen_final_proof_request(this), target, stream);
  }

  // .aggregator.v1.CancelRequest cancel_request = 9;
  if (_internal_has_cancel_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::cancel_request(this), target, stream);
  }

  // .aggregator.v1.GetProofRequest get_proof_request = 10;
  if (_internal_has_get_proof_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::get_proof_request(this), target, stream);
  }

  // .aggregator.v1.GenStatelessBatchProofRequest gen_stateless_batch_proof_request = 11;
  if (_internal_has_gen_stateless_batch_proof_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::gen_stateless_batch_proof_request(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aggregator.v1.AggregatorMessage)
  return target;
}

size_t AggregatorMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aggregator.v1.AggregatorMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  switch (request_case()) {
    // .aggregator.v1.GetStatusRequest get_status_request = 2;
    case kGetStatusRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *request_.get_status_request_);
      break;
    }
    // .aggregator.v1.GenBatchProofRequest gen_batch_proof_request = 3;
    case kGenBatchProofRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *request_.gen_batch_proof_request_);
      break;
    }
    // .aggregator.v1.GenAggregatedBatchProofRequest gen_aggregated_batch_proof_request = 4;
    case kGenAggregatedBatchProofRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *request_.gen_aggregated_batch_proof_request_);
      break;
    }
    // .aggregator.v1.GenBlobInnerProofRequest gen_blob_inner_proof_request = 5;
    case kGenBlobInnerProofRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *request_.gen_blob_inner_proof_request_);
      break;
    }
    // .aggregator.v1.GenBlobOuterProofRequest gen_blob_outer_proof_request = 6;
    case kGenBlobOuterProofRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *request_.gen_blob_outer_proof_request_);
      break;
    }
    // .aggregator.v1.GenAggregatedBlobOuterProofRequest gen_aggregated_blob_outer_proof_request = 7;
    case kGenAggregatedBlobOuterProofRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *request_.gen_aggregated_blob_outer_proof_request_);
      break;
    }
    // .aggregator.v1.GenFinalProofRequest gen_final_proof_request = 8;
    case kGenFinalProofRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *request_.gen_final_proof_request_);
      break;
    }
    // .aggregator.v1.CancelRequest cancel_request = 9;
    case kCancelRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *request_.cancel_request_);
      break;
    }
    // .aggregator.v1.GetProofRequest get_proof_request = 10;
    case kGetProofRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *request_.get_proof_request_);
      break;
    }
    // .aggregator.v1.GenStatelessBatchProofRequest gen_stateless_batch_proof_request = 11;
    case kGenStatelessBatchProofRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *request_.gen_stateless_batch_proof_request_);
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AggregatorMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aggregator.v1.AggregatorMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const AggregatorMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AggregatorMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aggregator.v1.AggregatorMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aggregator.v1.AggregatorMessage)
    MergeFrom(*source);
  }
}

void AggregatorMessage::MergeFrom(const AggregatorMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aggregator.v1.AggregatorMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  switch (from.request_case()) {
    case kGetStatusRequest: {
      _internal_mutable_get_status_request()->::aggregator::v1::GetStatusRequest::MergeFrom(from._internal_get_status_request());
      break;
    }
    case kGenBatchProofRequest: {
      _internal_mutable_gen_batch_proof_request()->::aggregator::v1::GenBatchProofRequest::MergeFrom(from._internal_gen_batch_proof_request());
      break;
    }
    case kGenAggregatedBatchProofRequest: {
      _internal_mutable_gen_aggregated_batch_proof_request()->::aggregator::v1::GenAggregatedBatchProofRequest::MergeFrom(from._internal_gen_aggregated_batch_proof_request());
      break;
    }
    case kGenBlobInnerProofRequest: {
      _internal_mutable_gen_blob_inner_proof_request()->::aggregator::v1::GenBlobInnerProofRequest::MergeFrom(from._internal_gen_blob_inner_proof_request());
      break;
    }
    case kGenBlobOuterProofRequest: {
      _internal_mutable_gen_blob_outer_proof_request()->::aggregator::v1::GenBlobOuterProofRequest::MergeFrom(from._internal_gen_blob_outer_proof_request());
      break;
    }
    case kGenAggregatedBlobOuterProofRequest: {
      _internal_mutable_gen_aggregated_blob_outer_proof_request()->::aggregator::v1::GenAggregatedBlobOuterProofRequest::MergeFrom(from._internal_gen_aggregated_blob_outer_proof_request());
      break;
    }
    case kGenFinalProofRequest: {
      _internal_mutable_gen_final_proof_request()->::aggregator::v1::GenFinalProofRequest::MergeFrom(from._internal_gen_final_proof_request());
      break;
    }
    case kCancelRequest: {
      _internal_mutable_cancel_request()->::aggregator::v1::CancelRequest::MergeFrom(from._internal_cancel_request());
      break;
    }
    case kGetProofRequest: {
      _internal_mutable_get_proof_request()->::aggregator::v1::GetProofRequest::MergeFrom(from._internal_get_proof_request());
      break;
    }
    case kGenStatelessBatchProofRequest: {
      _internal_mutable_gen_stateless_batch_proof_request()->::aggregator::v1::GenStatelessBatchProofRequest::MergeFrom(from._internal_gen_stateless_batch_proof_request());
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
}

void AggregatorMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aggregator.v1.AggregatorMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AggregatorMessage::CopyFrom(const AggregatorMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aggregator.v1.AggregatorMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AggregatorMessage::IsInitialized() const {
  return true;
}

void AggregatorMessage::InternalSwap(AggregatorMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(request_, other->request_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata AggregatorMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProverMessage::InitAsDefaultInstance() {
  ::aggregator::v1::_ProverMessage_default_instance_.get_status_response_ = const_cast< ::aggregator::v1::GetStatusResponse*>(
      ::aggregator::v1::GetStatusResponse::internal_default_instance());
  ::aggregator::v1::_ProverMessage_default_instance_.gen_batch_proof_response_ = const_cast< ::aggregator::v1::GenBatchProofResponse*>(
      ::aggregator::v1::GenBatchProofResponse::internal_default_instance());
  ::aggregator::v1::_ProverMessage_default_instance_.gen_aggregated_batch_proof_response_ = const_cast< ::aggregator::v1::GenAggregatedBatchProofResponse*>(
      ::aggregator::v1::GenAggregatedBatchProofResponse::internal_default_instance());
  ::aggregator::v1::_ProverMessage_default_instance_.gen_blob_inner_proof_response_ = const_cast< ::aggregator::v1::GenBlobInnerProofResponse*>(
      ::aggregator::v1::GenBlobInnerProofResponse::internal_default_instance());
  ::aggregator::v1::_ProverMessage_default_instance_.gen_blob_outer_proof_response_ = const_cast< ::aggregator::v1::GenBlobOuterProofResponse*>(
      ::aggregator::v1::GenBlobOuterProofResponse::internal_default_instance());
  ::aggregator::v1::_ProverMessage_default_instance_.gen_aggregated_blob_outer_proof_response_ = const_cast< ::aggregator::v1::GenAggregatedBlobOuterProofResponse*>(
      ::aggregator::v1::GenAggregatedBlobOuterProofResponse::internal_default_instance());
  ::aggregator::v1::_ProverMessage_default_instance_.gen_final_proof_response_ = const_cast< ::aggregator::v1::GenFinalProofResponse*>(
      ::aggregator::v1::GenFinalProofResponse::internal_default_instance());
  ::aggregator::v1::_ProverMessage_default_instance_.cancel_response_ = const_cast< ::aggregator::v1::CancelResponse*>(
      ::aggregator::v1::CancelResponse::internal_default_instance());
  ::aggregator::v1::_ProverMessage_default_instance_.get_proof_response_ = const_cast< ::aggregator::v1::GetProofResponse*>(
      ::aggregator::v1::GetProofResponse::internal_default_instance());
}
class ProverMessage::_Internal {
 public:
  static const ::aggregator::v1::GetStatusResponse& get_status_response(const ProverMessage* msg);
  static const ::aggregator::v1::GenBatchProofResponse& gen_batch_proof_response(const ProverMessage* msg);
  static const ::aggregator::v1::GenAggregatedBatchProofResponse& gen_aggregated_batch_proof_response(const ProverMessage* msg);
  static const ::aggregator::v1::GenBlobInnerProofResponse& gen_blob_inner_proof_response(const ProverMessage* msg);
  static const ::aggregator::v1::GenBlobOuterProofResponse& gen_blob_outer_proof_response(const ProverMessage* msg);
  static const ::aggregator::v1::GenAggregatedBlobOuterProofResponse& gen_aggregated_blob_outer_proof_response(const ProverMessage* msg);
  static const ::aggregator::v1::GenFinalProofResponse& gen_final_proof_response(const ProverMessage* msg);
  static const ::aggregator::v1::CancelResponse& cancel_response(const ProverMessage* msg);
  static const ::aggregator::v1::GetProofResponse& get_proof_response(const ProverMessage* msg);
};

const ::aggregator::v1::GetStatusResponse&
ProverMessage::_Internal::get_status_response(const ProverMessage* msg) {
  return *msg->response_.get_status_response_;
}
const ::aggregator::v1::GenBatchProofResponse&
ProverMessage::_Internal::gen_batch_proof_response(const ProverMessage* msg) {
  return *msg->response_.gen_batch_proof_response_;
}
const ::aggregator::v1::GenAggregatedBatchProofResponse&
ProverMessage::_Internal::gen_aggregated_batch_proof_response(const ProverMessage* msg) {
  return *msg->response_.gen_aggregated_batch_proof_response_;
}
const ::aggregator::v1::GenBlobInnerProofResponse&
ProverMessage::_Internal::gen_blob_inner_proof_response(const ProverMessage* msg) {
  return *msg->response_.gen_blob_inner_proof_response_;
}
const ::aggregator::v1::GenBlobOuterProofResponse&
ProverMessage::_Internal::gen_blob_outer_proof_response(const ProverMessage* msg) {
  return *msg->response_.gen_blob_outer_proof_response_;
}
const ::aggregator::v1::GenAggregatedBlobOuterProofResponse&
ProverMessage::_Internal::gen_aggregated_blob_outer_proof_response(const ProverMessage* msg) {
  return *msg->response_.gen_aggregated_blob_outer_proof_response_;
}
const ::aggregator::v1::GenFinalProofResponse&
ProverMessage::_Internal::gen_final_proof_response(const ProverMessage* msg) {
  return *msg->response_.gen_final_proof_response_;
}
const ::aggregator::v1::CancelResponse&
ProverMessage::_Internal::cancel_response(const ProverMessage* msg) {
  return *msg->response_.cancel_response_;
}
const ::aggregator::v1::GetProofResponse&
ProverMessage::_Internal::get_proof_response(const ProverMessage* msg) {
  return *msg->response_.get_proof_response_;
}
void ProverMessage::set_allocated_get_status_response(::aggregator::v1::GetStatusResponse* get_status_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_response();
  if (get_status_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(get_status_response);
    if (message_arena != submessage_arena) {
      get_status_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, get_status_response, submessage_arena);
    }
    set_has_get_status_response();
    response_.get_status_response_ = get_status_response;
  }
  // @@protoc_insertion_point(field_set_allocated:aggregator.v1.ProverMessage.get_status_response)
}
void ProverMessage::set_allocated_gen_batch_proof_response(::aggregator::v1::GenBatchProofResponse* gen_batch_proof_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_response();
  if (gen_batch_proof_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(gen_batch_proof_response);
    if (message_arena != submessage_arena) {
      gen_batch_proof_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, gen_batch_proof_response, submessage_arena);
    }
    set_has_gen_batch_proof_response();
    response_.gen_batch_proof_response_ = gen_batch_proof_response;
  }
  // @@protoc_insertion_point(field_set_allocated:aggregator.v1.ProverMessage.gen_batch_proof_response)
}
void ProverMessage::set_allocated_gen_aggregated_batch_proof_response(::aggregator::v1::GenAggregatedBatchProofResponse* gen_aggregated_batch_proof_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_response();
  if (gen_aggregated_batch_proof_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(gen_aggregated_batch_proof_response);
    if (message_arena != submessage_arena) {
      gen_aggregated_batch_proof_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, gen_aggregated_batch_proof_response, submessage_arena);
    }
    set_has_gen_aggregated_batch_proof_response();
    response_.gen_aggregated_batch_proof_response_ = gen_aggregated_batch_proof_response;
  }
  // @@protoc_insertion_point(field_set_allocated:aggregator.v1.ProverMessage.gen_aggregated_batch_proof_response)
}
void ProverMessage::set_allocated_gen_blob_inner_proof_response(::aggregator::v1::GenBlobInnerProofResponse* gen_blob_inner_proof_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_response();
  if (gen_blob_inner_proof_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(gen_blob_inner_proof_response);
    if (message_arena != submessage_arena) {
      gen_blob_inner_proof_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, gen_blob_inner_proof_response, submessage_arena);
    }
    set_has_gen_blob_inner_proof_response();
    response_.gen_blob_inner_proof_response_ = gen_blob_inner_proof_response;
  }
  // @@protoc_insertion_point(field_set_allocated:aggregator.v1.ProverMessage.gen_blob_inner_proof_response)
}
void ProverMessage::set_allocated_gen_blob_outer_proof_response(::aggregator::v1::GenBlobOuterProofResponse* gen_blob_outer_proof_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_response();
  if (gen_blob_outer_proof_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(gen_blob_outer_proof_response);
    if (message_arena != submessage_arena) {
      gen_blob_outer_proof_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, gen_blob_outer_proof_response, submessage_arena);
    }
    set_has_gen_blob_outer_proof_response();
    response_.gen_blob_outer_proof_response_ = gen_blob_outer_proof_response;
  }
  // @@protoc_insertion_point(field_set_allocated:aggregator.v1.ProverMessage.gen_blob_outer_proof_response)
}
void ProverMessage::set_allocated_gen_aggregated_blob_outer_proof_response(::aggregator::v1::GenAggregatedBlobOuterProofResponse* gen_aggregated_blob_outer_proof_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_response();
  if (gen_aggregated_blob_outer_proof_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(gen_aggregated_blob_outer_proof_response);
    if (message_arena != submessage_arena) {
      gen_aggregated_blob_outer_proof_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, gen_aggregated_blob_outer_proof_response, submessage_arena);
    }
    set_has_gen_aggregated_blob_outer_proof_response();
    response_.gen_aggregated_blob_outer_proof_response_ = gen_aggregated_blob_outer_proof_response;
  }
  // @@protoc_insertion_point(field_set_allocated:aggregator.v1.ProverMessage.gen_aggregated_blob_outer_proof_response)
}
void ProverMessage::set_allocated_gen_final_proof_response(::aggregator::v1::GenFinalProofResponse* gen_final_proof_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_response();
  if (gen_final_proof_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(gen_final_proof_response);
    if (message_arena != submessage_arena) {
      gen_final_proof_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, gen_final_proof_response, submessage_arena);
    }
    set_has_gen_final_proof_response();
    response_.gen_final_proof_response_ = gen_final_proof_response;
  }
  // @@protoc_insertion_point(field_set_allocated:aggregator.v1.ProverMessage.gen_final_proof_response)
}
void ProverMessage::set_allocated_cancel_response(::aggregator::v1::CancelResponse* cancel_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_response();
  if (cancel_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(cancel_response);
    if (message_arena != submessage_arena) {
      cancel_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cancel_response, submessage_arena);
    }
    set_has_cancel_response();
    response_.cancel_response_ = cancel_response;
  }
  // @@protoc_insertion_point(field_set_allocated:aggregator.v1.ProverMessage.cancel_response)
}
void ProverMessage::set_allocated_get_proof_response(::aggregator::v1::GetProofResponse* get_proof_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_response();
  if (get_proof_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(get_proof_response);
    if (message_arena != submessage_arena) {
      get_proof_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, get_proof_response, submessage_arena);
    }
    set_has_get_proof_response();
    response_.get_proof_response_ = get_proof_response;
  }
  // @@protoc_insertion_point(field_set_allocated:aggregator.v1.ProverMessage.get_proof_response)
}
ProverMessage::ProverMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:aggregator.v1.ProverMessage)
}
ProverMessage::ProverMessage(const ProverMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  clear_has_response();
  switch (from.response_case()) {
    case kGetStatusResponse: {
      _internal_mutable_get_status_response()->::aggregator::v1::GetStatusResponse::MergeFrom(from._internal_get_status_response());
      break;
    }
    case kGenBatchProofResponse: {
      _internal_mutable_gen_batch_proof_response()->::aggregator::v1::GenBatchProofResponse::MergeFrom(from._internal_gen_batch_proof_response());
      break;
    }
    case kGenAggregatedBatchProofResponse: {
      _internal_mutable_gen_aggregated_batch_proof_response()->::aggregator::v1::GenAggregatedBatchProofResponse::MergeFrom(from._internal_gen_aggregated_batch_proof_response());
      break;
    }
    case kGenBlobInnerProofResponse: {
      _internal_mutable_gen_blob_inner_proof_response()->::aggregator::v1::GenBlobInnerProofResponse::MergeFrom(from._internal_gen_blob_inner_proof_response());
      break;
    }
    case kGenBlobOuterProofResponse: {
      _internal_mutable_gen_blob_outer_proof_response()->::aggregator::v1::GenBlobOuterProofResponse::MergeFrom(from._internal_gen_blob_outer_proof_response());
      break;
    }
    case kGenAggregatedBlobOuterProofResponse: {
      _internal_mutable_gen_aggregated_blob_outer_proof_response()->::aggregator::v1::GenAggregatedBlobOuterProofResponse::MergeFrom(from._internal_gen_aggregated_blob_outer_proof_response());
      break;
    }
    case kGenFinalProofResponse: {
      _internal_mutable_gen_final_proof_response()->::aggregator::v1::GenFinalProofResponse::MergeFrom(from._internal_gen_final_proof_response());
      break;
    }
    case kCancelResponse: {
      _internal_mutable_cancel_response()->::aggregator::v1::CancelResponse::MergeFrom(from._internal_cancel_response());
      break;
    }
    case kGetProofResponse: {
      _internal_mutable_get_proof_response()->::aggregator::v1::GetProofResponse::MergeFrom(from._internal_get_proof_response());
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:aggregator.v1.ProverMessage)
}

void ProverMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProverMessage_aggregator_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clear_has_response();
}

ProverMessage::~ProverMessage() {
  // @@protoc_insertion_point(destructor:aggregator.v1.ProverMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProverMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (has_response()) {
    clear_response();
  }
}

void ProverMessage::ArenaDtor(void* object) {
  ProverMessage* _this = reinterpret_cast< ProverMessage* >(object);
  (void)_this;
}
void ProverMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProverMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProverMessage& ProverMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProverMessage_aggregator_2eproto.base);
  return *internal_default_instance();
}


void ProverMessage::clear_response() {
// @@protoc_insertion_point(one_of_clear_start:aggregator.v1.ProverMessage)
  switch (response_case()) {
    case kGetStatusResponse: {
      if (GetArena() == nullptr) {
        delete response_.get_status_response_;
      }
      break;
    }
    case kGenBatchProofResponse: {
      if (GetArena() == nullptr) {
        delete response_.gen_batch_proof_response_;
      }
      break;
    }
    case kGenAggregatedBatchProofResponse: {
      if (GetArena() == nullptr) {
        delete response_.gen_aggregated_batch_proof_response_;
      }
      break;
    }
    case kGenBlobInnerProofResponse: {
      if (GetArena() == nullptr) {
        delete response_.gen_blob_inner_proof_response_;
      }
      break;
    }
    case kGenBlobOuterProofResponse: {
      if (GetArena() == nullptr) {
        delete response_.gen_blob_outer_proof_response_;
      }
      break;
    }
    case kGenAggregatedBlobOuterProofResponse: {
      if (GetArena() == nullptr) {
        delete response_.gen_aggregated_blob_outer_proof_response_;
      }
      break;
    }
    case kGenFinalProofResponse: {
      if (GetArena() == nullptr) {
        delete response_.gen_final_proof_response_;
      }
      break;
    }
    case kCancelResponse: {
      if (GetArena() == nullptr) {
        delete response_.cancel_response_;
      }
      break;
    }
    case kGetProofResponse: {
      if (GetArena() == nullptr) {
        delete response_.get_proof_response_;
      }
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = RESPONSE_NOT_SET;
}


void ProverMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:aggregator.v1.ProverMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  clear_response();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProverMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "aggregator.v1.ProverMessage.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .aggregator.v1.GetStatusResponse get_status_response = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_get_status_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .aggregator.v1.GenBatchProofResponse gen_batch_proof_response = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_gen_batch_proof_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .aggregator.v1.GenAggregatedBatchProofResponse gen_aggregated_batch_proof_response = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_gen_aggregated_batch_proof_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .aggregator.v1.GenBlobInnerProofResponse gen_blob_inner_proof_response = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_gen_blob_inner_proof_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .aggregator.v1.GenBlobOuterProofResponse gen_blob_outer_proof_response = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_gen_blob_outer_proof_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .aggregator.v1.GenAggregatedBlobOuterProofResponse gen_aggregated_blob_outer_proof_response = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_gen_aggregated_blob_outer_proof_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .aggregator.v1.GenFinalProofResponse gen_final_proof_response = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_gen_final_proof_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .aggregator.v1.CancelResponse cancel_response = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_cancel_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .aggregator.v1.GetProofResponse get_proof_response = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_get_proof_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProverMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:aggregator.v1.ProverMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aggregator.v1.ProverMessage.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // .aggregator.v1.GetStatusResponse get_status_response = 2;
  if (_internal_has_get_status_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::get_status_response(this), target, stream);
  }

  // .aggregator.v1.GenBatchProofResponse gen_batch_proof_response = 3;
  if (_internal_has_gen_batch_proof_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::gen_batch_proof_response(this), target, stream);
  }

  // .aggregator.v1.GenAggregatedBatchProofResponse gen_aggregated_batch_proof_response = 4;
  if (_internal_has_gen_aggregated_batch_proof_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::gen_aggregated_batch_proof_response(this), target, stream);
  }

  // .aggregator.v1.GenBlobInnerProofResponse gen_blob_inner_proof_response = 5;
  if (_internal_has_gen_blob_inner_proof_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::gen_blob_inner_proof_response(this), target, stream);
  }

  // .aggregator.v1.GenBlobOuterProofResponse gen_blob_outer_proof_response = 6;
  if (_internal_has_gen_blob_outer_proof_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::gen_blob_outer_proof_response(this), target, stream);
  }

  // .aggregator.v1.GenAggregatedBlobOuterProofResponse gen_aggregated_blob_outer_proof_response = 7;
  if (_internal_has_gen_aggregated_blob_outer_proof_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::gen_aggregated_blob_outer_proof_response(this), target, stream);
  }

  // .aggregator.v1.GenFinalProofResponse gen_final_proof_response = 8;
  if (_internal_has_gen_final_proof_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::gen_final_proof_response(this), target, stream);
  }

  // .aggregator.v1.CancelResponse cancel_response = 9;
  if (_internal_has_cancel_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::cancel_response(this), target, stream);
  }

  // .aggregator.v1.GetProofResponse get_proof_response = 10;
  if (_internal_has_get_proof_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::get_proof_response(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aggregator.v1.ProverMessage)
  return target;
}

size_t ProverMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aggregator.v1.ProverMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  switch (response_case()) {
    // .aggregator.v1.GetStatusResponse get_status_response = 2;
    case kGetStatusResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *response_.get_status_response_);
      break;
    }
    // .aggregator.v1.GenBatchProofResponse gen_batch_proof_response = 3;
    case kGenBatchProofResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *response_.gen_batch_proof_response_);
      break;
    }
    // .aggregator.v1.GenAggregatedBatchProofResponse gen_aggregated_batch_proof_response = 4;
    case kGenAggregatedBatchProofResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *response_.gen_aggregated_batch_proof_response_);
      break;
    }
    // .aggregator.v1.GenBlobInnerProofResponse gen_blob_inner_proof_response = 5;
    case kGenBlobInnerProofResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *response_.gen_blob_inner_proof_response_);
      break;
    }
    // .aggregator.v1.GenBlobOuterProofResponse gen_blob_outer_proof_response = 6;
    case kGenBlobOuterProofResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *response_.gen_blob_outer_proof_response_);
      break;
    }
    // .aggregator.v1.GenAggregatedBlobOuterProofResponse gen_aggregated_blob_outer_proof_response = 7;
    case kGenAggregatedBlobOuterProofResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *response_.gen_aggregated_blob_outer_proof_response_);
      break;
    }
    // .aggregator.v1.GenFinalProofResponse gen_final_proof_response = 8;
    case kGenFinalProofResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *response_.gen_final_proof_response_);
      break;
    }
    // .aggregator.v1.CancelResponse cancel_response = 9;
    case kCancelResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *response_.cancel_response_);
      break;
    }
    // .aggregator.v1.GetProofResponse get_proof_response = 10;
    case kGetProofResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *response_.get_proof_response_);
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProverMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aggregator.v1.ProverMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ProverMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProverMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aggregator.v1.ProverMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aggregator.v1.ProverMessage)
    MergeFrom(*source);
  }
}

void ProverMessage::MergeFrom(const ProverMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aggregator.v1.ProverMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  switch (from.response_case()) {
    case kGetStatusResponse: {
      _internal_mutable_get_status_response()->::aggregator::v1::GetStatusResponse::MergeFrom(from._internal_get_status_response());
      break;
    }
    case kGenBatchProofResponse: {
      _internal_mutable_gen_batch_proof_response()->::aggregator::v1::GenBatchProofResponse::MergeFrom(from._internal_gen_batch_proof_response());
      break;
    }
    case kGenAggregatedBatchProofResponse: {
      _internal_mutable_gen_aggregated_batch_proof_response()->::aggregator::v1::GenAggregatedBatchProofResponse::MergeFrom(from._internal_gen_aggregated_batch_proof_response());
      break;
    }
    case kGenBlobInnerProofResponse: {
      _internal_mutable_gen_blob_inner_proof_response()->::aggregator::v1::GenBlobInnerProofResponse::MergeFrom(from._internal_gen_blob_inner_proof_response());
      break;
    }
    case kGenBlobOuterProofResponse: {
      _internal_mutable_gen_blob_outer_proof_response()->::aggregator::v1::GenBlobOuterProofResponse::MergeFrom(from._internal_gen_blob_outer_proof_response());
      break;
    }
    case kGenAggregatedBlobOuterProofResponse: {
      _internal_mutable_gen_aggregated_blob_outer_proof_response()->::aggregator::v1::GenAggregatedBlobOuterProofResponse::MergeFrom(from._internal_gen_aggregated_blob_outer_proof_response());
      break;
    }
    case kGenFinalProofResponse: {
      _internal_mutable_gen_final_proof_response()->::aggregator::v1::GenFinalProofResponse::MergeFrom(from._internal_gen_final_proof_response());
      break;
    }
    case kCancelResponse: {
      _internal_mutable_cancel_response()->::aggregator::v1::CancelResponse::MergeFrom(from._internal_cancel_response());
      break;
    }
    case kGetProofResponse: {
      _internal_mutable_get_proof_response()->::aggregator::v1::GetProofResponse::MergeFrom(from._internal_get_proof_response());
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
}

void ProverMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aggregator.v1.ProverMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProverMessage::CopyFrom(const ProverMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aggregator.v1.ProverMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProverMessage::IsInitialized() const {
  return true;
}

void ProverMessage::InternalSwap(ProverMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(response_, other->response_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProverMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetStatusRequest::InitAsDefaultInstance() {
}
class GetStatusRequest::_Internal {
 public:
};

GetStatusRequest::GetStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:aggregator.v1.GetStatusRequest)
}
GetStatusRequest::GetStatusRequest(const GetStatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:aggregator.v1.GetStatusRequest)
}

void GetStatusRequest::SharedCtor() {
}

GetStatusRequest::~GetStatusRequest() {
  // @@protoc_insertion_point(destructor:aggregator.v1.GetStatusRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetStatusRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetStatusRequest::ArenaDtor(void* object) {
  GetStatusRequest* _this = reinterpret_cast< GetStatusRequest* >(object);
  (void)_this;
}
void GetStatusRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetStatusRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetStatusRequest& GetStatusRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetStatusRequest_aggregator_2eproto.base);
  return *internal_default_instance();
}


void GetStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aggregator.v1.GetStatusRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetStatusRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetStatusRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:aggregator.v1.GetStatusRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aggregator.v1.GetStatusRequest)
  return target;
}

size_t GetStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aggregator.v1.GetStatusRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetStatusRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aggregator.v1.GetStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetStatusRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetStatusRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aggregator.v1.GetStatusRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aggregator.v1.GetStatusRequest)
    MergeFrom(*source);
  }
}

void GetStatusRequest::MergeFrom(const GetStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aggregator.v1.GetStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetStatusRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aggregator.v1.GetStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStatusRequest::CopyFrom(const GetStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aggregator.v1.GetStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStatusRequest::IsInitialized() const {
  return true;
}

void GetStatusRequest::InternalSwap(GetStatusRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetStatusRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GenBatchProofRequest::InitAsDefaultInstance() {
  ::aggregator::v1::_GenBatchProofRequest_default_instance_._instance.get_mutable()->input_ = const_cast< ::aggregator::v1::InputProver*>(
      ::aggregator::v1::InputProver::internal_default_instance());
}
class GenBatchProofRequest::_Internal {
 public:
  static const ::aggregator::v1::InputProver& input(const GenBatchProofRequest* msg);
};

const ::aggregator::v1::InputProver&
GenBatchProofRequest::_Internal::input(const GenBatchProofRequest* msg) {
  return *msg->input_;
}
GenBatchProofRequest::GenBatchProofRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:aggregator.v1.GenBatchProofRequest)
}
GenBatchProofRequest::GenBatchProofRequest(const GenBatchProofRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_input()) {
    input_ = new ::aggregator::v1::InputProver(*from.input_);
  } else {
    input_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:aggregator.v1.GenBatchProofRequest)
}

void GenBatchProofRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GenBatchProofRequest_aggregator_2eproto.base);
  input_ = nullptr;
}

GenBatchProofRequest::~GenBatchProofRequest() {
  // @@protoc_insertion_point(destructor:aggregator.v1.GenBatchProofRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GenBatchProofRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete input_;
}

void GenBatchProofRequest::ArenaDtor(void* object) {
  GenBatchProofRequest* _this = reinterpret_cast< GenBatchProofRequest* >(object);
  (void)_this;
}
void GenBatchProofRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GenBatchProofRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GenBatchProofRequest& GenBatchProofRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GenBatchProofRequest_aggregator_2eproto.base);
  return *internal_default_instance();
}


void GenBatchProofRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aggregator.v1.GenBatchProofRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && input_ != nullptr) {
    delete input_;
  }
  input_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenBatchProofRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .aggregator.v1.InputProver input = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_input(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenBatchProofRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:aggregator.v1.GenBatchProofRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .aggregator.v1.InputProver input = 1;
  if (this->has_input()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::input(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aggregator.v1.GenBatchProofRequest)
  return target;
}

size_t GenBatchProofRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aggregator.v1.GenBatchProofRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .aggregator.v1.InputProver input = 1;
  if (this->has_input()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *input_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenBatchProofRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aggregator.v1.GenBatchProofRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GenBatchProofRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenBatchProofRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aggregator.v1.GenBatchProofRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aggregator.v1.GenBatchProofRequest)
    MergeFrom(*source);
  }
}

void GenBatchProofRequest::MergeFrom(const GenBatchProofRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aggregator.v1.GenBatchProofRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_input()) {
    _internal_mutable_input()->::aggregator::v1::InputProver::MergeFrom(from._internal_input());
  }
}

void GenBatchProofRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aggregator.v1.GenBatchProofRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenBatchProofRequest::CopyFrom(const GenBatchProofRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aggregator.v1.GenBatchProofRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenBatchProofRequest::IsInitialized() const {
  return true;
}

void GenBatchProofRequest::InternalSwap(GenBatchProofRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(input_, other->input_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GenBatchProofRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GenStatelessBatchProofRequest::InitAsDefaultInstance() {
  ::aggregator::v1::_GenStatelessBatchProofRequest_default_instance_._instance.get_mutable()->input_ = const_cast< ::aggregator::v1::StatelessInputProver*>(
      ::aggregator::v1::StatelessInputProver::internal_default_instance());
}
class GenStatelessBatchProofRequest::_Internal {
 public:
  static const ::aggregator::v1::StatelessInputProver& input(const GenStatelessBatchProofRequest* msg);
};

const ::aggregator::v1::StatelessInputProver&
GenStatelessBatchProofRequest::_Internal::input(const GenStatelessBatchProofRequest* msg) {
  return *msg->input_;
}
GenStatelessBatchProofRequest::GenStatelessBatchProofRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:aggregator.v1.GenStatelessBatchProofRequest)
}
GenStatelessBatchProofRequest::GenStatelessBatchProofRequest(const GenStatelessBatchProofRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_input()) {
    input_ = new ::aggregator::v1::StatelessInputProver(*from.input_);
  } else {
    input_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:aggregator.v1.GenStatelessBatchProofRequest)
}

void GenStatelessBatchProofRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GenStatelessBatchProofRequest_aggregator_2eproto.base);
  input_ = nullptr;
}

GenStatelessBatchProofRequest::~GenStatelessBatchProofRequest() {
  // @@protoc_insertion_point(destructor:aggregator.v1.GenStatelessBatchProofRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GenStatelessBatchProofRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete input_;
}

void GenStatelessBatchProofRequest::ArenaDtor(void* object) {
  GenStatelessBatchProofRequest* _this = reinterpret_cast< GenStatelessBatchProofRequest* >(object);
  (void)_this;
}
void GenStatelessBatchProofRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GenStatelessBatchProofRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GenStatelessBatchProofRequest& GenStatelessBatchProofRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GenStatelessBatchProofRequest_aggregator_2eproto.base);
  return *internal_default_instance();
}


void GenStatelessBatchProofRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aggregator.v1.GenStatelessBatchProofRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && input_ != nullptr) {
    delete input_;
  }
  input_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenStatelessBatchProofRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .aggregator.v1.StatelessInputProver input = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_input(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenStatelessBatchProofRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:aggregator.v1.GenStatelessBatchProofRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .aggregator.v1.StatelessInputProver input = 1;
  if (this->has_input()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::input(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aggregator.v1.GenStatelessBatchProofRequest)
  return target;
}

size_t GenStatelessBatchProofRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aggregator.v1.GenStatelessBatchProofRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .aggregator.v1.StatelessInputProver input = 1;
  if (this->has_input()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *input_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenStatelessBatchProofRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aggregator.v1.GenStatelessBatchProofRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GenStatelessBatchProofRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenStatelessBatchProofRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aggregator.v1.GenStatelessBatchProofRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aggregator.v1.GenStatelessBatchProofRequest)
    MergeFrom(*source);
  }
}

void GenStatelessBatchProofRequest::MergeFrom(const GenStatelessBatchProofRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aggregator.v1.GenStatelessBatchProofRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_input()) {
    _internal_mutable_input()->::aggregator::v1::StatelessInputProver::MergeFrom(from._internal_input());
  }
}

void GenStatelessBatchProofRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aggregator.v1.GenStatelessBatchProofRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenStatelessBatchProofRequest::CopyFrom(const GenStatelessBatchProofRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aggregator.v1.GenStatelessBatchProofRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenStatelessBatchProofRequest::IsInitialized() const {
  return true;
}

void GenStatelessBatchProofRequest::InternalSwap(GenStatelessBatchProofRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(input_, other->input_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GenStatelessBatchProofRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GenAggregatedBatchProofRequest::InitAsDefaultInstance() {
}
class GenAggregatedBatchProofRequest::_Internal {
 public:
};

GenAggregatedBatchProofRequest::GenAggregatedBatchProofRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:aggregator.v1.GenAggregatedBatchProofRequest)
}
GenAggregatedBatchProofRequest::GenAggregatedBatchProofRequest(const GenAggregatedBatchProofRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  recursive_proof_1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_recursive_proof_1().empty()) {
    recursive_proof_1_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_recursive_proof_1(),
      GetArena());
  }
  recursive_proof_2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_recursive_proof_2().empty()) {
    recursive_proof_2_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_recursive_proof_2(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:aggregator.v1.GenAggregatedBatchProofRequest)
}

void GenAggregatedBatchProofRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GenAggregatedBatchProofRequest_aggregator_2eproto.base);
  recursive_proof_1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  recursive_proof_2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GenAggregatedBatchProofRequest::~GenAggregatedBatchProofRequest() {
  // @@protoc_insertion_point(destructor:aggregator.v1.GenAggregatedBatchProofRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GenAggregatedBatchProofRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  recursive_proof_1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  recursive_proof_2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GenAggregatedBatchProofRequest::ArenaDtor(void* object) {
  GenAggregatedBatchProofRequest* _this = reinterpret_cast< GenAggregatedBatchProofRequest* >(object);
  (void)_this;
}
void GenAggregatedBatchProofRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GenAggregatedBatchProofRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GenAggregatedBatchProofRequest& GenAggregatedBatchProofRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GenAggregatedBatchProofRequest_aggregator_2eproto.base);
  return *internal_default_instance();
}


void GenAggregatedBatchProofRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aggregator.v1.GenAggregatedBatchProofRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recursive_proof_1_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  recursive_proof_2_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenAggregatedBatchProofRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string recursive_proof_1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_recursive_proof_1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "aggregator.v1.GenAggregatedBatchProofRequest.recursive_proof_1"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string recursive_proof_2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_recursive_proof_2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "aggregator.v1.GenAggregatedBatchProofRequest.recursive_proof_2"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenAggregatedBatchProofRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:aggregator.v1.GenAggregatedBatchProofRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string recursive_proof_1 = 1;
  if (this->recursive_proof_1().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_recursive_proof_1().data(), static_cast<int>(this->_internal_recursive_proof_1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aggregator.v1.GenAggregatedBatchProofRequest.recursive_proof_1");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_recursive_proof_1(), target);
  }

  // string recursive_proof_2 = 2;
  if (this->recursive_proof_2().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_recursive_proof_2().data(), static_cast<int>(this->_internal_recursive_proof_2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aggregator.v1.GenAggregatedBatchProofRequest.recursive_proof_2");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_recursive_proof_2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aggregator.v1.GenAggregatedBatchProofRequest)
  return target;
}

size_t GenAggregatedBatchProofRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aggregator.v1.GenAggregatedBatchProofRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string recursive_proof_1 = 1;
  if (this->recursive_proof_1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_recursive_proof_1());
  }

  // string recursive_proof_2 = 2;
  if (this->recursive_proof_2().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_recursive_proof_2());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenAggregatedBatchProofRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aggregator.v1.GenAggregatedBatchProofRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GenAggregatedBatchProofRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenAggregatedBatchProofRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aggregator.v1.GenAggregatedBatchProofRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aggregator.v1.GenAggregatedBatchProofRequest)
    MergeFrom(*source);
  }
}

void GenAggregatedBatchProofRequest::MergeFrom(const GenAggregatedBatchProofRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aggregator.v1.GenAggregatedBatchProofRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.recursive_proof_1().size() > 0) {
    _internal_set_recursive_proof_1(from._internal_recursive_proof_1());
  }
  if (from.recursive_proof_2().size() > 0) {
    _internal_set_recursive_proof_2(from._internal_recursive_proof_2());
  }
}

void GenAggregatedBatchProofRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aggregator.v1.GenAggregatedBatchProofRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenAggregatedBatchProofRequest::CopyFrom(const GenAggregatedBatchProofRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aggregator.v1.GenAggregatedBatchProofRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenAggregatedBatchProofRequest::IsInitialized() const {
  return true;
}

void GenAggregatedBatchProofRequest::InternalSwap(GenAggregatedBatchProofRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  recursive_proof_1_.Swap(&other->recursive_proof_1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  recursive_proof_2_.Swap(&other->recursive_proof_2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GenAggregatedBatchProofRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GenBlobInnerProofRequest::InitAsDefaultInstance() {
  ::aggregator::v1::_GenBlobInnerProofRequest_default_instance_._instance.get_mutable()->input_ = const_cast< ::aggregator::v1::InputBlobInnerProver*>(
      ::aggregator::v1::InputBlobInnerProver::internal_default_instance());
}
class GenBlobInnerProofRequest::_Internal {
 public:
  static const ::aggregator::v1::InputBlobInnerProver& input(const GenBlobInnerProofRequest* msg);
};

const ::aggregator::v1::InputBlobInnerProver&
GenBlobInnerProofRequest::_Internal::input(const GenBlobInnerProofRequest* msg) {
  return *msg->input_;
}
GenBlobInnerProofRequest::GenBlobInnerProofRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:aggregator.v1.GenBlobInnerProofRequest)
}
GenBlobInnerProofRequest::GenBlobInnerProofRequest(const GenBlobInnerProofRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_input()) {
    input_ = new ::aggregator::v1::InputBlobInnerProver(*from.input_);
  } else {
    input_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:aggregator.v1.GenBlobInnerProofRequest)
}

void GenBlobInnerProofRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GenBlobInnerProofRequest_aggregator_2eproto.base);
  input_ = nullptr;
}

GenBlobInnerProofRequest::~GenBlobInnerProofRequest() {
  // @@protoc_insertion_point(destructor:aggregator.v1.GenBlobInnerProofRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GenBlobInnerProofRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete input_;
}

void GenBlobInnerProofRequest::ArenaDtor(void* object) {
  GenBlobInnerProofRequest* _this = reinterpret_cast< GenBlobInnerProofRequest* >(object);
  (void)_this;
}
void GenBlobInnerProofRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GenBlobInnerProofRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GenBlobInnerProofRequest& GenBlobInnerProofRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GenBlobInnerProofRequest_aggregator_2eproto.base);
  return *internal_default_instance();
}


void GenBlobInnerProofRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aggregator.v1.GenBlobInnerProofRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && input_ != nullptr) {
    delete input_;
  }
  input_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenBlobInnerProofRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .aggregator.v1.InputBlobInnerProver input = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_input(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenBlobInnerProofRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:aggregator.v1.GenBlobInnerProofRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .aggregator.v1.InputBlobInnerProver input = 1;
  if (this->has_input()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::input(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aggregator.v1.GenBlobInnerProofRequest)
  return target;
}

size_t GenBlobInnerProofRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aggregator.v1.GenBlobInnerProofRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .aggregator.v1.InputBlobInnerProver input = 1;
  if (this->has_input()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *input_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenBlobInnerProofRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aggregator.v1.GenBlobInnerProofRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GenBlobInnerProofRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenBlobInnerProofRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aggregator.v1.GenBlobInnerProofRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aggregator.v1.GenBlobInnerProofRequest)
    MergeFrom(*source);
  }
}

void GenBlobInnerProofRequest::MergeFrom(const GenBlobInnerProofRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aggregator.v1.GenBlobInnerProofRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_input()) {
    _internal_mutable_input()->::aggregator::v1::InputBlobInnerProver::MergeFrom(from._internal_input());
  }
}

void GenBlobInnerProofRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aggregator.v1.GenBlobInnerProofRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenBlobInnerProofRequest::CopyFrom(const GenBlobInnerProofRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aggregator.v1.GenBlobInnerProofRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenBlobInnerProofRequest::IsInitialized() const {
  return true;
}

void GenBlobInnerProofRequest::InternalSwap(GenBlobInnerProofRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(input_, other->input_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GenBlobInnerProofRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GenBlobOuterProofRequest::InitAsDefaultInstance() {
}
class GenBlobOuterProofRequest::_Internal {
 public:
};

GenBlobOuterProofRequest::GenBlobOuterProofRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:aggregator.v1.GenBlobOuterProofRequest)
}
GenBlobOuterProofRequest::GenBlobOuterProofRequest(const GenBlobOuterProofRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  batch_proof_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_batch_proof().empty()) {
    batch_proof_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_batch_proof(),
      GetArena());
  }
  blob_inner_proof_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_blob_inner_proof().empty()) {
    blob_inner_proof_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_blob_inner_proof(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:aggregator.v1.GenBlobOuterProofRequest)
}

void GenBlobOuterProofRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GenBlobOuterProofRequest_aggregator_2eproto.base);
  batch_proof_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  blob_inner_proof_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GenBlobOuterProofRequest::~GenBlobOuterProofRequest() {
  // @@protoc_insertion_point(destructor:aggregator.v1.GenBlobOuterProofRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GenBlobOuterProofRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  batch_proof_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  blob_inner_proof_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GenBlobOuterProofRequest::ArenaDtor(void* object) {
  GenBlobOuterProofRequest* _this = reinterpret_cast< GenBlobOuterProofRequest* >(object);
  (void)_this;
}
void GenBlobOuterProofRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GenBlobOuterProofRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GenBlobOuterProofRequest& GenBlobOuterProofRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GenBlobOuterProofRequest_aggregator_2eproto.base);
  return *internal_default_instance();
}


void GenBlobOuterProofRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aggregator.v1.GenBlobOuterProofRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  batch_proof_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  blob_inner_proof_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenBlobOuterProofRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string batch_proof = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_batch_proof();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "aggregator.v1.GenBlobOuterProofRequest.batch_proof"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string blob_inner_proof = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_blob_inner_proof();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "aggregator.v1.GenBlobOuterProofRequest.blob_inner_proof"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenBlobOuterProofRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:aggregator.v1.GenBlobOuterProofRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string batch_proof = 1;
  if (this->batch_proof().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_batch_proof().data(), static_cast<int>(this->_internal_batch_proof().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aggregator.v1.GenBlobOuterProofRequest.batch_proof");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_batch_proof(), target);
  }

  // string blob_inner_proof = 2;
  if (this->blob_inner_proof().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_blob_inner_proof().data(), static_cast<int>(this->_internal_blob_inner_proof().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aggregator.v1.GenBlobOuterProofRequest.blob_inner_proof");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_blob_inner_proof(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aggregator.v1.GenBlobOuterProofRequest)
  return target;
}

size_t GenBlobOuterProofRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aggregator.v1.GenBlobOuterProofRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string batch_proof = 1;
  if (this->batch_proof().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_batch_proof());
  }

  // string blob_inner_proof = 2;
  if (this->blob_inner_proof().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_blob_inner_proof());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenBlobOuterProofRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aggregator.v1.GenBlobOuterProofRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GenBlobOuterProofRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenBlobOuterProofRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aggregator.v1.GenBlobOuterProofRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aggregator.v1.GenBlobOuterProofRequest)
    MergeFrom(*source);
  }
}

void GenBlobOuterProofRequest::MergeFrom(const GenBlobOuterProofRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aggregator.v1.GenBlobOuterProofRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.batch_proof().size() > 0) {
    _internal_set_batch_proof(from._internal_batch_proof());
  }
  if (from.blob_inner_proof().size() > 0) {
    _internal_set_blob_inner_proof(from._internal_blob_inner_proof());
  }
}

void GenBlobOuterProofRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aggregator.v1.GenBlobOuterProofRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenBlobOuterProofRequest::CopyFrom(const GenBlobOuterProofRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aggregator.v1.GenBlobOuterProofRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenBlobOuterProofRequest::IsInitialized() const {
  return true;
}

void GenBlobOuterProofRequest::InternalSwap(GenBlobOuterProofRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  batch_proof_.Swap(&other->batch_proof_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  blob_inner_proof_.Swap(&other->blob_inner_proof_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GenBlobOuterProofRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GenAggregatedBlobOuterProofRequest::InitAsDefaultInstance() {
}
class GenAggregatedBlobOuterProofRequest::_Internal {
 public:
};

GenAggregatedBlobOuterProofRequest::GenAggregatedBlobOuterProofRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:aggregator.v1.GenAggregatedBlobOuterProofRequest)
}
GenAggregatedBlobOuterProofRequest::GenAggregatedBlobOuterProofRequest(const GenAggregatedBlobOuterProofRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  recursive_proof_1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_recursive_proof_1().empty()) {
    recursive_proof_1_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_recursive_proof_1(),
      GetArena());
  }
  recursive_proof_2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_recursive_proof_2().empty()) {
    recursive_proof_2_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_recursive_proof_2(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:aggregator.v1.GenAggregatedBlobOuterProofRequest)
}

void GenAggregatedBlobOuterProofRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GenAggregatedBlobOuterProofRequest_aggregator_2eproto.base);
  recursive_proof_1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  recursive_proof_2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GenAggregatedBlobOuterProofRequest::~GenAggregatedBlobOuterProofRequest() {
  // @@protoc_insertion_point(destructor:aggregator.v1.GenAggregatedBlobOuterProofRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GenAggregatedBlobOuterProofRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  recursive_proof_1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  recursive_proof_2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GenAggregatedBlobOuterProofRequest::ArenaDtor(void* object) {
  GenAggregatedBlobOuterProofRequest* _this = reinterpret_cast< GenAggregatedBlobOuterProofRequest* >(object);
  (void)_this;
}
void GenAggregatedBlobOuterProofRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GenAggregatedBlobOuterProofRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GenAggregatedBlobOuterProofRequest& GenAggregatedBlobOuterProofRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GenAggregatedBlobOuterProofRequest_aggregator_2eproto.base);
  return *internal_default_instance();
}


void GenAggregatedBlobOuterProofRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aggregator.v1.GenAggregatedBlobOuterProofRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recursive_proof_1_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  recursive_proof_2_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenAggregatedBlobOuterProofRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string recursive_proof_1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_recursive_proof_1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "aggregator.v1.GenAggregatedBlobOuterProofRequest.recursive_proof_1"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string recursive_proof_2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_recursive_proof_2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "aggregator.v1.GenAggregatedBlobOuterProofRequest.recursive_proof_2"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenAggregatedBlobOuterProofRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:aggregator.v1.GenAggregatedBlobOuterProofRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string recursive_proof_1 = 1;
  if (this->recursive_proof_1().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_recursive_proof_1().data(), static_cast<int>(this->_internal_recursive_proof_1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aggregator.v1.GenAggregatedBlobOuterProofRequest.recursive_proof_1");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_recursive_proof_1(), target);
  }

  // string recursive_proof_2 = 2;
  if (this->recursive_proof_2().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_recursive_proof_2().data(), static_cast<int>(this->_internal_recursive_proof_2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aggregator.v1.GenAggregatedBlobOuterProofRequest.recursive_proof_2");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_recursive_proof_2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aggregator.v1.GenAggregatedBlobOuterProofRequest)
  return target;
}

size_t GenAggregatedBlobOuterProofRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aggregator.v1.GenAggregatedBlobOuterProofRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string recursive_proof_1 = 1;
  if (this->recursive_proof_1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_recursive_proof_1());
  }

  // string recursive_proof_2 = 2;
  if (this->recursive_proof_2().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_recursive_proof_2());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenAggregatedBlobOuterProofRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aggregator.v1.GenAggregatedBlobOuterProofRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GenAggregatedBlobOuterProofRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenAggregatedBlobOuterProofRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aggregator.v1.GenAggregatedBlobOuterProofRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aggregator.v1.GenAggregatedBlobOuterProofRequest)
    MergeFrom(*source);
  }
}

void GenAggregatedBlobOuterProofRequest::MergeFrom(const GenAggregatedBlobOuterProofRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aggregator.v1.GenAggregatedBlobOuterProofRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.recursive_proof_1().size() > 0) {
    _internal_set_recursive_proof_1(from._internal_recursive_proof_1());
  }
  if (from.recursive_proof_2().size() > 0) {
    _internal_set_recursive_proof_2(from._internal_recursive_proof_2());
  }
}

void GenAggregatedBlobOuterProofRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aggregator.v1.GenAggregatedBlobOuterProofRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenAggregatedBlobOuterProofRequest::CopyFrom(const GenAggregatedBlobOuterProofRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aggregator.v1.GenAggregatedBlobOuterProofRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenAggregatedBlobOuterProofRequest::IsInitialized() const {
  return true;
}

void GenAggregatedBlobOuterProofRequest::InternalSwap(GenAggregatedBlobOuterProofRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  recursive_proof_1_.Swap(&other->recursive_proof_1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  recursive_proof_2_.Swap(&other->recursive_proof_2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GenAggregatedBlobOuterProofRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GenFinalProofRequest::InitAsDefaultInstance() {
}
class GenFinalProofRequest::_Internal {
 public:
};

GenFinalProofRequest::GenFinalProofRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:aggregator.v1.GenFinalProofRequest)
}
GenFinalProofRequest::GenFinalProofRequest(const GenFinalProofRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  recursive_proof_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_recursive_proof().empty()) {
    recursive_proof_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_recursive_proof(),
      GetArena());
  }
  aggregator_addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_aggregator_addr().empty()) {
    aggregator_addr_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_aggregator_addr(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:aggregator.v1.GenFinalProofRequest)
}

void GenFinalProofRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GenFinalProofRequest_aggregator_2eproto.base);
  recursive_proof_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  aggregator_addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GenFinalProofRequest::~GenFinalProofRequest() {
  // @@protoc_insertion_point(destructor:aggregator.v1.GenFinalProofRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GenFinalProofRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  recursive_proof_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  aggregator_addr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GenFinalProofRequest::ArenaDtor(void* object) {
  GenFinalProofRequest* _this = reinterpret_cast< GenFinalProofRequest* >(object);
  (void)_this;
}
void GenFinalProofRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GenFinalProofRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GenFinalProofRequest& GenFinalProofRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GenFinalProofRequest_aggregator_2eproto.base);
  return *internal_default_instance();
}


void GenFinalProofRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aggregator.v1.GenFinalProofRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recursive_proof_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  aggregator_addr_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenFinalProofRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string recursive_proof = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_recursive_proof();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "aggregator.v1.GenFinalProofRequest.recursive_proof"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string aggregator_addr = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_aggregator_addr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "aggregator.v1.GenFinalProofRequest.aggregator_addr"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenFinalProofRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:aggregator.v1.GenFinalProofRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string recursive_proof = 1;
  if (this->recursive_proof().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_recursive_proof().data(), static_cast<int>(this->_internal_recursive_proof().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aggregator.v1.GenFinalProofRequest.recursive_proof");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_recursive_proof(), target);
  }

  // string aggregator_addr = 2;
  if (this->aggregator_addr().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_aggregator_addr().data(), static_cast<int>(this->_internal_aggregator_addr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aggregator.v1.GenFinalProofRequest.aggregator_addr");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_aggregator_addr(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aggregator.v1.GenFinalProofRequest)
  return target;
}

size_t GenFinalProofRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aggregator.v1.GenFinalProofRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string recursive_proof = 1;
  if (this->recursive_proof().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_recursive_proof());
  }

  // string aggregator_addr = 2;
  if (this->aggregator_addr().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_aggregator_addr());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenFinalProofRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aggregator.v1.GenFinalProofRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GenFinalProofRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenFinalProofRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aggregator.v1.GenFinalProofRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aggregator.v1.GenFinalProofRequest)
    MergeFrom(*source);
  }
}

void GenFinalProofRequest::MergeFrom(const GenFinalProofRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aggregator.v1.GenFinalProofRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.recursive_proof().size() > 0) {
    _internal_set_recursive_proof(from._internal_recursive_proof());
  }
  if (from.aggregator_addr().size() > 0) {
    _internal_set_aggregator_addr(from._internal_aggregator_addr());
  }
}

void GenFinalProofRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aggregator.v1.GenFinalProofRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenFinalProofRequest::CopyFrom(const GenFinalProofRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aggregator.v1.GenFinalProofRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenFinalProofRequest::IsInitialized() const {
  return true;
}

void GenFinalProofRequest::InternalSwap(GenFinalProofRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  recursive_proof_.Swap(&other->recursive_proof_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  aggregator_addr_.Swap(&other->aggregator_addr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GenFinalProofRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CancelRequest::InitAsDefaultInstance() {
}
class CancelRequest::_Internal {
 public:
};

CancelRequest::CancelRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:aggregator.v1.CancelRequest)
}
CancelRequest::CancelRequest(const CancelRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:aggregator.v1.CancelRequest)
}

void CancelRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CancelRequest_aggregator_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CancelRequest::~CancelRequest() {
  // @@protoc_insertion_point(destructor:aggregator.v1.CancelRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CancelRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CancelRequest::ArenaDtor(void* object) {
  CancelRequest* _this = reinterpret_cast< CancelRequest* >(object);
  (void)_this;
}
void CancelRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CancelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CancelRequest& CancelRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CancelRequest_aggregator_2eproto.base);
  return *internal_default_instance();
}


void CancelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aggregator.v1.CancelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CancelRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "aggregator.v1.CancelRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CancelRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:aggregator.v1.CancelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aggregator.v1.CancelRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aggregator.v1.CancelRequest)
  return target;
}

size_t CancelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aggregator.v1.CancelRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CancelRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aggregator.v1.CancelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CancelRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aggregator.v1.CancelRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aggregator.v1.CancelRequest)
    MergeFrom(*source);
  }
}

void CancelRequest::MergeFrom(const CancelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aggregator.v1.CancelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void CancelRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aggregator.v1.CancelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelRequest::CopyFrom(const CancelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aggregator.v1.CancelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelRequest::IsInitialized() const {
  return true;
}

void CancelRequest::InternalSwap(CancelRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CancelRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetProofRequest::InitAsDefaultInstance() {
}
class GetProofRequest::_Internal {
 public:
};

GetProofRequest::GetProofRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:aggregator.v1.GetProofRequest)
}
GetProofRequest::GetProofRequest(const GetProofRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  timeout_ = from.timeout_;
  // @@protoc_insertion_point(copy_constructor:aggregator.v1.GetProofRequest)
}

void GetProofRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetProofRequest_aggregator_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  timeout_ = PROTOBUF_ULONGLONG(0);
}

GetProofRequest::~GetProofRequest() {
  // @@protoc_insertion_point(destructor:aggregator.v1.GetProofRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetProofRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetProofRequest::ArenaDtor(void* object) {
  GetProofRequest* _this = reinterpret_cast< GetProofRequest* >(object);
  (void)_this;
}
void GetProofRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetProofRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetProofRequest& GetProofRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetProofRequest_aggregator_2eproto.base);
  return *internal_default_instance();
}


void GetProofRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aggregator.v1.GetProofRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  timeout_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetProofRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "aggregator.v1.GetProofRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 timeout = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          timeout_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetProofRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:aggregator.v1.GetProofRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aggregator.v1.GetProofRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // uint64 timeout = 2;
  if (this->timeout() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_timeout(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aggregator.v1.GetProofRequest)
  return target;
}

size_t GetProofRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aggregator.v1.GetProofRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // uint64 timeout = 2;
  if (this->timeout() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_timeout());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetProofRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aggregator.v1.GetProofRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetProofRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetProofRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aggregator.v1.GetProofRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aggregator.v1.GetProofRequest)
    MergeFrom(*source);
  }
}

void GetProofRequest::MergeFrom(const GetProofRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aggregator.v1.GetProofRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.timeout() != 0) {
    _internal_set_timeout(from._internal_timeout());
  }
}

void GetProofRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aggregator.v1.GetProofRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetProofRequest::CopyFrom(const GetProofRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aggregator.v1.GetProofRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetProofRequest::IsInitialized() const {
  return true;
}

void GetProofRequest::InternalSwap(GetProofRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(timeout_, other->timeout_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetProofRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetStatusResponse::InitAsDefaultInstance() {
}
class GetStatusResponse::_Internal {
 public:
};

GetStatusResponse::GetStatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  pending_request_queue_ids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:aggregator.v1.GetStatusResponse)
}
GetStatusResponse::GetStatusResponse(const GetStatusResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      pending_request_queue_ids_(from.pending_request_queue_ids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  last_computed_request_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_last_computed_request_id().empty()) {
    last_computed_request_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_last_computed_request_id(),
      GetArena());
  }
  current_computing_request_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_current_computing_request_id().empty()) {
    current_computing_request_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_current_computing_request_id(),
      GetArena());
  }
  version_proto_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_version_proto().empty()) {
    version_proto_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_version_proto(),
      GetArena());
  }
  version_server_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_version_server().empty()) {
    version_server_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_version_server(),
      GetArena());
  }
  prover_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_prover_name().empty()) {
    prover_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_prover_name(),
      GetArena());
  }
  prover_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_prover_id().empty()) {
    prover_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_prover_id(),
      GetArena());
  }
  ::memcpy(&last_computed_end_time_, &from.last_computed_end_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&last_computed_end_time_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:aggregator.v1.GetStatusResponse)
}

void GetStatusResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetStatusResponse_aggregator_2eproto.base);
  last_computed_request_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  current_computing_request_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_proto_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_server_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  prover_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  prover_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&last_computed_end_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&last_computed_end_time_)) + sizeof(status_));
}

GetStatusResponse::~GetStatusResponse() {
  // @@protoc_insertion_point(destructor:aggregator.v1.GetStatusResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetStatusResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  last_computed_request_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  current_computing_request_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_proto_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_server_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  prover_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  prover_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetStatusResponse::ArenaDtor(void* object) {
  GetStatusResponse* _this = reinterpret_cast< GetStatusResponse* >(object);
  (void)_this;
}
void GetStatusResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetStatusResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetStatusResponse& GetStatusResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetStatusResponse_aggregator_2eproto.base);
  return *internal_default_instance();
}


void GetStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aggregator.v1.GetStatusResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pending_request_queue_ids_.Clear();
  last_computed_request_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  current_computing_request_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_proto_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_server_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  prover_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  prover_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&last_computed_end_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&last_computed_end_time_)) + sizeof(status_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetStatusResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .aggregator.v1.GetStatusResponse.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::aggregator::v1::GetStatusResponse_Status>(val));
        } else goto handle_unusual;
        continue;
      // string last_computed_request_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_last_computed_request_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "aggregator.v1.GetStatusResponse.last_computed_request_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 last_computed_end_time = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          last_computed_end_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string current_computing_request_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_current_computing_request_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "aggregator.v1.GetStatusResponse.current_computing_request_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 current_computing_start_time = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          current_computing_start_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string version_proto = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_version_proto();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "aggregator.v1.GetStatusResponse.version_proto"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string version_server = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_version_server();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "aggregator.v1.GetStatusResponse.version_server"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string pending_request_queue_ids = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_pending_request_queue_ids();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "aggregator.v1.GetStatusResponse.pending_request_queue_ids"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      // string prover_name = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_prover_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "aggregator.v1.GetStatusResponse.prover_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string prover_id = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_prover_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "aggregator.v1.GetStatusResponse.prover_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 number_of_cores = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          number_of_cores_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 total_memory = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          total_memory_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 free_memory = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          free_memory_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 fork_id = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          fork_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetStatusResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:aggregator.v1.GetStatusResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .aggregator.v1.GetStatusResponse.Status status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  // string last_computed_request_id = 2;
  if (this->last_computed_request_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_last_computed_request_id().data(), static_cast<int>(this->_internal_last_computed_request_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aggregator.v1.GetStatusResponse.last_computed_request_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_last_computed_request_id(), target);
  }

  // uint64 last_computed_end_time = 3;
  if (this->last_computed_end_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_last_computed_end_time(), target);
  }

  // string current_computing_request_id = 4;
  if (this->current_computing_request_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_current_computing_request_id().data(), static_cast<int>(this->_internal_current_computing_request_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aggregator.v1.GetStatusResponse.current_computing_request_id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_current_computing_request_id(), target);
  }

  // uint64 current_computing_start_time = 5;
  if (this->current_computing_start_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_current_computing_start_time(), target);
  }

  // string version_proto = 6;
  if (this->version_proto().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version_proto().data(), static_cast<int>(this->_internal_version_proto().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aggregator.v1.GetStatusResponse.version_proto");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_version_proto(), target);
  }

  // string version_server = 7;
  if (this->version_server().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version_server().data(), static_cast<int>(this->_internal_version_server().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aggregator.v1.GetStatusResponse.version_server");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_version_server(), target);
  }

  // repeated string pending_request_queue_ids = 8;
  for (int i = 0, n = this->_internal_pending_request_queue_ids_size(); i < n; i++) {
    const auto& s = this->_internal_pending_request_queue_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aggregator.v1.GetStatusResponse.pending_request_queue_ids");
    target = stream->WriteString(8, s, target);
  }

  // string prover_name = 9;
  if (this->prover_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_prover_name().data(), static_cast<int>(this->_internal_prover_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aggregator.v1.GetStatusResponse.prover_name");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_prover_name(), target);
  }

  // string prover_id = 10;
  if (this->prover_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_prover_id().data(), static_cast<int>(this->_internal_prover_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aggregator.v1.GetStatusResponse.prover_id");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_prover_id(), target);
  }

  // uint64 number_of_cores = 11;
  if (this->number_of_cores() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(11, this->_internal_number_of_cores(), target);
  }

  // uint64 total_memory = 12;
  if (this->total_memory() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(12, this->_internal_total_memory(), target);
  }

  // uint64 free_memory = 13;
  if (this->free_memory() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(13, this->_internal_free_memory(), target);
  }

  // uint64 fork_id = 14;
  if (this->fork_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(14, this->_internal_fork_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aggregator.v1.GetStatusResponse)
  return target;
}

size_t GetStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aggregator.v1.GetStatusResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string pending_request_queue_ids = 8;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(pending_request_queue_ids_.size());
  for (int i = 0, n = pending_request_queue_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      pending_request_queue_ids_.Get(i));
  }

  // string last_computed_request_id = 2;
  if (this->last_computed_request_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_last_computed_request_id());
  }

  // string current_computing_request_id = 4;
  if (this->current_computing_request_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_current_computing_request_id());
  }

  // string version_proto = 6;
  if (this->version_proto().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version_proto());
  }

  // string version_server = 7;
  if (this->version_server().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version_server());
  }

  // string prover_name = 9;
  if (this->prover_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_prover_name());
  }

  // string prover_id = 10;
  if (this->prover_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_prover_id());
  }

  // uint64 last_computed_end_time = 3;
  if (this->last_computed_end_time() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_last_computed_end_time());
  }

  // uint64 current_computing_start_time = 5;
  if (this->current_computing_start_time() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_current_computing_start_time());
  }

  // uint64 number_of_cores = 11;
  if (this->number_of_cores() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_number_of_cores());
  }

  // uint64 total_memory = 12;
  if (this->total_memory() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_total_memory());
  }

  // uint64 free_memory = 13;
  if (this->free_memory() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_free_memory());
  }

  // uint64 fork_id = 14;
  if (this->fork_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_fork_id());
  }

  // .aggregator.v1.GetStatusResponse.Status status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetStatusResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aggregator.v1.GetStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetStatusResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetStatusResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aggregator.v1.GetStatusResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aggregator.v1.GetStatusResponse)
    MergeFrom(*source);
  }
}

void GetStatusResponse::MergeFrom(const GetStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aggregator.v1.GetStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pending_request_queue_ids_.MergeFrom(from.pending_request_queue_ids_);
  if (from.last_computed_request_id().size() > 0) {
    _internal_set_last_computed_request_id(from._internal_last_computed_request_id());
  }
  if (from.current_computing_request_id().size() > 0) {
    _internal_set_current_computing_request_id(from._internal_current_computing_request_id());
  }
  if (from.version_proto().size() > 0) {
    _internal_set_version_proto(from._internal_version_proto());
  }
  if (from.version_server().size() > 0) {
    _internal_set_version_server(from._internal_version_server());
  }
  if (from.prover_name().size() > 0) {
    _internal_set_prover_name(from._internal_prover_name());
  }
  if (from.prover_id().size() > 0) {
    _internal_set_prover_id(from._internal_prover_id());
  }
  if (from.last_computed_end_time() != 0) {
    _internal_set_last_computed_end_time(from._internal_last_computed_end_time());
  }
  if (from.current_computing_start_time() != 0) {
    _internal_set_current_computing_start_time(from._internal_current_computing_start_time());
  }
  if (from.number_of_cores() != 0) {
    _internal_set_number_of_cores(from._internal_number_of_cores());
  }
  if (from.total_memory() != 0) {
    _internal_set_total_memory(from._internal_total_memory());
  }
  if (from.free_memory() != 0) {
    _internal_set_free_memory(from._internal_free_memory());
  }
  if (from.fork_id() != 0) {
    _internal_set_fork_id(from._internal_fork_id());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void GetStatusResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aggregator.v1.GetStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStatusResponse::CopyFrom(const GetStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aggregator.v1.GetStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStatusResponse::IsInitialized() const {
  return true;
}

void GetStatusResponse::InternalSwap(GetStatusResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  pending_request_queue_ids_.InternalSwap(&other->pending_request_queue_ids_);
  last_computed_request_id_.Swap(&other->last_computed_request_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  current_computing_request_id_.Swap(&other->current_computing_request_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_proto_.Swap(&other->version_proto_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_server_.Swap(&other->version_server_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  prover_name_.Swap(&other->prover_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  prover_id_.Swap(&other->prover_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetStatusResponse, status_)
      + sizeof(GetStatusResponse::status_)
      - PROTOBUF_FIELD_OFFSET(GetStatusResponse, last_computed_end_time_)>(
          reinterpret_cast<char*>(&last_computed_end_time_),
          reinterpret_cast<char*>(&other->last_computed_end_time_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetStatusResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GenBatchProofResponse::InitAsDefaultInstance() {
}
class GenBatchProofResponse::_Internal {
 public:
};

GenBatchProofResponse::GenBatchProofResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:aggregator.v1.GenBatchProofResponse)
}
GenBatchProofResponse::GenBatchProofResponse(const GenBatchProofResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:aggregator.v1.GenBatchProofResponse)
}

void GenBatchProofResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GenBatchProofResponse_aggregator_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
}

GenBatchProofResponse::~GenBatchProofResponse() {
  // @@protoc_insertion_point(destructor:aggregator.v1.GenBatchProofResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GenBatchProofResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GenBatchProofResponse::ArenaDtor(void* object) {
  GenBatchProofResponse* _this = reinterpret_cast< GenBatchProofResponse* >(object);
  (void)_this;
}
void GenBatchProofResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GenBatchProofResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GenBatchProofResponse& GenBatchProofResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GenBatchProofResponse_aggregator_2eproto.base);
  return *internal_default_instance();
}


void GenBatchProofResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aggregator.v1.GenBatchProofResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  result_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenBatchProofResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "aggregator.v1.GenBatchProofResponse.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .aggregator.v1.Result result = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_result(static_cast<::aggregator::v1::Result>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenBatchProofResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:aggregator.v1.GenBatchProofResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aggregator.v1.GenBatchProofResponse.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // .aggregator.v1.Result result = 2;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aggregator.v1.GenBatchProofResponse)
  return target;
}

size_t GenBatchProofResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aggregator.v1.GenBatchProofResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // .aggregator.v1.Result result = 2;
  if (this->result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenBatchProofResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aggregator.v1.GenBatchProofResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GenBatchProofResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenBatchProofResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aggregator.v1.GenBatchProofResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aggregator.v1.GenBatchProofResponse)
    MergeFrom(*source);
  }
}

void GenBatchProofResponse::MergeFrom(const GenBatchProofResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aggregator.v1.GenBatchProofResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void GenBatchProofResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aggregator.v1.GenBatchProofResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenBatchProofResponse::CopyFrom(const GenBatchProofResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aggregator.v1.GenBatchProofResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenBatchProofResponse::IsInitialized() const {
  return true;
}

void GenBatchProofResponse::InternalSwap(GenBatchProofResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GenBatchProofResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GenAggregatedBatchProofResponse::InitAsDefaultInstance() {
}
class GenAggregatedBatchProofResponse::_Internal {
 public:
};

GenAggregatedBatchProofResponse::GenAggregatedBatchProofResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:aggregator.v1.GenAggregatedBatchProofResponse)
}
GenAggregatedBatchProofResponse::GenAggregatedBatchProofResponse(const GenAggregatedBatchProofResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:aggregator.v1.GenAggregatedBatchProofResponse)
}

void GenAggregatedBatchProofResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GenAggregatedBatchProofResponse_aggregator_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
}

GenAggregatedBatchProofResponse::~GenAggregatedBatchProofResponse() {
  // @@protoc_insertion_point(destructor:aggregator.v1.GenAggregatedBatchProofResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GenAggregatedBatchProofResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GenAggregatedBatchProofResponse::ArenaDtor(void* object) {
  GenAggregatedBatchProofResponse* _this = reinterpret_cast< GenAggregatedBatchProofResponse* >(object);
  (void)_this;
}
void GenAggregatedBatchProofResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GenAggregatedBatchProofResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GenAggregatedBatchProofResponse& GenAggregatedBatchProofResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GenAggregatedBatchProofResponse_aggregator_2eproto.base);
  return *internal_default_instance();
}


void GenAggregatedBatchProofResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aggregator.v1.GenAggregatedBatchProofResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  result_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenAggregatedBatchProofResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "aggregator.v1.GenAggregatedBatchProofResponse.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .aggregator.v1.Result result = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_result(static_cast<::aggregator::v1::Result>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenAggregatedBatchProofResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:aggregator.v1.GenAggregatedBatchProofResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aggregator.v1.GenAggregatedBatchProofResponse.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // .aggregator.v1.Result result = 2;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aggregator.v1.GenAggregatedBatchProofResponse)
  return target;
}

size_t GenAggregatedBatchProofResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aggregator.v1.GenAggregatedBatchProofResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // .aggregator.v1.Result result = 2;
  if (this->result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenAggregatedBatchProofResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aggregator.v1.GenAggregatedBatchProofResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GenAggregatedBatchProofResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenAggregatedBatchProofResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aggregator.v1.GenAggregatedBatchProofResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aggregator.v1.GenAggregatedBatchProofResponse)
    MergeFrom(*source);
  }
}

void GenAggregatedBatchProofResponse::MergeFrom(const GenAggregatedBatchProofResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aggregator.v1.GenAggregatedBatchProofResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void GenAggregatedBatchProofResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aggregator.v1.GenAggregatedBatchProofResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenAggregatedBatchProofResponse::CopyFrom(const GenAggregatedBatchProofResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aggregator.v1.GenAggregatedBatchProofResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenAggregatedBatchProofResponse::IsInitialized() const {
  return true;
}

void GenAggregatedBatchProofResponse::InternalSwap(GenAggregatedBatchProofResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GenAggregatedBatchProofResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GenBlobInnerProofResponse::InitAsDefaultInstance() {
}
class GenBlobInnerProofResponse::_Internal {
 public:
};

GenBlobInnerProofResponse::GenBlobInnerProofResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:aggregator.v1.GenBlobInnerProofResponse)
}
GenBlobInnerProofResponse::GenBlobInnerProofResponse(const GenBlobInnerProofResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:aggregator.v1.GenBlobInnerProofResponse)
}

void GenBlobInnerProofResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GenBlobInnerProofResponse_aggregator_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
}

GenBlobInnerProofResponse::~GenBlobInnerProofResponse() {
  // @@protoc_insertion_point(destructor:aggregator.v1.GenBlobInnerProofResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GenBlobInnerProofResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GenBlobInnerProofResponse::ArenaDtor(void* object) {
  GenBlobInnerProofResponse* _this = reinterpret_cast< GenBlobInnerProofResponse* >(object);
  (void)_this;
}
void GenBlobInnerProofResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GenBlobInnerProofResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GenBlobInnerProofResponse& GenBlobInnerProofResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GenBlobInnerProofResponse_aggregator_2eproto.base);
  return *internal_default_instance();
}


void GenBlobInnerProofResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aggregator.v1.GenBlobInnerProofResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  result_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenBlobInnerProofResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "aggregator.v1.GenBlobInnerProofResponse.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .aggregator.v1.Result result = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_result(static_cast<::aggregator::v1::Result>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenBlobInnerProofResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:aggregator.v1.GenBlobInnerProofResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aggregator.v1.GenBlobInnerProofResponse.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // .aggregator.v1.Result result = 2;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aggregator.v1.GenBlobInnerProofResponse)
  return target;
}

size_t GenBlobInnerProofResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aggregator.v1.GenBlobInnerProofResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // .aggregator.v1.Result result = 2;
  if (this->result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenBlobInnerProofResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aggregator.v1.GenBlobInnerProofResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GenBlobInnerProofResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenBlobInnerProofResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aggregator.v1.GenBlobInnerProofResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aggregator.v1.GenBlobInnerProofResponse)
    MergeFrom(*source);
  }
}

void GenBlobInnerProofResponse::MergeFrom(const GenBlobInnerProofResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aggregator.v1.GenBlobInnerProofResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void GenBlobInnerProofResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aggregator.v1.GenBlobInnerProofResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenBlobInnerProofResponse::CopyFrom(const GenBlobInnerProofResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aggregator.v1.GenBlobInnerProofResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenBlobInnerProofResponse::IsInitialized() const {
  return true;
}

void GenBlobInnerProofResponse::InternalSwap(GenBlobInnerProofResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GenBlobInnerProofResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GenBlobOuterProofResponse::InitAsDefaultInstance() {
}
class GenBlobOuterProofResponse::_Internal {
 public:
};

GenBlobOuterProofResponse::GenBlobOuterProofResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:aggregator.v1.GenBlobOuterProofResponse)
}
GenBlobOuterProofResponse::GenBlobOuterProofResponse(const GenBlobOuterProofResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:aggregator.v1.GenBlobOuterProofResponse)
}

void GenBlobOuterProofResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GenBlobOuterProofResponse_aggregator_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
}

GenBlobOuterProofResponse::~GenBlobOuterProofResponse() {
  // @@protoc_insertion_point(destructor:aggregator.v1.GenBlobOuterProofResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GenBlobOuterProofResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GenBlobOuterProofResponse::ArenaDtor(void* object) {
  GenBlobOuterProofResponse* _this = reinterpret_cast< GenBlobOuterProofResponse* >(object);
  (void)_this;
}
void GenBlobOuterProofResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GenBlobOuterProofResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GenBlobOuterProofResponse& GenBlobOuterProofResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GenBlobOuterProofResponse_aggregator_2eproto.base);
  return *internal_default_instance();
}


void GenBlobOuterProofResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aggregator.v1.GenBlobOuterProofResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  result_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenBlobOuterProofResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "aggregator.v1.GenBlobOuterProofResponse.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .aggregator.v1.Result result = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_result(static_cast<::aggregator::v1::Result>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenBlobOuterProofResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:aggregator.v1.GenBlobOuterProofResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aggregator.v1.GenBlobOuterProofResponse.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // .aggregator.v1.Result result = 2;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aggregator.v1.GenBlobOuterProofResponse)
  return target;
}

size_t GenBlobOuterProofResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aggregator.v1.GenBlobOuterProofResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // .aggregator.v1.Result result = 2;
  if (this->result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenBlobOuterProofResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aggregator.v1.GenBlobOuterProofResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GenBlobOuterProofResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenBlobOuterProofResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aggregator.v1.GenBlobOuterProofResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aggregator.v1.GenBlobOuterProofResponse)
    MergeFrom(*source);
  }
}

void GenBlobOuterProofResponse::MergeFrom(const GenBlobOuterProofResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aggregator.v1.GenBlobOuterProofResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void GenBlobOuterProofResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aggregator.v1.GenBlobOuterProofResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenBlobOuterProofResponse::CopyFrom(const GenBlobOuterProofResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aggregator.v1.GenBlobOuterProofResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenBlobOuterProofResponse::IsInitialized() const {
  return true;
}

void GenBlobOuterProofResponse::InternalSwap(GenBlobOuterProofResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GenBlobOuterProofResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GenAggregatedBlobOuterProofResponse::InitAsDefaultInstance() {
}
class GenAggregatedBlobOuterProofResponse::_Internal {
 public:
};

GenAggregatedBlobOuterProofResponse::GenAggregatedBlobOuterProofResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:aggregator.v1.GenAggregatedBlobOuterProofResponse)
}
GenAggregatedBlobOuterProofResponse::GenAggregatedBlobOuterProofResponse(const GenAggregatedBlobOuterProofResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:aggregator.v1.GenAggregatedBlobOuterProofResponse)
}

void GenAggregatedBlobOuterProofResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GenAggregatedBlobOuterProofResponse_aggregator_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
}

GenAggregatedBlobOuterProofResponse::~GenAggregatedBlobOuterProofResponse() {
  // @@protoc_insertion_point(destructor:aggregator.v1.GenAggregatedBlobOuterProofResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GenAggregatedBlobOuterProofResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GenAggregatedBlobOuterProofResponse::ArenaDtor(void* object) {
  GenAggregatedBlobOuterProofResponse* _this = reinterpret_cast< GenAggregatedBlobOuterProofResponse* >(object);
  (void)_this;
}
void GenAggregatedBlobOuterProofResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GenAggregatedBlobOuterProofResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GenAggregatedBlobOuterProofResponse& GenAggregatedBlobOuterProofResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GenAggregatedBlobOuterProofResponse_aggregator_2eproto.base);
  return *internal_default_instance();
}


void GenAggregatedBlobOuterProofResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aggregator.v1.GenAggregatedBlobOuterProofResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  result_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenAggregatedBlobOuterProofResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "aggregator.v1.GenAggregatedBlobOuterProofResponse.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .aggregator.v1.Result result = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_result(static_cast<::aggregator::v1::Result>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenAggregatedBlobOuterProofResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:aggregator.v1.GenAggregatedBlobOuterProofResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aggregator.v1.GenAggregatedBlobOuterProofResponse.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // .aggregator.v1.Result result = 2;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aggregator.v1.GenAggregatedBlobOuterProofResponse)
  return target;
}

size_t GenAggregatedBlobOuterProofResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aggregator.v1.GenAggregatedBlobOuterProofResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // .aggregator.v1.Result result = 2;
  if (this->result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenAggregatedBlobOuterProofResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aggregator.v1.GenAggregatedBlobOuterProofResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GenAggregatedBlobOuterProofResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenAggregatedBlobOuterProofResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aggregator.v1.GenAggregatedBlobOuterProofResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aggregator.v1.GenAggregatedBlobOuterProofResponse)
    MergeFrom(*source);
  }
}

void GenAggregatedBlobOuterProofResponse::MergeFrom(const GenAggregatedBlobOuterProofResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aggregator.v1.GenAggregatedBlobOuterProofResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void GenAggregatedBlobOuterProofResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aggregator.v1.GenAggregatedBlobOuterProofResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenAggregatedBlobOuterProofResponse::CopyFrom(const GenAggregatedBlobOuterProofResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aggregator.v1.GenAggregatedBlobOuterProofResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenAggregatedBlobOuterProofResponse::IsInitialized() const {
  return true;
}

void GenAggregatedBlobOuterProofResponse::InternalSwap(GenAggregatedBlobOuterProofResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GenAggregatedBlobOuterProofResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GenFinalProofResponse::InitAsDefaultInstance() {
}
class GenFinalProofResponse::_Internal {
 public:
};

GenFinalProofResponse::GenFinalProofResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:aggregator.v1.GenFinalProofResponse)
}
GenFinalProofResponse::GenFinalProofResponse(const GenFinalProofResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:aggregator.v1.GenFinalProofResponse)
}

void GenFinalProofResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GenFinalProofResponse_aggregator_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
}

GenFinalProofResponse::~GenFinalProofResponse() {
  // @@protoc_insertion_point(destructor:aggregator.v1.GenFinalProofResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GenFinalProofResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GenFinalProofResponse::ArenaDtor(void* object) {
  GenFinalProofResponse* _this = reinterpret_cast< GenFinalProofResponse* >(object);
  (void)_this;
}
void GenFinalProofResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GenFinalProofResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GenFinalProofResponse& GenFinalProofResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GenFinalProofResponse_aggregator_2eproto.base);
  return *internal_default_instance();
}


void GenFinalProofResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aggregator.v1.GenFinalProofResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  result_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenFinalProofResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "aggregator.v1.GenFinalProofResponse.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .aggregator.v1.Result result = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_result(static_cast<::aggregator::v1::Result>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenFinalProofResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:aggregator.v1.GenFinalProofResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aggregator.v1.GenFinalProofResponse.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // .aggregator.v1.Result result = 2;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aggregator.v1.GenFinalProofResponse)
  return target;
}

size_t GenFinalProofResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aggregator.v1.GenFinalProofResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // .aggregator.v1.Result result = 2;
  if (this->result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenFinalProofResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aggregator.v1.GenFinalProofResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GenFinalProofResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenFinalProofResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aggregator.v1.GenFinalProofResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aggregator.v1.GenFinalProofResponse)
    MergeFrom(*source);
  }
}

void GenFinalProofResponse::MergeFrom(const GenFinalProofResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aggregator.v1.GenFinalProofResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void GenFinalProofResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aggregator.v1.GenFinalProofResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenFinalProofResponse::CopyFrom(const GenFinalProofResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aggregator.v1.GenFinalProofResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenFinalProofResponse::IsInitialized() const {
  return true;
}

void GenFinalProofResponse::InternalSwap(GenFinalProofResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GenFinalProofResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CancelResponse::InitAsDefaultInstance() {
}
class CancelResponse::_Internal {
 public:
};

CancelResponse::CancelResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:aggregator.v1.CancelResponse)
}
CancelResponse::CancelResponse(const CancelResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:aggregator.v1.CancelResponse)
}

void CancelResponse::SharedCtor() {
  result_ = 0;
}

CancelResponse::~CancelResponse() {
  // @@protoc_insertion_point(destructor:aggregator.v1.CancelResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CancelResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CancelResponse::ArenaDtor(void* object) {
  CancelResponse* _this = reinterpret_cast< CancelResponse* >(object);
  (void)_this;
}
void CancelResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CancelResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CancelResponse& CancelResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CancelResponse_aggregator_2eproto.base);
  return *internal_default_instance();
}


void CancelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aggregator.v1.CancelResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CancelResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .aggregator.v1.Result result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_result(static_cast<::aggregator::v1::Result>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CancelResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:aggregator.v1.CancelResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .aggregator.v1.Result result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aggregator.v1.CancelResponse)
  return target;
}

size_t CancelResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aggregator.v1.CancelResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .aggregator.v1.Result result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CancelResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aggregator.v1.CancelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CancelResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aggregator.v1.CancelResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aggregator.v1.CancelResponse)
    MergeFrom(*source);
  }
}

void CancelResponse::MergeFrom(const CancelResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aggregator.v1.CancelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void CancelResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aggregator.v1.CancelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelResponse::CopyFrom(const CancelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aggregator.v1.CancelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelResponse::IsInitialized() const {
  return true;
}

void CancelResponse::InternalSwap(CancelResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CancelResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetProofResponse::InitAsDefaultInstance() {
  ::aggregator::v1::_GetProofResponse_default_instance_.final_proof_ = const_cast< ::aggregator::v1::FinalProof*>(
      ::aggregator::v1::FinalProof::internal_default_instance());
  ::aggregator::v1::_GetProofResponse_default_instance_.recursive_proof_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
class GetProofResponse::_Internal {
 public:
  static const ::aggregator::v1::FinalProof& final_proof(const GetProofResponse* msg);
};

const ::aggregator::v1::FinalProof&
GetProofResponse::_Internal::final_proof(const GetProofResponse* msg) {
  return *msg->proof_.final_proof_;
}
void GetProofResponse::set_allocated_final_proof(::aggregator::v1::FinalProof* final_proof) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_proof();
  if (final_proof) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(final_proof);
    if (message_arena != submessage_arena) {
      final_proof = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, final_proof, submessage_arena);
    }
    set_has_final_proof();
    proof_.final_proof_ = final_proof;
  }
  // @@protoc_insertion_point(field_set_allocated:aggregator.v1.GetProofResponse.final_proof)
}
GetProofResponse::GetProofResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:aggregator.v1.GetProofResponse)
}
GetProofResponse::GetProofResponse(const GetProofResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  result_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result_string().empty()) {
    result_string_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result_string(),
      GetArena());
  }
  result_ = from.result_;
  clear_has_proof();
  switch (from.proof_case()) {
    case kFinalProof: {
      _internal_mutable_final_proof()->::aggregator::v1::FinalProof::MergeFrom(from._internal_final_proof());
      break;
    }
    case kRecursiveProof: {
      _internal_set_recursive_proof(from._internal_recursive_proof());
      break;
    }
    case PROOF_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:aggregator.v1.GetProofResponse)
}

void GetProofResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetProofResponse_aggregator_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  result_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
  clear_has_proof();
}

GetProofResponse::~GetProofResponse() {
  // @@protoc_insertion_point(destructor:aggregator.v1.GetProofResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetProofResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  result_string_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (has_proof()) {
    clear_proof();
  }
}

void GetProofResponse::ArenaDtor(void* object) {
  GetProofResponse* _this = reinterpret_cast< GetProofResponse* >(object);
  (void)_this;
}
void GetProofResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetProofResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetProofResponse& GetProofResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetProofResponse_aggregator_2eproto.base);
  return *internal_default_instance();
}


void GetProofResponse::clear_proof() {
// @@protoc_insertion_point(one_of_clear_start:aggregator.v1.GetProofResponse)
  switch (proof_case()) {
    case kFinalProof: {
      if (GetArena() == nullptr) {
        delete proof_.final_proof_;
      }
      break;
    }
    case kRecursiveProof: {
      proof_.recursive_proof_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case PROOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PROOF_NOT_SET;
}


void GetProofResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aggregator.v1.GetProofResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  result_string_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  result_ = 0;
  clear_proof();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetProofResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "aggregator.v1.GetProofResponse.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .aggregator.v1.FinalProof final_proof = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_final_proof(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string recursive_proof = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_recursive_proof();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "aggregator.v1.GetProofResponse.recursive_proof"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .aggregator.v1.GetProofResponse.Result result = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_result(static_cast<::aggregator::v1::GetProofResponse_Result>(val));
        } else goto handle_unusual;
        continue;
      // string result_string = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_result_string();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "aggregator.v1.GetProofResponse.result_string"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetProofResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:aggregator.v1.GetProofResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aggregator.v1.GetProofResponse.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // .aggregator.v1.FinalProof final_proof = 2;
  if (_internal_has_final_proof()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::final_proof(this), target, stream);
  }

  // string recursive_proof = 3;
  if (_internal_has_recursive_proof()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_recursive_proof().data(), static_cast<int>(this->_internal_recursive_proof().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aggregator.v1.GetProofResponse.recursive_proof");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_recursive_proof(), target);
  }

  // .aggregator.v1.GetProofResponse.Result result = 4;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_result(), target);
  }

  // string result_string = 5;
  if (this->result_string().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result_string().data(), static_cast<int>(this->_internal_result_string().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aggregator.v1.GetProofResponse.result_string");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_result_string(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aggregator.v1.GetProofResponse)
  return target;
}

size_t GetProofResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aggregator.v1.GetProofResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string result_string = 5;
  if (this->result_string().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result_string());
  }

  // .aggregator.v1.GetProofResponse.Result result = 4;
  if (this->result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  switch (proof_case()) {
    // .aggregator.v1.FinalProof final_proof = 2;
    case kFinalProof: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *proof_.final_proof_);
      break;
    }
    // string recursive_proof = 3;
    case kRecursiveProof: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_recursive_proof());
      break;
    }
    case PROOF_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetProofResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aggregator.v1.GetProofResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetProofResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetProofResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aggregator.v1.GetProofResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aggregator.v1.GetProofResponse)
    MergeFrom(*source);
  }
}

void GetProofResponse::MergeFrom(const GetProofResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aggregator.v1.GetProofResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.result_string().size() > 0) {
    _internal_set_result_string(from._internal_result_string());
  }
  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
  switch (from.proof_case()) {
    case kFinalProof: {
      _internal_mutable_final_proof()->::aggregator::v1::FinalProof::MergeFrom(from._internal_final_proof());
      break;
    }
    case kRecursiveProof: {
      _internal_set_recursive_proof(from._internal_recursive_proof());
      break;
    }
    case PROOF_NOT_SET: {
      break;
    }
  }
}

void GetProofResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aggregator.v1.GetProofResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetProofResponse::CopyFrom(const GetProofResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aggregator.v1.GetProofResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetProofResponse::IsInitialized() const {
  return true;
}

void GetProofResponse::InternalSwap(GetProofResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  result_string_.Swap(&other->result_string_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(result_, other->result_);
  swap(proof_, other->proof_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetProofResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FinalProof::InitAsDefaultInstance() {
  ::aggregator::v1::_FinalProof_default_instance_._instance.get_mutable()->public__ = const_cast< ::aggregator::v1::PublicInputsExtended*>(
      ::aggregator::v1::PublicInputsExtended::internal_default_instance());
}
class FinalProof::_Internal {
 public:
  static const ::aggregator::v1::PublicInputsExtended& public_(const FinalProof* msg);
};

const ::aggregator::v1::PublicInputsExtended&
FinalProof::_Internal::public_(const FinalProof* msg) {
  return *msg->public__;
}
FinalProof::FinalProof(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:aggregator.v1.FinalProof)
}
FinalProof::FinalProof(const FinalProof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  proof_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_proof().empty()) {
    proof_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_proof(),
      GetArena());
  }
  if (from._internal_has_public_()) {
    public__ = new ::aggregator::v1::PublicInputsExtended(*from.public__);
  } else {
    public__ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:aggregator.v1.FinalProof)
}

void FinalProof::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FinalProof_aggregator_2eproto.base);
  proof_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  public__ = nullptr;
}

FinalProof::~FinalProof() {
  // @@protoc_insertion_point(destructor:aggregator.v1.FinalProof)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FinalProof::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  proof_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete public__;
}

void FinalProof::ArenaDtor(void* object) {
  FinalProof* _this = reinterpret_cast< FinalProof* >(object);
  (void)_this;
}
void FinalProof::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FinalProof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FinalProof& FinalProof::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FinalProof_aggregator_2eproto.base);
  return *internal_default_instance();
}


void FinalProof::Clear() {
// @@protoc_insertion_point(message_clear_start:aggregator.v1.FinalProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  proof_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && public__ != nullptr) {
    delete public__;
  }
  public__ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FinalProof::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string proof = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_proof();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "aggregator.v1.FinalProof.proof"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .aggregator.v1.PublicInputsExtended public = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_public_(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FinalProof::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:aggregator.v1.FinalProof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string proof = 1;
  if (this->proof().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_proof().data(), static_cast<int>(this->_internal_proof().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aggregator.v1.FinalProof.proof");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_proof(), target);
  }

  // .aggregator.v1.PublicInputsExtended public = 2;
  if (this->has_public_()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::public_(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aggregator.v1.FinalProof)
  return target;
}

size_t FinalProof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aggregator.v1.FinalProof)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string proof = 1;
  if (this->proof().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_proof());
  }

  // .aggregator.v1.PublicInputsExtended public = 2;
  if (this->has_public_()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *public__);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FinalProof::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aggregator.v1.FinalProof)
  GOOGLE_DCHECK_NE(&from, this);
  const FinalProof* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FinalProof>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aggregator.v1.FinalProof)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aggregator.v1.FinalProof)
    MergeFrom(*source);
  }
}

void FinalProof::MergeFrom(const FinalProof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aggregator.v1.FinalProof)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.proof().size() > 0) {
    _internal_set_proof(from._internal_proof());
  }
  if (from.has_public_()) {
    _internal_mutable_public_()->::aggregator::v1::PublicInputsExtended::MergeFrom(from._internal_public_());
  }
}

void FinalProof::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aggregator.v1.FinalProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FinalProof::CopyFrom(const FinalProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aggregator.v1.FinalProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FinalProof::IsInitialized() const {
  return true;
}

void FinalProof::InternalSwap(FinalProof* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  proof_.Swap(&other->proof_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(public__, other->public__);
}

::PROTOBUF_NAMESPACE_ID::Metadata FinalProof::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

PublicInputs_L1InfoTreeDataEntry_DoNotUse::PublicInputs_L1InfoTreeDataEntry_DoNotUse() {}
PublicInputs_L1InfoTreeDataEntry_DoNotUse::PublicInputs_L1InfoTreeDataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void PublicInputs_L1InfoTreeDataEntry_DoNotUse::MergeFrom(const PublicInputs_L1InfoTreeDataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata PublicInputs_L1InfoTreeDataEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void PublicInputs_L1InfoTreeDataEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void PublicInputs::InitAsDefaultInstance() {
  ::aggregator::v1::_PublicInputs_default_instance_._instance.get_mutable()->forced_data_ = const_cast< ::aggregator::v1::ForcedData*>(
      ::aggregator::v1::ForcedData::internal_default_instance());
}
class PublicInputs::_Internal {
 public:
  static const ::aggregator::v1::ForcedData& forced_data(const PublicInputs* msg);
};

const ::aggregator::v1::ForcedData&
PublicInputs::_Internal::forced_data(const PublicInputs* msg) {
  return *msg->forced_data_;
}
PublicInputs::PublicInputs(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  l1_info_tree_data_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:aggregator.v1.PublicInputs)
}
PublicInputs::PublicInputs(const PublicInputs& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  l1_info_tree_data_.MergeFrom(from.l1_info_tree_data_);
  old_state_root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_old_state_root().empty()) {
    old_state_root_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_old_state_root(),
      GetArena());
  }
  old_batch_acc_input_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_old_batch_acc_input_hash().empty()) {
    old_batch_acc_input_hash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_old_batch_acc_input_hash(),
      GetArena());
  }
  previous_l1_info_tree_root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_previous_l1_info_tree_root().empty()) {
    previous_l1_info_tree_root_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_previous_l1_info_tree_root(),
      GetArena());
  }
  batch_l2_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_batch_l2_data().empty()) {
    batch_l2_data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_batch_l2_data(),
      GetArena());
  }
  sequencer_addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sequencer_addr().empty()) {
    sequencer_addr_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_sequencer_addr(),
      GetArena());
  }
  forced_hash_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_forced_hash_data().empty()) {
    forced_hash_data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_forced_hash_data(),
      GetArena());
  }
  aggregator_addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_aggregator_addr().empty()) {
    aggregator_addr_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_aggregator_addr(),
      GetArena());
  }
  if (from._internal_has_forced_data()) {
    forced_data_ = new ::aggregator::v1::ForcedData(*from.forced_data_);
  } else {
    forced_data_ = nullptr;
  }
  ::memcpy(&chain_id_, &from.chain_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&chain_id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:aggregator.v1.PublicInputs)
}

void PublicInputs::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PublicInputs_aggregator_2eproto.base);
  old_state_root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  old_batch_acc_input_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  previous_l1_info_tree_root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  batch_l2_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sequencer_addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  forced_hash_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  aggregator_addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&forced_data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&forced_data_)) + sizeof(type_));
}

PublicInputs::~PublicInputs() {
  // @@protoc_insertion_point(destructor:aggregator.v1.PublicInputs)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PublicInputs::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  old_state_root_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  old_batch_acc_input_hash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  previous_l1_info_tree_root_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  batch_l2_data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sequencer_addr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  forced_hash_data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  aggregator_addr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete forced_data_;
}

void PublicInputs::ArenaDtor(void* object) {
  PublicInputs* _this = reinterpret_cast< PublicInputs* >(object);
  (void)_this;
}
void PublicInputs::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PublicInputs::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PublicInputs& PublicInputs::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PublicInputs_aggregator_2eproto.base);
  return *internal_default_instance();
}


void PublicInputs::Clear() {
// @@protoc_insertion_point(message_clear_start:aggregator.v1.PublicInputs)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  l1_info_tree_data_.Clear();
  old_state_root_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  old_batch_acc_input_hash_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  previous_l1_info_tree_root_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  batch_l2_data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sequencer_addr_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  forced_hash_data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  aggregator_addr_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && forced_data_ != nullptr) {
    delete forced_data_;
  }
  forced_data_ = nullptr;
  ::memset(&chain_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&chain_id_)) + sizeof(type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PublicInputs::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes old_state_root = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_old_state_root();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes old_batch_acc_input_hash = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_old_batch_acc_input_hash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes previous_l1_info_tree_root = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_previous_l1_info_tree_root();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 previous_l1_info_tree_index = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          previous_l1_info_tree_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 chain_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          chain_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 fork_id = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          fork_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes batch_l2_data = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_batch_l2_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string sequencer_addr = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_sequencer_addr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "aggregator.v1.PublicInputs.sequencer_addr"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 type = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes forced_hash_data = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_forced_hash_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .aggregator.v1.ForcedData forced_data = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_forced_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string aggregator_addr = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_aggregator_addr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "aggregator.v1.PublicInputs.aggregator_addr"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<uint32, .aggregator.v1.L1Data> l1_info_tree_data = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&l1_info_tree_data_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<106>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PublicInputs::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:aggregator.v1.PublicInputs)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes old_state_root = 1;
  if (this->old_state_root().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_old_state_root(), target);
  }

  // bytes old_batch_acc_input_hash = 2;
  if (this->old_batch_acc_input_hash().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_old_batch_acc_input_hash(), target);
  }

  // bytes previous_l1_info_tree_root = 3;
  if (this->previous_l1_info_tree_root().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_previous_l1_info_tree_root(), target);
  }

  // uint32 previous_l1_info_tree_index = 4;
  if (this->previous_l1_info_tree_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_previous_l1_info_tree_index(), target);
  }

  // uint64 chain_id = 5;
  if (this->chain_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_chain_id(), target);
  }

  // uint64 fork_id = 6;
  if (this->fork_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(6, this->_internal_fork_id(), target);
  }

  // bytes batch_l2_data = 7;
  if (this->batch_l2_data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        7, this->_internal_batch_l2_data(), target);
  }

  // string sequencer_addr = 8;
  if (this->sequencer_addr().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sequencer_addr().data(), static_cast<int>(this->_internal_sequencer_addr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aggregator.v1.PublicInputs.sequencer_addr");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_sequencer_addr(), target);
  }

  // uint32 type = 9;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(9, this->_internal_type(), target);
  }

  // bytes forced_hash_data = 10;
  if (this->forced_hash_data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        10, this->_internal_forced_hash_data(), target);
  }

  // .aggregator.v1.ForcedData forced_data = 11;
  if (this->has_forced_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::forced_data(this), target, stream);
  }

  // string aggregator_addr = 12;
  if (this->aggregator_addr().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_aggregator_addr().data(), static_cast<int>(this->_internal_aggregator_addr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aggregator.v1.PublicInputs.aggregator_addr");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_aggregator_addr(), target);
  }

  // map<uint32, .aggregator.v1.L1Data> l1_info_tree_data = 13;
  if (!this->_internal_l1_info_tree_data().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::aggregator::v1::L1Data >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_l1_info_tree_data().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_l1_info_tree_data().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::aggregator::v1::L1Data >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::aggregator::v1::L1Data >::const_iterator
          it = this->_internal_l1_info_tree_data().begin();
          it != this->_internal_l1_info_tree_data().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = PublicInputs_L1InfoTreeDataEntry_DoNotUse::Funcs::InternalSerialize(13, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::aggregator::v1::L1Data >::const_iterator
          it = this->_internal_l1_info_tree_data().begin();
          it != this->_internal_l1_info_tree_data().end(); ++it) {
        target = PublicInputs_L1InfoTreeDataEntry_DoNotUse::Funcs::InternalSerialize(13, it->first, it->second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aggregator.v1.PublicInputs)
  return target;
}

size_t PublicInputs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aggregator.v1.PublicInputs)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<uint32, .aggregator.v1.L1Data> l1_info_tree_data = 13;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_l1_info_tree_data_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::aggregator::v1::L1Data >::const_iterator
      it = this->_internal_l1_info_tree_data().begin();
      it != this->_internal_l1_info_tree_data().end(); ++it) {
    total_size += PublicInputs_L1InfoTreeDataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // bytes old_state_root = 1;
  if (this->old_state_root().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_old_state_root());
  }

  // bytes old_batch_acc_input_hash = 2;
  if (this->old_batch_acc_input_hash().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_old_batch_acc_input_hash());
  }

  // bytes previous_l1_info_tree_root = 3;
  if (this->previous_l1_info_tree_root().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_previous_l1_info_tree_root());
  }

  // bytes batch_l2_data = 7;
  if (this->batch_l2_data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_batch_l2_data());
  }

  // string sequencer_addr = 8;
  if (this->sequencer_addr().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sequencer_addr());
  }

  // bytes forced_hash_data = 10;
  if (this->forced_hash_data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_forced_hash_data());
  }

  // string aggregator_addr = 12;
  if (this->aggregator_addr().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_aggregator_addr());
  }

  // .aggregator.v1.ForcedData forced_data = 11;
  if (this->has_forced_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *forced_data_);
  }

  // uint64 chain_id = 5;
  if (this->chain_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_chain_id());
  }

  // uint64 fork_id = 6;
  if (this->fork_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_fork_id());
  }

  // uint32 previous_l1_info_tree_index = 4;
  if (this->previous_l1_info_tree_index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_previous_l1_info_tree_index());
  }

  // uint32 type = 9;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PublicInputs::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aggregator.v1.PublicInputs)
  GOOGLE_DCHECK_NE(&from, this);
  const PublicInputs* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PublicInputs>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aggregator.v1.PublicInputs)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aggregator.v1.PublicInputs)
    MergeFrom(*source);
  }
}

void PublicInputs::MergeFrom(const PublicInputs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aggregator.v1.PublicInputs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  l1_info_tree_data_.MergeFrom(from.l1_info_tree_data_);
  if (from.old_state_root().size() > 0) {
    _internal_set_old_state_root(from._internal_old_state_root());
  }
  if (from.old_batch_acc_input_hash().size() > 0) {
    _internal_set_old_batch_acc_input_hash(from._internal_old_batch_acc_input_hash());
  }
  if (from.previous_l1_info_tree_root().size() > 0) {
    _internal_set_previous_l1_info_tree_root(from._internal_previous_l1_info_tree_root());
  }
  if (from.batch_l2_data().size() > 0) {
    _internal_set_batch_l2_data(from._internal_batch_l2_data());
  }
  if (from.sequencer_addr().size() > 0) {
    _internal_set_sequencer_addr(from._internal_sequencer_addr());
  }
  if (from.forced_hash_data().size() > 0) {
    _internal_set_forced_hash_data(from._internal_forced_hash_data());
  }
  if (from.aggregator_addr().size() > 0) {
    _internal_set_aggregator_addr(from._internal_aggregator_addr());
  }
  if (from.has_forced_data()) {
    _internal_mutable_forced_data()->::aggregator::v1::ForcedData::MergeFrom(from._internal_forced_data());
  }
  if (from.chain_id() != 0) {
    _internal_set_chain_id(from._internal_chain_id());
  }
  if (from.fork_id() != 0) {
    _internal_set_fork_id(from._internal_fork_id());
  }
  if (from.previous_l1_info_tree_index() != 0) {
    _internal_set_previous_l1_info_tree_index(from._internal_previous_l1_info_tree_index());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void PublicInputs::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aggregator.v1.PublicInputs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PublicInputs::CopyFrom(const PublicInputs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aggregator.v1.PublicInputs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PublicInputs::IsInitialized() const {
  return true;
}

void PublicInputs::InternalSwap(PublicInputs* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  l1_info_tree_data_.Swap(&other->l1_info_tree_data_);
  old_state_root_.Swap(&other->old_state_root_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  old_batch_acc_input_hash_.Swap(&other->old_batch_acc_input_hash_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  previous_l1_info_tree_root_.Swap(&other->previous_l1_info_tree_root_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  batch_l2_data_.Swap(&other->batch_l2_data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sequencer_addr_.Swap(&other->sequencer_addr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  forced_hash_data_.Swap(&other->forced_hash_data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  aggregator_addr_.Swap(&other->aggregator_addr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PublicInputs, type_)
      + sizeof(PublicInputs::type_)
      - PROTOBUF_FIELD_OFFSET(PublicInputs, forced_data_)>(
          reinterpret_cast<char*>(&forced_data_),
          reinterpret_cast<char*>(&other->forced_data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PublicInputs::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ForcedData::InitAsDefaultInstance() {
}
class ForcedData::_Internal {
 public:
};

ForcedData::ForcedData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:aggregator.v1.ForcedData)
}
ForcedData::ForcedData(const ForcedData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  global_exit_root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_global_exit_root().empty()) {
    global_exit_root_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_global_exit_root(),
      GetArena());
  }
  block_hash_l1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_block_hash_l1().empty()) {
    block_hash_l1_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_block_hash_l1(),
      GetArena());
  }
  min_timestamp_ = from.min_timestamp_;
  // @@protoc_insertion_point(copy_constructor:aggregator.v1.ForcedData)
}

void ForcedData::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ForcedData_aggregator_2eproto.base);
  global_exit_root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  block_hash_l1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  min_timestamp_ = PROTOBUF_ULONGLONG(0);
}

ForcedData::~ForcedData() {
  // @@protoc_insertion_point(destructor:aggregator.v1.ForcedData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ForcedData::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  global_exit_root_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  block_hash_l1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ForcedData::ArenaDtor(void* object) {
  ForcedData* _this = reinterpret_cast< ForcedData* >(object);
  (void)_this;
}
void ForcedData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ForcedData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ForcedData& ForcedData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ForcedData_aggregator_2eproto.base);
  return *internal_default_instance();
}


void ForcedData::Clear() {
// @@protoc_insertion_point(message_clear_start:aggregator.v1.ForcedData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  global_exit_root_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  block_hash_l1_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  min_timestamp_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ForcedData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes global_exit_root = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_global_exit_root();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes block_hash_l1 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_block_hash_l1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 min_timestamp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          min_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ForcedData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:aggregator.v1.ForcedData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes global_exit_root = 1;
  if (this->global_exit_root().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_global_exit_root(), target);
  }

  // bytes block_hash_l1 = 2;
  if (this->block_hash_l1().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_block_hash_l1(), target);
  }

  // uint64 min_timestamp = 3;
  if (this->min_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_min_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aggregator.v1.ForcedData)
  return target;
}

size_t ForcedData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aggregator.v1.ForcedData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes global_exit_root = 1;
  if (this->global_exit_root().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_global_exit_root());
  }

  // bytes block_hash_l1 = 2;
  if (this->block_hash_l1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_block_hash_l1());
  }

  // uint64 min_timestamp = 3;
  if (this->min_timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_min_timestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ForcedData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aggregator.v1.ForcedData)
  GOOGLE_DCHECK_NE(&from, this);
  const ForcedData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ForcedData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aggregator.v1.ForcedData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aggregator.v1.ForcedData)
    MergeFrom(*source);
  }
}

void ForcedData::MergeFrom(const ForcedData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aggregator.v1.ForcedData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.global_exit_root().size() > 0) {
    _internal_set_global_exit_root(from._internal_global_exit_root());
  }
  if (from.block_hash_l1().size() > 0) {
    _internal_set_block_hash_l1(from._internal_block_hash_l1());
  }
  if (from.min_timestamp() != 0) {
    _internal_set_min_timestamp(from._internal_min_timestamp());
  }
}

void ForcedData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aggregator.v1.ForcedData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ForcedData::CopyFrom(const ForcedData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aggregator.v1.ForcedData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForcedData::IsInitialized() const {
  return true;
}

void ForcedData::InternalSwap(ForcedData* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  global_exit_root_.Swap(&other->global_exit_root_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  block_hash_l1_.Swap(&other->block_hash_l1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(min_timestamp_, other->min_timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ForcedData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PublicBlobInnerInputs::InitAsDefaultInstance() {
}
class PublicBlobInnerInputs::_Internal {
 public:
};

PublicBlobInnerInputs::PublicBlobInnerInputs(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:aggregator.v1.PublicBlobInnerInputs)
}
PublicBlobInnerInputs::PublicBlobInnerInputs(const PublicBlobInnerInputs& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  old_blob_state_root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_old_blob_state_root().empty()) {
    old_blob_state_root_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_old_blob_state_root(),
      GetArena());
  }
  old_blob_acc_input_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_old_blob_acc_input_hash().empty()) {
    old_blob_acc_input_hash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_old_blob_acc_input_hash(),
      GetArena());
  }
  old_state_root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_old_state_root().empty()) {
    old_state_root_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_old_state_root(),
      GetArena());
  }
  last_l1_info_tree_root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_last_l1_info_tree_root().empty()) {
    last_l1_info_tree_root_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_last_l1_info_tree_root(),
      GetArena());
  }
  sequencer_addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sequencer_addr().empty()) {
    sequencer_addr_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_sequencer_addr(),
      GetArena());
  }
  zk_gas_limit_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_zk_gas_limit().empty()) {
    zk_gas_limit_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_zk_gas_limit(),
      GetArena());
  }
  point_z_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_point_z().empty()) {
    point_z_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_point_z(),
      GetArena());
  }
  point_y_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_point_y().empty()) {
    point_y_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_point_y(),
      GetArena());
  }
  blob_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_blob_data().empty()) {
    blob_data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_blob_data(),
      GetArena());
  }
  forced_hash_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_forced_hash_data().empty()) {
    forced_hash_data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_forced_hash_data(),
      GetArena());
  }
  ::memcpy(&old_num_blob_, &from.old_num_blob_,
    static_cast<size_t>(reinterpret_cast<char*>(&timestamp_limit_) -
    reinterpret_cast<char*>(&old_num_blob_)) + sizeof(timestamp_limit_));
  // @@protoc_insertion_point(copy_constructor:aggregator.v1.PublicBlobInnerInputs)
}

void PublicBlobInnerInputs::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PublicBlobInnerInputs_aggregator_2eproto.base);
  old_blob_state_root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  old_blob_acc_input_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  old_state_root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  last_l1_info_tree_root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sequencer_addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  zk_gas_limit_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  point_z_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  point_y_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  blob_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  forced_hash_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&old_num_blob_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_limit_) -
      reinterpret_cast<char*>(&old_num_blob_)) + sizeof(timestamp_limit_));
}

PublicBlobInnerInputs::~PublicBlobInnerInputs() {
  // @@protoc_insertion_point(destructor:aggregator.v1.PublicBlobInnerInputs)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PublicBlobInnerInputs::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  old_blob_state_root_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  old_blob_acc_input_hash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  old_state_root_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  last_l1_info_tree_root_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sequencer_addr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  zk_gas_limit_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  point_z_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  point_y_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  blob_data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  forced_hash_data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PublicBlobInnerInputs::ArenaDtor(void* object) {
  PublicBlobInnerInputs* _this = reinterpret_cast< PublicBlobInnerInputs* >(object);
  (void)_this;
}
void PublicBlobInnerInputs::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PublicBlobInnerInputs::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PublicBlobInnerInputs& PublicBlobInnerInputs::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PublicBlobInnerInputs_aggregator_2eproto.base);
  return *internal_default_instance();
}


void PublicBlobInnerInputs::Clear() {
// @@protoc_insertion_point(message_clear_start:aggregator.v1.PublicBlobInnerInputs)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  old_blob_state_root_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  old_blob_acc_input_hash_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  old_state_root_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  last_l1_info_tree_root_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sequencer_addr_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  zk_gas_limit_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  point_z_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  point_y_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  blob_data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  forced_hash_data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&old_num_blob_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_limit_) -
      reinterpret_cast<char*>(&old_num_blob_)) + sizeof(timestamp_limit_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PublicBlobInnerInputs::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes old_blob_state_root = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_old_blob_state_root();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes old_blob_acc_input_hash = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_old_blob_acc_input_hash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 old_num_blob = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          old_num_blob_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes old_state_root = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_old_state_root();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 fork_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          fork_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 last_l1_info_tree_index = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          last_l1_info_tree_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes last_l1_info_tree_root = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_last_l1_info_tree_root();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string sequencer_addr = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_sequencer_addr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "aggregator.v1.PublicBlobInnerInputs.sequencer_addr"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 timestamp_limit = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          timestamp_limit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes zk_gas_limit = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_zk_gas_limit();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 type = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes point_z = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_point_z();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes point_y = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          auto str = _internal_mutable_point_y();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes blob_data = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_blob_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes forced_hash_data = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          auto str = _internal_mutable_forced_hash_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PublicBlobInnerInputs::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:aggregator.v1.PublicBlobInnerInputs)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes old_blob_state_root = 1;
  if (this->old_blob_state_root().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_old_blob_state_root(), target);
  }

  // bytes old_blob_acc_input_hash = 2;
  if (this->old_blob_acc_input_hash().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_old_blob_acc_input_hash(), target);
  }

  // uint64 old_num_blob = 3;
  if (this->old_num_blob() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_old_num_blob(), target);
  }

  // bytes old_state_root = 4;
  if (this->old_state_root().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_old_state_root(), target);
  }

  // uint64 fork_id = 5;
  if (this->fork_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_fork_id(), target);
  }

  // uint32 last_l1_info_tree_index = 6;
  if (this->last_l1_info_tree_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_last_l1_info_tree_index(), target);
  }

  // bytes last_l1_info_tree_root = 7;
  if (this->last_l1_info_tree_root().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        7, this->_internal_last_l1_info_tree_root(), target);
  }

  // string sequencer_addr = 8;
  if (this->sequencer_addr().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sequencer_addr().data(), static_cast<int>(this->_internal_sequencer_addr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aggregator.v1.PublicBlobInnerInputs.sequencer_addr");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_sequencer_addr(), target);
  }

  // uint64 timestamp_limit = 9;
  if (this->timestamp_limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(9, this->_internal_timestamp_limit(), target);
  }

  // bytes zk_gas_limit = 10;
  if (this->zk_gas_limit().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        10, this->_internal_zk_gas_limit(), target);
  }

  // uint32 type = 11;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(11, this->_internal_type(), target);
  }

  // bytes point_z = 12;
  if (this->point_z().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        12, this->_internal_point_z(), target);
  }

  // bytes point_y = 13;
  if (this->point_y().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        13, this->_internal_point_y(), target);
  }

  // bytes blob_data = 14;
  if (this->blob_data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        14, this->_internal_blob_data(), target);
  }

  // bytes forced_hash_data = 15;
  if (this->forced_hash_data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        15, this->_internal_forced_hash_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aggregator.v1.PublicBlobInnerInputs)
  return target;
}

size_t PublicBlobInnerInputs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aggregator.v1.PublicBlobInnerInputs)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes old_blob_state_root = 1;
  if (this->old_blob_state_root().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_old_blob_state_root());
  }

  // bytes old_blob_acc_input_hash = 2;
  if (this->old_blob_acc_input_hash().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_old_blob_acc_input_hash());
  }

  // bytes old_state_root = 4;
  if (this->old_state_root().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_old_state_root());
  }

  // bytes last_l1_info_tree_root = 7;
  if (this->last_l1_info_tree_root().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_last_l1_info_tree_root());
  }

  // string sequencer_addr = 8;
  if (this->sequencer_addr().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sequencer_addr());
  }

  // bytes zk_gas_limit = 10;
  if (this->zk_gas_limit().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_zk_gas_limit());
  }

  // bytes point_z = 12;
  if (this->point_z().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_point_z());
  }

  // bytes point_y = 13;
  if (this->point_y().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_point_y());
  }

  // bytes blob_data = 14;
  if (this->blob_data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_blob_data());
  }

  // bytes forced_hash_data = 15;
  if (this->forced_hash_data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_forced_hash_data());
  }

  // uint64 old_num_blob = 3;
  if (this->old_num_blob() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_old_num_blob());
  }

  // uint64 fork_id = 5;
  if (this->fork_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_fork_id());
  }

  // uint32 last_l1_info_tree_index = 6;
  if (this->last_l1_info_tree_index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_last_l1_info_tree_index());
  }

  // uint32 type = 11;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_type());
  }

  // uint64 timestamp_limit = 9;
  if (this->timestamp_limit() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_timestamp_limit());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PublicBlobInnerInputs::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aggregator.v1.PublicBlobInnerInputs)
  GOOGLE_DCHECK_NE(&from, this);
  const PublicBlobInnerInputs* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PublicBlobInnerInputs>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aggregator.v1.PublicBlobInnerInputs)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aggregator.v1.PublicBlobInnerInputs)
    MergeFrom(*source);
  }
}

void PublicBlobInnerInputs::MergeFrom(const PublicBlobInnerInputs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aggregator.v1.PublicBlobInnerInputs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.old_blob_state_root().size() > 0) {
    _internal_set_old_blob_state_root(from._internal_old_blob_state_root());
  }
  if (from.old_blob_acc_input_hash().size() > 0) {
    _internal_set_old_blob_acc_input_hash(from._internal_old_blob_acc_input_hash());
  }
  if (from.old_state_root().size() > 0) {
    _internal_set_old_state_root(from._internal_old_state_root());
  }
  if (from.last_l1_info_tree_root().size() > 0) {
    _internal_set_last_l1_info_tree_root(from._internal_last_l1_info_tree_root());
  }
  if (from.sequencer_addr().size() > 0) {
    _internal_set_sequencer_addr(from._internal_sequencer_addr());
  }
  if (from.zk_gas_limit().size() > 0) {
    _internal_set_zk_gas_limit(from._internal_zk_gas_limit());
  }
  if (from.point_z().size() > 0) {
    _internal_set_point_z(from._internal_point_z());
  }
  if (from.point_y().size() > 0) {
    _internal_set_point_y(from._internal_point_y());
  }
  if (from.blob_data().size() > 0) {
    _internal_set_blob_data(from._internal_blob_data());
  }
  if (from.forced_hash_data().size() > 0) {
    _internal_set_forced_hash_data(from._internal_forced_hash_data());
  }
  if (from.old_num_blob() != 0) {
    _internal_set_old_num_blob(from._internal_old_num_blob());
  }
  if (from.fork_id() != 0) {
    _internal_set_fork_id(from._internal_fork_id());
  }
  if (from.last_l1_info_tree_index() != 0) {
    _internal_set_last_l1_info_tree_index(from._internal_last_l1_info_tree_index());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.timestamp_limit() != 0) {
    _internal_set_timestamp_limit(from._internal_timestamp_limit());
  }
}

void PublicBlobInnerInputs::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aggregator.v1.PublicBlobInnerInputs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PublicBlobInnerInputs::CopyFrom(const PublicBlobInnerInputs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aggregator.v1.PublicBlobInnerInputs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PublicBlobInnerInputs::IsInitialized() const {
  return true;
}

void PublicBlobInnerInputs::InternalSwap(PublicBlobInnerInputs* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  old_blob_state_root_.Swap(&other->old_blob_state_root_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  old_blob_acc_input_hash_.Swap(&other->old_blob_acc_input_hash_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  old_state_root_.Swap(&other->old_state_root_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  last_l1_info_tree_root_.Swap(&other->last_l1_info_tree_root_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sequencer_addr_.Swap(&other->sequencer_addr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  zk_gas_limit_.Swap(&other->zk_gas_limit_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  point_z_.Swap(&other->point_z_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  point_y_.Swap(&other->point_y_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  blob_data_.Swap(&other->blob_data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  forced_hash_data_.Swap(&other->forced_hash_data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PublicBlobInnerInputs, timestamp_limit_)
      + sizeof(PublicBlobInnerInputs::timestamp_limit_)
      - PROTOBUF_FIELD_OFFSET(PublicBlobInnerInputs, old_num_blob_)>(
          reinterpret_cast<char*>(&old_num_blob_),
          reinterpret_cast<char*>(&other->old_num_blob_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PublicBlobInnerInputs::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

StatelessPublicInputs_L1InfoTreeDataEntry_DoNotUse::StatelessPublicInputs_L1InfoTreeDataEntry_DoNotUse() {}
StatelessPublicInputs_L1InfoTreeDataEntry_DoNotUse::StatelessPublicInputs_L1InfoTreeDataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void StatelessPublicInputs_L1InfoTreeDataEntry_DoNotUse::MergeFrom(const StatelessPublicInputs_L1InfoTreeDataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata StatelessPublicInputs_L1InfoTreeDataEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void StatelessPublicInputs_L1InfoTreeDataEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void StatelessPublicInputs::InitAsDefaultInstance() {
}
class StatelessPublicInputs::_Internal {
 public:
};

StatelessPublicInputs::StatelessPublicInputs(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  l1_info_tree_data_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:aggregator.v1.StatelessPublicInputs)
}
StatelessPublicInputs::StatelessPublicInputs(const StatelessPublicInputs& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  l1_info_tree_data_.MergeFrom(from.l1_info_tree_data_);
  witness_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_witness().empty()) {
    witness_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_witness(),
      GetArena());
  }
  data_stream_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data_stream().empty()) {
    data_stream_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data_stream(),
      GetArena());
  }
  old_acc_input_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_old_acc_input_hash().empty()) {
    old_acc_input_hash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_old_acc_input_hash(),
      GetArena());
  }
  l1_info_root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_l1_info_root().empty()) {
    l1_info_root_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_l1_info_root(),
      GetArena());
  }
  sequencer_addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sequencer_addr().empty()) {
    sequencer_addr_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_sequencer_addr(),
      GetArena());
  }
  forced_blockhash_l1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_forced_blockhash_l1().empty()) {
    forced_blockhash_l1_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_forced_blockhash_l1(),
      GetArena());
  }
  aggregator_addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_aggregator_addr().empty()) {
    aggregator_addr_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_aggregator_addr(),
      GetArena());
  }
  timestamp_limit_ = from.timestamp_limit_;
  // @@protoc_insertion_point(copy_constructor:aggregator.v1.StatelessPublicInputs)
}

void StatelessPublicInputs::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StatelessPublicInputs_aggregator_2eproto.base);
  witness_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_stream_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  old_acc_input_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  l1_info_root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sequencer_addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  forced_blockhash_l1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  aggregator_addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  timestamp_limit_ = PROTOBUF_ULONGLONG(0);
}

StatelessPublicInputs::~StatelessPublicInputs() {
  // @@protoc_insertion_point(destructor:aggregator.v1.StatelessPublicInputs)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StatelessPublicInputs::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  witness_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_stream_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  old_acc_input_hash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  l1_info_root_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sequencer_addr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  forced_blockhash_l1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  aggregator_addr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StatelessPublicInputs::ArenaDtor(void* object) {
  StatelessPublicInputs* _this = reinterpret_cast< StatelessPublicInputs* >(object);
  (void)_this;
}
void StatelessPublicInputs::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StatelessPublicInputs::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StatelessPublicInputs& StatelessPublicInputs::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StatelessPublicInputs_aggregator_2eproto.base);
  return *internal_default_instance();
}


void StatelessPublicInputs::Clear() {
// @@protoc_insertion_point(message_clear_start:aggregator.v1.StatelessPublicInputs)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  l1_info_tree_data_.Clear();
  witness_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_stream_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  old_acc_input_hash_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  l1_info_root_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sequencer_addr_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  forced_blockhash_l1_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  aggregator_addr_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  timestamp_limit_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StatelessPublicInputs::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes witness = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_witness();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes data_stream = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_data_stream();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes old_acc_input_hash = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_old_acc_input_hash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes l1_info_root = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_l1_info_root();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 timestamp_limit = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          timestamp_limit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string sequencer_addr = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_sequencer_addr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "aggregator.v1.StatelessPublicInputs.sequencer_addr"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes forced_blockhash_l1 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_forced_blockhash_l1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string aggregator_addr = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_aggregator_addr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "aggregator.v1.StatelessPublicInputs.aggregator_addr"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<uint32, .aggregator.v1.L1Data> l1_info_tree_data = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&l1_info_tree_data_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StatelessPublicInputs::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:aggregator.v1.StatelessPublicInputs)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes witness = 1;
  if (this->witness().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_witness(), target);
  }

  // bytes data_stream = 2;
  if (this->data_stream().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_data_stream(), target);
  }

  // bytes old_acc_input_hash = 3;
  if (this->old_acc_input_hash().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_old_acc_input_hash(), target);
  }

  // bytes l1_info_root = 4;
  if (this->l1_info_root().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_l1_info_root(), target);
  }

  // uint64 timestamp_limit = 5;
  if (this->timestamp_limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_timestamp_limit(), target);
  }

  // string sequencer_addr = 6;
  if (this->sequencer_addr().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sequencer_addr().data(), static_cast<int>(this->_internal_sequencer_addr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aggregator.v1.StatelessPublicInputs.sequencer_addr");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_sequencer_addr(), target);
  }

  // bytes forced_blockhash_l1 = 7;
  if (this->forced_blockhash_l1().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        7, this->_internal_forced_blockhash_l1(), target);
  }

  // string aggregator_addr = 8;
  if (this->aggregator_addr().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_aggregator_addr().data(), static_cast<int>(this->_internal_aggregator_addr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aggregator.v1.StatelessPublicInputs.aggregator_addr");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_aggregator_addr(), target);
  }

  // map<uint32, .aggregator.v1.L1Data> l1_info_tree_data = 9;
  if (!this->_internal_l1_info_tree_data().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::aggregator::v1::L1Data >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_l1_info_tree_data().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_l1_info_tree_data().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::aggregator::v1::L1Data >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::aggregator::v1::L1Data >::const_iterator
          it = this->_internal_l1_info_tree_data().begin();
          it != this->_internal_l1_info_tree_data().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = StatelessPublicInputs_L1InfoTreeDataEntry_DoNotUse::Funcs::InternalSerialize(9, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::aggregator::v1::L1Data >::const_iterator
          it = this->_internal_l1_info_tree_data().begin();
          it != this->_internal_l1_info_tree_data().end(); ++it) {
        target = StatelessPublicInputs_L1InfoTreeDataEntry_DoNotUse::Funcs::InternalSerialize(9, it->first, it->second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aggregator.v1.StatelessPublicInputs)
  return target;
}

size_t StatelessPublicInputs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aggregator.v1.StatelessPublicInputs)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<uint32, .aggregator.v1.L1Data> l1_info_tree_data = 9;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_l1_info_tree_data_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::aggregator::v1::L1Data >::const_iterator
      it = this->_internal_l1_info_tree_data().begin();
      it != this->_internal_l1_info_tree_data().end(); ++it) {
    total_size += StatelessPublicInputs_L1InfoTreeDataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // bytes witness = 1;
  if (this->witness().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_witness());
  }

  // bytes data_stream = 2;
  if (this->data_stream().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data_stream());
  }

  // bytes old_acc_input_hash = 3;
  if (this->old_acc_input_hash().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_old_acc_input_hash());
  }

  // bytes l1_info_root = 4;
  if (this->l1_info_root().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_l1_info_root());
  }

  // string sequencer_addr = 6;
  if (this->sequencer_addr().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sequencer_addr());
  }

  // bytes forced_blockhash_l1 = 7;
  if (this->forced_blockhash_l1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_forced_blockhash_l1());
  }

  // string aggregator_addr = 8;
  if (this->aggregator_addr().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_aggregator_addr());
  }

  // uint64 timestamp_limit = 5;
  if (this->timestamp_limit() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_timestamp_limit());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StatelessPublicInputs::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aggregator.v1.StatelessPublicInputs)
  GOOGLE_DCHECK_NE(&from, this);
  const StatelessPublicInputs* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StatelessPublicInputs>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aggregator.v1.StatelessPublicInputs)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aggregator.v1.StatelessPublicInputs)
    MergeFrom(*source);
  }
}

void StatelessPublicInputs::MergeFrom(const StatelessPublicInputs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aggregator.v1.StatelessPublicInputs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  l1_info_tree_data_.MergeFrom(from.l1_info_tree_data_);
  if (from.witness().size() > 0) {
    _internal_set_witness(from._internal_witness());
  }
  if (from.data_stream().size() > 0) {
    _internal_set_data_stream(from._internal_data_stream());
  }
  if (from.old_acc_input_hash().size() > 0) {
    _internal_set_old_acc_input_hash(from._internal_old_acc_input_hash());
  }
  if (from.l1_info_root().size() > 0) {
    _internal_set_l1_info_root(from._internal_l1_info_root());
  }
  if (from.sequencer_addr().size() > 0) {
    _internal_set_sequencer_addr(from._internal_sequencer_addr());
  }
  if (from.forced_blockhash_l1().size() > 0) {
    _internal_set_forced_blockhash_l1(from._internal_forced_blockhash_l1());
  }
  if (from.aggregator_addr().size() > 0) {
    _internal_set_aggregator_addr(from._internal_aggregator_addr());
  }
  if (from.timestamp_limit() != 0) {
    _internal_set_timestamp_limit(from._internal_timestamp_limit());
  }
}

void StatelessPublicInputs::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aggregator.v1.StatelessPublicInputs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatelessPublicInputs::CopyFrom(const StatelessPublicInputs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aggregator.v1.StatelessPublicInputs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatelessPublicInputs::IsInitialized() const {
  return true;
}

void StatelessPublicInputs::InternalSwap(StatelessPublicInputs* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  l1_info_tree_data_.Swap(&other->l1_info_tree_data_);
  witness_.Swap(&other->witness_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_stream_.Swap(&other->data_stream_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  old_acc_input_hash_.Swap(&other->old_acc_input_hash_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  l1_info_root_.Swap(&other->l1_info_root_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sequencer_addr_.Swap(&other->sequencer_addr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  forced_blockhash_l1_.Swap(&other->forced_blockhash_l1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  aggregator_addr_.Swap(&other->aggregator_addr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(timestamp_limit_, other->timestamp_limit_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StatelessPublicInputs::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void L1Data::InitAsDefaultInstance() {
}
class L1Data::_Internal {
 public:
};

L1Data::L1Data(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  smt_proof_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:aggregator.v1.L1Data)
}
L1Data::L1Data(const L1Data& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      smt_proof_(from.smt_proof_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  global_exit_root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_global_exit_root().empty()) {
    global_exit_root_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_global_exit_root(),
      GetArena());
  }
  block_hash_l1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_block_hash_l1().empty()) {
    block_hash_l1_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_block_hash_l1(),
      GetArena());
  }
  initial_historic_root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_initial_historic_root().empty()) {
    initial_historic_root_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_initial_historic_root(),
      GetArena());
  }
  min_timestamp_ = from.min_timestamp_;
  // @@protoc_insertion_point(copy_constructor:aggregator.v1.L1Data)
}

void L1Data::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_L1Data_aggregator_2eproto.base);
  global_exit_root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  block_hash_l1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  initial_historic_root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  min_timestamp_ = 0u;
}

L1Data::~L1Data() {
  // @@protoc_insertion_point(destructor:aggregator.v1.L1Data)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void L1Data::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  global_exit_root_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  block_hash_l1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  initial_historic_root_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void L1Data::ArenaDtor(void* object) {
  L1Data* _this = reinterpret_cast< L1Data* >(object);
  (void)_this;
}
void L1Data::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void L1Data::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const L1Data& L1Data::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_L1Data_aggregator_2eproto.base);
  return *internal_default_instance();
}


void L1Data::Clear() {
// @@protoc_insertion_point(message_clear_start:aggregator.v1.L1Data)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  smt_proof_.Clear();
  global_exit_root_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  block_hash_l1_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  initial_historic_root_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  min_timestamp_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* L1Data::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes global_exit_root = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_global_exit_root();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes block_hash_l1 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_block_hash_l1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 min_timestamp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          min_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated bytes smt_proof = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_smt_proof();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // bytes initial_historic_root = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_initial_historic_root();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* L1Data::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:aggregator.v1.L1Data)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes global_exit_root = 1;
  if (this->global_exit_root().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_global_exit_root(), target);
  }

  // bytes block_hash_l1 = 2;
  if (this->block_hash_l1().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_block_hash_l1(), target);
  }

  // uint32 min_timestamp = 3;
  if (this->min_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_min_timestamp(), target);
  }

  // repeated bytes smt_proof = 4;
  for (int i = 0, n = this->_internal_smt_proof_size(); i < n; i++) {
    const auto& s = this->_internal_smt_proof(i);
    target = stream->WriteBytes(4, s, target);
  }

  // bytes initial_historic_root = 5;
  if (this->initial_historic_root().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_initial_historic_root(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aggregator.v1.L1Data)
  return target;
}

size_t L1Data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aggregator.v1.L1Data)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes smt_proof = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(smt_proof_.size());
  for (int i = 0, n = smt_proof_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      smt_proof_.Get(i));
  }

  // bytes global_exit_root = 1;
  if (this->global_exit_root().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_global_exit_root());
  }

  // bytes block_hash_l1 = 2;
  if (this->block_hash_l1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_block_hash_l1());
  }

  // bytes initial_historic_root = 5;
  if (this->initial_historic_root().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_initial_historic_root());
  }

  // uint32 min_timestamp = 3;
  if (this->min_timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_min_timestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void L1Data::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aggregator.v1.L1Data)
  GOOGLE_DCHECK_NE(&from, this);
  const L1Data* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<L1Data>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aggregator.v1.L1Data)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aggregator.v1.L1Data)
    MergeFrom(*source);
  }
}

void L1Data::MergeFrom(const L1Data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aggregator.v1.L1Data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  smt_proof_.MergeFrom(from.smt_proof_);
  if (from.global_exit_root().size() > 0) {
    _internal_set_global_exit_root(from._internal_global_exit_root());
  }
  if (from.block_hash_l1().size() > 0) {
    _internal_set_block_hash_l1(from._internal_block_hash_l1());
  }
  if (from.initial_historic_root().size() > 0) {
    _internal_set_initial_historic_root(from._internal_initial_historic_root());
  }
  if (from.min_timestamp() != 0) {
    _internal_set_min_timestamp(from._internal_min_timestamp());
  }
}

void L1Data::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aggregator.v1.L1Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void L1Data::CopyFrom(const L1Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aggregator.v1.L1Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool L1Data::IsInitialized() const {
  return true;
}

void L1Data::InternalSwap(L1Data* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  smt_proof_.InternalSwap(&other->smt_proof_);
  global_exit_root_.Swap(&other->global_exit_root_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  block_hash_l1_.Swap(&other->block_hash_l1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  initial_historic_root_.Swap(&other->initial_historic_root_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(min_timestamp_, other->min_timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata L1Data::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

InputProver_DbEntry_DoNotUse::InputProver_DbEntry_DoNotUse() {}
InputProver_DbEntry_DoNotUse::InputProver_DbEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void InputProver_DbEntry_DoNotUse::MergeFrom(const InputProver_DbEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata InputProver_DbEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void InputProver_DbEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

InputProver_ContractsBytecodeEntry_DoNotUse::InputProver_ContractsBytecodeEntry_DoNotUse() {}
InputProver_ContractsBytecodeEntry_DoNotUse::InputProver_ContractsBytecodeEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void InputProver_ContractsBytecodeEntry_DoNotUse::MergeFrom(const InputProver_ContractsBytecodeEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata InputProver_ContractsBytecodeEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void InputProver_ContractsBytecodeEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void InputProver::InitAsDefaultInstance() {
  ::aggregator::v1::_InputProver_default_instance_._instance.get_mutable()->public_inputs_ = const_cast< ::aggregator::v1::PublicInputs*>(
      ::aggregator::v1::PublicInputs::internal_default_instance());
}
class InputProver::_Internal {
 public:
  static const ::aggregator::v1::PublicInputs& public_inputs(const InputProver* msg);
};

const ::aggregator::v1::PublicInputs&
InputProver::_Internal::public_inputs(const InputProver* msg) {
  return *msg->public_inputs_;
}
InputProver::InputProver(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  db_(arena),
  contracts_bytecode_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:aggregator.v1.InputProver)
}
InputProver::InputProver(const InputProver& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  db_.MergeFrom(from.db_);
  contracts_bytecode_.MergeFrom(from.contracts_bytecode_);
  if (from._internal_has_public_inputs()) {
    public_inputs_ = new ::aggregator::v1::PublicInputs(*from.public_inputs_);
  } else {
    public_inputs_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:aggregator.v1.InputProver)
}

void InputProver::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InputProver_aggregator_2eproto.base);
  public_inputs_ = nullptr;
}

InputProver::~InputProver() {
  // @@protoc_insertion_point(destructor:aggregator.v1.InputProver)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InputProver::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete public_inputs_;
}

void InputProver::ArenaDtor(void* object) {
  InputProver* _this = reinterpret_cast< InputProver* >(object);
  (void)_this;
}
void InputProver::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InputProver::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InputProver& InputProver::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InputProver_aggregator_2eproto.base);
  return *internal_default_instance();
}


void InputProver::Clear() {
// @@protoc_insertion_point(message_clear_start:aggregator.v1.InputProver)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  db_.Clear();
  contracts_bytecode_.Clear();
  if (GetArena() == nullptr && public_inputs_ != nullptr) {
    delete public_inputs_;
  }
  public_inputs_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InputProver::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .aggregator.v1.PublicInputs public_inputs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_public_inputs(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> db = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&db_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // map<string, string> contracts_bytecode = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&contracts_bytecode_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InputProver::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:aggregator.v1.InputProver)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .aggregator.v1.PublicInputs public_inputs = 1;
  if (this->has_public_inputs()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::public_inputs(this), target, stream);
  }

  // map<string, string> db = 4;
  if (!this->_internal_db().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "aggregator.v1.InputProver.DbEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "aggregator.v1.InputProver.DbEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_db().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_db().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_db().begin();
          it != this->_internal_db().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = InputProver_DbEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_db().begin();
          it != this->_internal_db().end(); ++it) {
        target = InputProver_DbEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // map<string, string> contracts_bytecode = 5;
  if (!this->_internal_contracts_bytecode().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "aggregator.v1.InputProver.ContractsBytecodeEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "aggregator.v1.InputProver.ContractsBytecodeEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_contracts_bytecode().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_contracts_bytecode().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_contracts_bytecode().begin();
          it != this->_internal_contracts_bytecode().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = InputProver_ContractsBytecodeEntry_DoNotUse::Funcs::InternalSerialize(5, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_contracts_bytecode().begin();
          it != this->_internal_contracts_bytecode().end(); ++it) {
        target = InputProver_ContractsBytecodeEntry_DoNotUse::Funcs::InternalSerialize(5, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aggregator.v1.InputProver)
  return target;
}

size_t InputProver::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aggregator.v1.InputProver)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> db = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_db_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_db().begin();
      it != this->_internal_db().end(); ++it) {
    total_size += InputProver_DbEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, string> contracts_bytecode = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_contracts_bytecode_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_contracts_bytecode().begin();
      it != this->_internal_contracts_bytecode().end(); ++it) {
    total_size += InputProver_ContractsBytecodeEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // .aggregator.v1.PublicInputs public_inputs = 1;
  if (this->has_public_inputs()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *public_inputs_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InputProver::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aggregator.v1.InputProver)
  GOOGLE_DCHECK_NE(&from, this);
  const InputProver* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InputProver>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aggregator.v1.InputProver)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aggregator.v1.InputProver)
    MergeFrom(*source);
  }
}

void InputProver::MergeFrom(const InputProver& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aggregator.v1.InputProver)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  db_.MergeFrom(from.db_);
  contracts_bytecode_.MergeFrom(from.contracts_bytecode_);
  if (from.has_public_inputs()) {
    _internal_mutable_public_inputs()->::aggregator::v1::PublicInputs::MergeFrom(from._internal_public_inputs());
  }
}

void InputProver::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aggregator.v1.InputProver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputProver::CopyFrom(const InputProver& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aggregator.v1.InputProver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputProver::IsInitialized() const {
  return true;
}

void InputProver::InternalSwap(InputProver* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  db_.Swap(&other->db_);
  contracts_bytecode_.Swap(&other->contracts_bytecode_);
  swap(public_inputs_, other->public_inputs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InputProver::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void InputBlobInnerProver::InitAsDefaultInstance() {
  ::aggregator::v1::_InputBlobInnerProver_default_instance_._instance.get_mutable()->public_inputs_ = const_cast< ::aggregator::v1::PublicBlobInnerInputs*>(
      ::aggregator::v1::PublicBlobInnerInputs::internal_default_instance());
}
class InputBlobInnerProver::_Internal {
 public:
  static const ::aggregator::v1::PublicBlobInnerInputs& public_inputs(const InputBlobInnerProver* msg);
};

const ::aggregator::v1::PublicBlobInnerInputs&
InputBlobInnerProver::_Internal::public_inputs(const InputBlobInnerProver* msg) {
  return *msg->public_inputs_;
}
InputBlobInnerProver::InputBlobInnerProver(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:aggregator.v1.InputBlobInnerProver)
}
InputBlobInnerProver::InputBlobInnerProver(const InputBlobInnerProver& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_public_inputs()) {
    public_inputs_ = new ::aggregator::v1::PublicBlobInnerInputs(*from.public_inputs_);
  } else {
    public_inputs_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:aggregator.v1.InputBlobInnerProver)
}

void InputBlobInnerProver::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InputBlobInnerProver_aggregator_2eproto.base);
  public_inputs_ = nullptr;
}

InputBlobInnerProver::~InputBlobInnerProver() {
  // @@protoc_insertion_point(destructor:aggregator.v1.InputBlobInnerProver)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InputBlobInnerProver::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete public_inputs_;
}

void InputBlobInnerProver::ArenaDtor(void* object) {
  InputBlobInnerProver* _this = reinterpret_cast< InputBlobInnerProver* >(object);
  (void)_this;
}
void InputBlobInnerProver::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InputBlobInnerProver::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InputBlobInnerProver& InputBlobInnerProver::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InputBlobInnerProver_aggregator_2eproto.base);
  return *internal_default_instance();
}


void InputBlobInnerProver::Clear() {
// @@protoc_insertion_point(message_clear_start:aggregator.v1.InputBlobInnerProver)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && public_inputs_ != nullptr) {
    delete public_inputs_;
  }
  public_inputs_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InputBlobInnerProver::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .aggregator.v1.PublicBlobInnerInputs public_inputs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_public_inputs(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InputBlobInnerProver::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:aggregator.v1.InputBlobInnerProver)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .aggregator.v1.PublicBlobInnerInputs public_inputs = 1;
  if (this->has_public_inputs()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::public_inputs(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aggregator.v1.InputBlobInnerProver)
  return target;
}

size_t InputBlobInnerProver::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aggregator.v1.InputBlobInnerProver)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .aggregator.v1.PublicBlobInnerInputs public_inputs = 1;
  if (this->has_public_inputs()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *public_inputs_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InputBlobInnerProver::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aggregator.v1.InputBlobInnerProver)
  GOOGLE_DCHECK_NE(&from, this);
  const InputBlobInnerProver* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InputBlobInnerProver>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aggregator.v1.InputBlobInnerProver)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aggregator.v1.InputBlobInnerProver)
    MergeFrom(*source);
  }
}

void InputBlobInnerProver::MergeFrom(const InputBlobInnerProver& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aggregator.v1.InputBlobInnerProver)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_public_inputs()) {
    _internal_mutable_public_inputs()->::aggregator::v1::PublicBlobInnerInputs::MergeFrom(from._internal_public_inputs());
  }
}

void InputBlobInnerProver::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aggregator.v1.InputBlobInnerProver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputBlobInnerProver::CopyFrom(const InputBlobInnerProver& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aggregator.v1.InputBlobInnerProver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputBlobInnerProver::IsInitialized() const {
  return true;
}

void InputBlobInnerProver::InternalSwap(InputBlobInnerProver* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(public_inputs_, other->public_inputs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InputBlobInnerProver::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StatelessInputProver::InitAsDefaultInstance() {
  ::aggregator::v1::_StatelessInputProver_default_instance_._instance.get_mutable()->public_inputs_ = const_cast< ::aggregator::v1::StatelessPublicInputs*>(
      ::aggregator::v1::StatelessPublicInputs::internal_default_instance());
}
class StatelessInputProver::_Internal {
 public:
  static const ::aggregator::v1::StatelessPublicInputs& public_inputs(const StatelessInputProver* msg);
};

const ::aggregator::v1::StatelessPublicInputs&
StatelessInputProver::_Internal::public_inputs(const StatelessInputProver* msg) {
  return *msg->public_inputs_;
}
StatelessInputProver::StatelessInputProver(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:aggregator.v1.StatelessInputProver)
}
StatelessInputProver::StatelessInputProver(const StatelessInputProver& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_public_inputs()) {
    public_inputs_ = new ::aggregator::v1::StatelessPublicInputs(*from.public_inputs_);
  } else {
    public_inputs_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:aggregator.v1.StatelessInputProver)
}

void StatelessInputProver::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StatelessInputProver_aggregator_2eproto.base);
  public_inputs_ = nullptr;
}

StatelessInputProver::~StatelessInputProver() {
  // @@protoc_insertion_point(destructor:aggregator.v1.StatelessInputProver)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StatelessInputProver::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete public_inputs_;
}

void StatelessInputProver::ArenaDtor(void* object) {
  StatelessInputProver* _this = reinterpret_cast< StatelessInputProver* >(object);
  (void)_this;
}
void StatelessInputProver::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StatelessInputProver::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StatelessInputProver& StatelessInputProver::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StatelessInputProver_aggregator_2eproto.base);
  return *internal_default_instance();
}


void StatelessInputProver::Clear() {
// @@protoc_insertion_point(message_clear_start:aggregator.v1.StatelessInputProver)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && public_inputs_ != nullptr) {
    delete public_inputs_;
  }
  public_inputs_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StatelessInputProver::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .aggregator.v1.StatelessPublicInputs public_inputs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_public_inputs(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StatelessInputProver::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:aggregator.v1.StatelessInputProver)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .aggregator.v1.StatelessPublicInputs public_inputs = 1;
  if (this->has_public_inputs()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::public_inputs(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aggregator.v1.StatelessInputProver)
  return target;
}

size_t StatelessInputProver::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aggregator.v1.StatelessInputProver)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .aggregator.v1.StatelessPublicInputs public_inputs = 1;
  if (this->has_public_inputs()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *public_inputs_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StatelessInputProver::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aggregator.v1.StatelessInputProver)
  GOOGLE_DCHECK_NE(&from, this);
  const StatelessInputProver* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StatelessInputProver>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aggregator.v1.StatelessInputProver)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aggregator.v1.StatelessInputProver)
    MergeFrom(*source);
  }
}

void StatelessInputProver::MergeFrom(const StatelessInputProver& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aggregator.v1.StatelessInputProver)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_public_inputs()) {
    _internal_mutable_public_inputs()->::aggregator::v1::StatelessPublicInputs::MergeFrom(from._internal_public_inputs());
  }
}

void StatelessInputProver::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aggregator.v1.StatelessInputProver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatelessInputProver::CopyFrom(const StatelessInputProver& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aggregator.v1.StatelessInputProver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatelessInputProver::IsInitialized() const {
  return true;
}

void StatelessInputProver::InternalSwap(StatelessInputProver* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(public_inputs_, other->public_inputs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StatelessInputProver::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PublicInputsExtended::InitAsDefaultInstance() {
  ::aggregator::v1::_PublicInputsExtended_default_instance_._instance.get_mutable()->public_inputs_ = const_cast< ::aggregator::v1::PublicInputs*>(
      ::aggregator::v1::PublicInputs::internal_default_instance());
}
class PublicInputsExtended::_Internal {
 public:
  static const ::aggregator::v1::PublicInputs& public_inputs(const PublicInputsExtended* msg);
};

const ::aggregator::v1::PublicInputs&
PublicInputsExtended::_Internal::public_inputs(const PublicInputsExtended* msg) {
  return *msg->public_inputs_;
}
PublicInputsExtended::PublicInputsExtended(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:aggregator.v1.PublicInputsExtended)
}
PublicInputsExtended::PublicInputsExtended(const PublicInputsExtended& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  new_state_root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_new_state_root().empty()) {
    new_state_root_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_new_state_root(),
      GetArena());
  }
  new_batch_acc_input_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_new_batch_acc_input_hash().empty()) {
    new_batch_acc_input_hash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_new_batch_acc_input_hash(),
      GetArena());
  }
  new_local_exit_root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_new_local_exit_root().empty()) {
    new_local_exit_root_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_new_local_exit_root(),
      GetArena());
  }
  current_l1_info_tree_root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_current_l1_info_tree_root().empty()) {
    current_l1_info_tree_root_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_current_l1_info_tree_root(),
      GetArena());
  }
  if (from._internal_has_public_inputs()) {
    public_inputs_ = new ::aggregator::v1::PublicInputs(*from.public_inputs_);
  } else {
    public_inputs_ = nullptr;
  }
  ::memcpy(&new_last_timestamp_, &from.new_last_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&current_l1_info_tree_index_) -
    reinterpret_cast<char*>(&new_last_timestamp_)) + sizeof(current_l1_info_tree_index_));
  // @@protoc_insertion_point(copy_constructor:aggregator.v1.PublicInputsExtended)
}

void PublicInputsExtended::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PublicInputsExtended_aggregator_2eproto.base);
  new_state_root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  new_batch_acc_input_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  new_local_exit_root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  current_l1_info_tree_root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&public_inputs_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&current_l1_info_tree_index_) -
      reinterpret_cast<char*>(&public_inputs_)) + sizeof(current_l1_info_tree_index_));
}

PublicInputsExtended::~PublicInputsExtended() {
  // @@protoc_insertion_point(destructor:aggregator.v1.PublicInputsExtended)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PublicInputsExtended::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  new_state_root_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  new_batch_acc_input_hash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  new_local_exit_root_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  current_l1_info_tree_root_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete public_inputs_;
}

void PublicInputsExtended::ArenaDtor(void* object) {
  PublicInputsExtended* _this = reinterpret_cast< PublicInputsExtended* >(object);
  (void)_this;
}
void PublicInputsExtended::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PublicInputsExtended::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PublicInputsExtended& PublicInputsExtended::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PublicInputsExtended_aggregator_2eproto.base);
  return *internal_default_instance();
}


void PublicInputsExtended::Clear() {
// @@protoc_insertion_point(message_clear_start:aggregator.v1.PublicInputsExtended)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  new_state_root_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  new_batch_acc_input_hash_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  new_local_exit_root_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  current_l1_info_tree_root_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && public_inputs_ != nullptr) {
    delete public_inputs_;
  }
  public_inputs_ = nullptr;
  ::memset(&new_last_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&current_l1_info_tree_index_) -
      reinterpret_cast<char*>(&new_last_timestamp_)) + sizeof(current_l1_info_tree_index_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PublicInputsExtended::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .aggregator.v1.PublicInputs public_inputs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_public_inputs(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes new_state_root = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_new_state_root();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes new_batch_acc_input_hash = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_new_batch_acc_input_hash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes new_local_exit_root = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_new_local_exit_root();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 new_last_timestamp = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          new_last_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes current_l1_info_tree_root = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_current_l1_info_tree_root();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 current_l1_info_tree_index = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          current_l1_info_tree_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PublicInputsExtended::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:aggregator.v1.PublicInputsExtended)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .aggregator.v1.PublicInputs public_inputs = 1;
  if (this->has_public_inputs()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::public_inputs(this), target, stream);
  }

  // bytes new_state_root = 2;
  if (this->new_state_root().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_new_state_root(), target);
  }

  // bytes new_batch_acc_input_hash = 3;
  if (this->new_batch_acc_input_hash().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_new_batch_acc_input_hash(), target);
  }

  // bytes new_local_exit_root = 4;
  if (this->new_local_exit_root().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_new_local_exit_root(), target);
  }

  // uint64 new_last_timestamp = 5;
  if (this->new_last_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_new_last_timestamp(), target);
  }

  // bytes current_l1_info_tree_root = 6;
  if (this->current_l1_info_tree_root().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_current_l1_info_tree_root(), target);
  }

  // uint32 current_l1_info_tree_index = 7;
  if (this->current_l1_info_tree_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_current_l1_info_tree_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aggregator.v1.PublicInputsExtended)
  return target;
}

size_t PublicInputsExtended::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aggregator.v1.PublicInputsExtended)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes new_state_root = 2;
  if (this->new_state_root().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_new_state_root());
  }

  // bytes new_batch_acc_input_hash = 3;
  if (this->new_batch_acc_input_hash().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_new_batch_acc_input_hash());
  }

  // bytes new_local_exit_root = 4;
  if (this->new_local_exit_root().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_new_local_exit_root());
  }

  // bytes current_l1_info_tree_root = 6;
  if (this->current_l1_info_tree_root().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_current_l1_info_tree_root());
  }

  // .aggregator.v1.PublicInputs public_inputs = 1;
  if (this->has_public_inputs()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *public_inputs_);
  }

  // uint64 new_last_timestamp = 5;
  if (this->new_last_timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_new_last_timestamp());
  }

  // uint32 current_l1_info_tree_index = 7;
  if (this->current_l1_info_tree_index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_current_l1_info_tree_index());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PublicInputsExtended::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aggregator.v1.PublicInputsExtended)
  GOOGLE_DCHECK_NE(&from, this);
  const PublicInputsExtended* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PublicInputsExtended>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aggregator.v1.PublicInputsExtended)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aggregator.v1.PublicInputsExtended)
    MergeFrom(*source);
  }
}

void PublicInputsExtended::MergeFrom(const PublicInputsExtended& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aggregator.v1.PublicInputsExtended)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.new_state_root().size() > 0) {
    _internal_set_new_state_root(from._internal_new_state_root());
  }
  if (from.new_batch_acc_input_hash().size() > 0) {
    _internal_set_new_batch_acc_input_hash(from._internal_new_batch_acc_input_hash());
  }
  if (from.new_local_exit_root().size() > 0) {
    _internal_set_new_local_exit_root(from._internal_new_local_exit_root());
  }
  if (from.current_l1_info_tree_root().size() > 0) {
    _internal_set_current_l1_info_tree_root(from._internal_current_l1_info_tree_root());
  }
  if (from.has_public_inputs()) {
    _internal_mutable_public_inputs()->::aggregator::v1::PublicInputs::MergeFrom(from._internal_public_inputs());
  }
  if (from.new_last_timestamp() != 0) {
    _internal_set_new_last_timestamp(from._internal_new_last_timestamp());
  }
  if (from.current_l1_info_tree_index() != 0) {
    _internal_set_current_l1_info_tree_index(from._internal_current_l1_info_tree_index());
  }
}

void PublicInputsExtended::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aggregator.v1.PublicInputsExtended)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PublicInputsExtended::CopyFrom(const PublicInputsExtended& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aggregator.v1.PublicInputsExtended)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PublicInputsExtended::IsInitialized() const {
  return true;
}

void PublicInputsExtended::InternalSwap(PublicInputsExtended* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  new_state_root_.Swap(&other->new_state_root_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  new_batch_acc_input_hash_.Swap(&other->new_batch_acc_input_hash_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  new_local_exit_root_.Swap(&other->new_local_exit_root_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  current_l1_info_tree_root_.Swap(&other->current_l1_info_tree_root_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PublicInputsExtended, current_l1_info_tree_index_)
      + sizeof(PublicInputsExtended::current_l1_info_tree_index_)
      - PROTOBUF_FIELD_OFFSET(PublicInputsExtended, public_inputs_)>(
          reinterpret_cast<char*>(&public_inputs_),
          reinterpret_cast<char*>(&other->public_inputs_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PublicInputsExtended::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace aggregator
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::aggregator::v1::Version* Arena::CreateMaybeMessage< ::aggregator::v1::Version >(Arena* arena) {
  return Arena::CreateMessageInternal< ::aggregator::v1::Version >(arena);
}
template<> PROTOBUF_NOINLINE ::aggregator::v1::AggregatorMessage* Arena::CreateMaybeMessage< ::aggregator::v1::AggregatorMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::aggregator::v1::AggregatorMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::aggregator::v1::ProverMessage* Arena::CreateMaybeMessage< ::aggregator::v1::ProverMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::aggregator::v1::ProverMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::aggregator::v1::GetStatusRequest* Arena::CreateMaybeMessage< ::aggregator::v1::GetStatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::aggregator::v1::GetStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::aggregator::v1::GenBatchProofRequest* Arena::CreateMaybeMessage< ::aggregator::v1::GenBatchProofRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::aggregator::v1::GenBatchProofRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::aggregator::v1::GenStatelessBatchProofRequest* Arena::CreateMaybeMessage< ::aggregator::v1::GenStatelessBatchProofRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::aggregator::v1::GenStatelessBatchProofRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::aggregator::v1::GenAggregatedBatchProofRequest* Arena::CreateMaybeMessage< ::aggregator::v1::GenAggregatedBatchProofRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::aggregator::v1::GenAggregatedBatchProofRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::aggregator::v1::GenBlobInnerProofRequest* Arena::CreateMaybeMessage< ::aggregator::v1::GenBlobInnerProofRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::aggregator::v1::GenBlobInnerProofRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::aggregator::v1::GenBlobOuterProofRequest* Arena::CreateMaybeMessage< ::aggregator::v1::GenBlobOuterProofRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::aggregator::v1::GenBlobOuterProofRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::aggregator::v1::GenAggregatedBlobOuterProofRequest* Arena::CreateMaybeMessage< ::aggregator::v1::GenAggregatedBlobOuterProofRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::aggregator::v1::GenAggregatedBlobOuterProofRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::aggregator::v1::GenFinalProofRequest* Arena::CreateMaybeMessage< ::aggregator::v1::GenFinalProofRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::aggregator::v1::GenFinalProofRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::aggregator::v1::CancelRequest* Arena::CreateMaybeMessage< ::aggregator::v1::CancelRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::aggregator::v1::CancelRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::aggregator::v1::GetProofRequest* Arena::CreateMaybeMessage< ::aggregator::v1::GetProofRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::aggregator::v1::GetProofRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::aggregator::v1::GetStatusResponse* Arena::CreateMaybeMessage< ::aggregator::v1::GetStatusResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::aggregator::v1::GetStatusResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::aggregator::v1::GenBatchProofResponse* Arena::CreateMaybeMessage< ::aggregator::v1::GenBatchProofResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::aggregator::v1::GenBatchProofResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::aggregator::v1::GenAggregatedBatchProofResponse* Arena::CreateMaybeMessage< ::aggregator::v1::GenAggregatedBatchProofResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::aggregator::v1::GenAggregatedBatchProofResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::aggregator::v1::GenBlobInnerProofResponse* Arena::CreateMaybeMessage< ::aggregator::v1::GenBlobInnerProofResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::aggregator::v1::GenBlobInnerProofResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::aggregator::v1::GenBlobOuterProofResponse* Arena::CreateMaybeMessage< ::aggregator::v1::GenBlobOuterProofResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::aggregator::v1::GenBlobOuterProofResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::aggregator::v1::GenAggregatedBlobOuterProofResponse* Arena::CreateMaybeMessage< ::aggregator::v1::GenAggregatedBlobOuterProofResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::aggregator::v1::GenAggregatedBlobOuterProofResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::aggregator::v1::GenFinalProofResponse* Arena::CreateMaybeMessage< ::aggregator::v1::GenFinalProofResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::aggregator::v1::GenFinalProofResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::aggregator::v1::CancelResponse* Arena::CreateMaybeMessage< ::aggregator::v1::CancelResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::aggregator::v1::CancelResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::aggregator::v1::GetProofResponse* Arena::CreateMaybeMessage< ::aggregator::v1::GetProofResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::aggregator::v1::GetProofResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::aggregator::v1::FinalProof* Arena::CreateMaybeMessage< ::aggregator::v1::FinalProof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::aggregator::v1::FinalProof >(arena);
}
template<> PROTOBUF_NOINLINE ::aggregator::v1::PublicInputs_L1InfoTreeDataEntry_DoNotUse* Arena::CreateMaybeMessage< ::aggregator::v1::PublicInputs_L1InfoTreeDataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::aggregator::v1::PublicInputs_L1InfoTreeDataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::aggregator::v1::PublicInputs* Arena::CreateMaybeMessage< ::aggregator::v1::PublicInputs >(Arena* arena) {
  return Arena::CreateMessageInternal< ::aggregator::v1::PublicInputs >(arena);
}
template<> PROTOBUF_NOINLINE ::aggregator::v1::ForcedData* Arena::CreateMaybeMessage< ::aggregator::v1::ForcedData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::aggregator::v1::ForcedData >(arena);
}
template<> PROTOBUF_NOINLINE ::aggregator::v1::PublicBlobInnerInputs* Arena::CreateMaybeMessage< ::aggregator::v1::PublicBlobInnerInputs >(Arena* arena) {
  return Arena::CreateMessageInternal< ::aggregator::v1::PublicBlobInnerInputs >(arena);
}
template<> PROTOBUF_NOINLINE ::aggregator::v1::StatelessPublicInputs_L1InfoTreeDataEntry_DoNotUse* Arena::CreateMaybeMessage< ::aggregator::v1::StatelessPublicInputs_L1InfoTreeDataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::aggregator::v1::StatelessPublicInputs_L1InfoTreeDataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::aggregator::v1::StatelessPublicInputs* Arena::CreateMaybeMessage< ::aggregator::v1::StatelessPublicInputs >(Arena* arena) {
  return Arena::CreateMessageInternal< ::aggregator::v1::StatelessPublicInputs >(arena);
}
template<> PROTOBUF_NOINLINE ::aggregator::v1::L1Data* Arena::CreateMaybeMessage< ::aggregator::v1::L1Data >(Arena* arena) {
  return Arena::CreateMessageInternal< ::aggregator::v1::L1Data >(arena);
}
template<> PROTOBUF_NOINLINE ::aggregator::v1::InputProver_DbEntry_DoNotUse* Arena::CreateMaybeMessage< ::aggregator::v1::InputProver_DbEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::aggregator::v1::InputProver_DbEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::aggregator::v1::InputProver_ContractsBytecodeEntry_DoNotUse* Arena::CreateMaybeMessage< ::aggregator::v1::InputProver_ContractsBytecodeEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::aggregator::v1::InputProver_ContractsBytecodeEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::aggregator::v1::InputProver* Arena::CreateMaybeMessage< ::aggregator::v1::InputProver >(Arena* arena) {
  return Arena::CreateMessageInternal< ::aggregator::v1::InputProver >(arena);
}
template<> PROTOBUF_NOINLINE ::aggregator::v1::InputBlobInnerProver* Arena::CreateMaybeMessage< ::aggregator::v1::InputBlobInnerProver >(Arena* arena) {
  return Arena::CreateMessageInternal< ::aggregator::v1::InputBlobInnerProver >(arena);
}
template<> PROTOBUF_NOINLINE ::aggregator::v1::StatelessInputProver* Arena::CreateMaybeMessage< ::aggregator::v1::StatelessInputProver >(Arena* arena) {
  return Arena::CreateMessageInternal< ::aggregator::v1::StatelessInputProver >(arena);
}
template<> PROTOBUF_NOINLINE ::aggregator::v1::PublicInputsExtended* Arena::CreateMaybeMessage< ::aggregator::v1::PublicInputsExtended >(Arena* arena) {
  return Arena::CreateMessageInternal< ::aggregator::v1::PublicInputsExtended >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
